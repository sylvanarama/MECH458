
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000758  000007ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000758  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  00800106  00800106  000007f2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000824  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000864  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019b0  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef1  00000000  00000000  00002364  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca4  00000000  00000000  00003255  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000488  00000000  00000000  00003efc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000082a  00000000  00000000  00004384  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ddb  00000000  00000000  00004bae  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00005989  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	bd c0       	rjmp	.+378    	; 0x180 <__vector_1>
   6:	00 00       	nop
   8:	f1 c0       	rjmp	.+482    	; 0x1ec <__vector_2>
   a:	00 00       	nop
   c:	0d c1       	rjmp	.+538    	; 0x228 <__vector_3>
   e:	00 00       	nop
  10:	4d c1       	rjmp	.+666    	; 0x2ac <__vector_4>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	8b c0       	rjmp	.+278    	; 0x16c <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	4d c1       	rjmp	.+666    	; 0x310 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e8 e5       	ldi	r30, 0x58	; 88
  ac:	f7 e0       	ldi	r31, 0x07	; 7
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a6 30       	cpi	r26, 0x06	; 6
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a6 e0       	ldi	r26, 0x06	; 6
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	aa 33       	cpi	r26, 0x3A	; 58
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	03 d2       	rcall	.+1030   	; 0x4d6 <main>
  d0:	41 c3       	rjmp	.+1666   	; 0x754 <_exit>

000000d2 <__bad_interrupt>:
  d2:	61 c1       	rjmp	.+706    	; 0x396 <__vector_default>

000000d4 <initItem>:
		free(temp);
	}/*while*/

	q->tail = NULL;		
	return;
}//clearQueue
  d4:	87 e0       	ldi	r24, 0x07	; 7
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	1c d2       	rcall	.+1080   	; 0x512 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	16 82       	std	Z+6, r1	; 0x06
  de:	15 82       	std	Z+5, r1	; 0x05
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	08 95       	ret

000000ec <initQueue>:
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	90 e0       	ldi	r25, 0x00	; 0
  f0:	10 d2       	rcall	.+1056   	; 0x512 <malloc>
  f2:	fc 01       	movw	r30, r24
  f4:	11 82       	std	Z+1, r1	; 0x01
  f6:	10 82       	st	Z, r1
  f8:	13 82       	std	Z+3, r1	; 0x03
  fa:	12 82       	std	Z+2, r1	; 0x02
  fc:	08 95       	ret

000000fe <enqueue>:
  fe:	fc 01       	movw	r30, r24
 100:	a2 81       	ldd	r26, Z+2	; 0x02
 102:	b3 81       	ldd	r27, Z+3	; 0x03
 104:	10 97       	sbiw	r26, 0x00	; 0
 106:	39 f0       	breq	.+14     	; 0x116 <enqueue+0x18>
 108:	16 96       	adiw	r26, 0x06	; 6
 10a:	7c 93       	st	X, r23
 10c:	6e 93       	st	-X, r22
 10e:	15 97       	sbiw	r26, 0x05	; 5
 110:	73 83       	std	Z+3, r23	; 0x03
 112:	62 83       	std	Z+2, r22	; 0x02
 114:	08 95       	ret
 116:	71 83       	std	Z+1, r23	; 0x01
 118:	60 83       	st	Z, r22
 11a:	73 83       	std	Z+3, r23	; 0x03
 11c:	62 83       	std	Z+2, r22	; 0x02
 11e:	08 95       	ret

00000120 <dequeue>:
 120:	dc 01       	movw	r26, r24
 122:	ed 91       	ld	r30, X+
 124:	fc 91       	ld	r31, X
 126:	11 97       	sbiw	r26, 0x01	; 1
 128:	30 97       	sbiw	r30, 0x00	; 0
 12a:	39 f0       	breq	.+14     	; 0x13a <dequeue+0x1a>
 12c:	85 81       	ldd	r24, Z+5	; 0x05
 12e:	96 81       	ldd	r25, Z+6	; 0x06
 130:	11 96       	adiw	r26, 0x01	; 1
 132:	9c 93       	st	X, r25
 134:	8e 93       	st	-X, r24
 136:	89 2b       	or	r24, r25
 138:	21 f4       	brne	.+8      	; 0x142 <dequeue+0x22>
 13a:	13 96       	adiw	r26, 0x03	; 3
 13c:	1c 92       	st	X, r1
 13e:	1e 92       	st	-X, r1
 140:	12 97       	sbiw	r26, 0x02	; 2
 142:	cf 01       	movw	r24, r30
 144:	08 95       	ret

00000146 <deleteItem>:

void deleteItem(item* i){
 146:	7d c2       	rjmp	.+1274   	; 0x642 <free>
 148:	08 95       	ret

0000014a <size>:
 14a:	dc 01       	movw	r26, r24
 14c:	ed 91       	ld	r30, X+
 14e:	fc 91       	ld	r31, X
 150:	30 97       	sbiw	r30, 0x00	; 0
 152:	49 f0       	breq	.+18     	; 0x166 <size+0x1c>
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	01 96       	adiw	r24, 0x01	; 1
 15a:	05 80       	ldd	r0, Z+5	; 0x05
 15c:	f6 81       	ldd	r31, Z+6	; 0x06
 15e:	e0 2d       	mov	r30, r0
 160:	30 97       	sbiw	r30, 0x00	; 0
 162:	d1 f7       	brne	.-12     	; 0x158 <size+0xe>
 164:	08 95       	ret
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	08 95       	ret

0000016c <__vector_21>:
		display_reflective_reading(avg);
		mTimer(1000);
		
		update_motor_speed(MOTOR_SPEED);
	}
}//ADC_calibrate
 16c:	1f 92       	push	r1
 16e:	0f 92       	push	r0
 170:	0f b6       	in	r0, 0x3f	; 63
 172:	0f 92       	push	r0
 174:	11 24       	eor	r1, r1
 176:	0f 90       	pop	r0
 178:	0f be       	out	0x3f, r0	; 63
 17a:	0f 90       	pop	r0
 17c:	1f 90       	pop	r1
 17e:	18 95       	reti

00000180 <__vector_1>:
 180:	1f 92       	push	r1
 182:	0f 92       	push	r0
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	0f 92       	push	r0
 188:	11 24       	eor	r1, r1
 18a:	0b b6       	in	r0, 0x3b	; 59
 18c:	0f 92       	push	r0
 18e:	2f 93       	push	r18
 190:	3f 93       	push	r19
 192:	4f 93       	push	r20
 194:	5f 93       	push	r21
 196:	6f 93       	push	r22
 198:	7f 93       	push	r23
 19a:	8f 93       	push	r24
 19c:	9f 93       	push	r25
 19e:	af 93       	push	r26
 1a0:	bf 93       	push	r27
 1a2:	ef 93       	push	r30
 1a4:	ff 93       	push	r31
 1a6:	96 df       	rcall	.-212    	; 0xd4 <initItem>
 1a8:	21 e0       	ldi	r18, 0x01	; 1
 1aa:	fc 01       	movw	r30, r24
 1ac:	24 83       	std	Z+4, r18	; 0x04
 1ae:	bc 01       	movw	r22, r24
 1b0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 1b4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 1b8:	a2 df       	rcall	.-188    	; 0xfe <enqueue>
 1ba:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 1be:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 1c2:	c3 df       	rcall	.-122    	; 0x14a <size>
 1c4:	88 b9       	out	0x08, r24	; 8
 1c6:	ff 91       	pop	r31
 1c8:	ef 91       	pop	r30
 1ca:	bf 91       	pop	r27
 1cc:	af 91       	pop	r26
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	7f 91       	pop	r23
 1d4:	6f 91       	pop	r22
 1d6:	5f 91       	pop	r21
 1d8:	4f 91       	pop	r20
 1da:	3f 91       	pop	r19
 1dc:	2f 91       	pop	r18
 1de:	0f 90       	pop	r0
 1e0:	0b be       	out	0x3b, r0	; 59
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <__vector_2>:
 1ec:	1f 92       	push	r1
 1ee:	0f 92       	push	r0
 1f0:	0f b6       	in	r0, 0x3f	; 63
 1f2:	0f 92       	push	r0
 1f4:	11 24       	eor	r1, r1
 1f6:	0b b6       	in	r0, 0x3b	; 59
 1f8:	0f 92       	push	r0
 1fa:	8f 93       	push	r24
 1fc:	ef 93       	push	r30
 1fe:	ff 93       	push	r31
 200:	47 9a       	sbi	0x08, 7	; 8
 202:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 206:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 20a:	01 90       	ld	r0, Z+
 20c:	f0 81       	ld	r31, Z
 20e:	e0 2d       	mov	r30, r0
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	80 83       	st	Z, r24
 214:	ff 91       	pop	r31
 216:	ef 91       	pop	r30
 218:	8f 91       	pop	r24
 21a:	0f 90       	pop	r0
 21c:	0b be       	out	0x3b, r0	; 59
 21e:	0f 90       	pop	r0
 220:	0f be       	out	0x3f, r0	; 63
 222:	0f 90       	pop	r0
 224:	1f 90       	pop	r1
 226:	18 95       	reti

00000228 <__vector_3>:
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	0b b6       	in	r0, 0x3b	; 59
 234:	0f 92       	push	r0
 236:	8f 93       	push	r24
 238:	9f 93       	push	r25
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
 23e:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <reflective_present>
 242:	88 23       	and	r24, r24
 244:	01 f1       	breq	.+64     	; 0x286 <__vector_3+0x5e>
 246:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
 24a:	82 30       	cpi	r24, 0x02	; 2
 24c:	b1 f4       	brne	.+44     	; 0x27a <__vector_3+0x52>
 24e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 252:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 256:	01 90       	ld	r0, Z+
 258:	f0 81       	ld	r31, Z
 25a:	e0 2d       	mov	r30, r0
 25c:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <ADC_lowest_val>
 260:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <ADC_lowest_val+0x1>
 264:	92 83       	std	Z+2, r25	; 0x02
 266:	81 83       	std	Z+1, r24	; 0x01
 268:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 26c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 270:	01 90       	ld	r0, Z+
 272:	f0 81       	ld	r31, Z
 274:	e0 2d       	mov	r30, r0
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	84 83       	std	Z+4, r24	; 0x04
 27a:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <reflective_present>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <item_ready>
 284:	08 c0       	rjmp	.+16     	; 0x296 <__vector_3+0x6e>
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <reflective_present>
 28c:	ea e7       	ldi	r30, 0x7A	; 122
 28e:	f0 e0       	ldi	r31, 0x00	; 0
 290:	80 81       	ld	r24, Z
 292:	80 64       	ori	r24, 0x40	; 64
 294:	80 83       	st	Z, r24
 296:	ff 91       	pop	r31
 298:	ef 91       	pop	r30
 29a:	9f 91       	pop	r25
 29c:	8f 91       	pop	r24
 29e:	0f 90       	pop	r0
 2a0:	0b be       	out	0x3b, r0	; 59
 2a2:	0f 90       	pop	r0
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	0f 90       	pop	r0
 2a8:	1f 90       	pop	r1
 2aa:	18 95       	reti

000002ac <__vector_4>:
 2ac:	1f 92       	push	r1
 2ae:	0f 92       	push	r0
 2b0:	0f b6       	in	r0, 0x3f	; 63
 2b2:	0f 92       	push	r0
 2b4:	11 24       	eor	r1, r1
 2b6:	0b b6       	in	r0, 0x3b	; 59
 2b8:	0f 92       	push	r0
 2ba:	2f 93       	push	r18
 2bc:	3f 93       	push	r19
 2be:	4f 93       	push	r20
 2c0:	5f 93       	push	r21
 2c2:	6f 93       	push	r22
 2c4:	7f 93       	push	r23
 2c6:	8f 93       	push	r24
 2c8:	9f 93       	push	r25
 2ca:	af 93       	push	r26
 2cc:	bf 93       	push	r27
 2ce:	ef 93       	push	r30
 2d0:	ff 93       	push	r31
 2d2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 2d6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 2da:	22 df       	rcall	.-444    	; 0x120 <dequeue>
 2dc:	34 df       	rcall	.-408    	; 0x146 <deleteItem>
 2de:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 2e2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 2e6:	31 df       	rcall	.-414    	; 0x14a <size>
 2e8:	88 b9       	out	0x08, r24	; 8
 2ea:	ff 91       	pop	r31
 2ec:	ef 91       	pop	r30
 2ee:	bf 91       	pop	r27
 2f0:	af 91       	pop	r26
 2f2:	9f 91       	pop	r25
 2f4:	8f 91       	pop	r24
 2f6:	7f 91       	pop	r23
 2f8:	6f 91       	pop	r22
 2fa:	5f 91       	pop	r21
 2fc:	4f 91       	pop	r20
 2fe:	3f 91       	pop	r19
 300:	2f 91       	pop	r18
 302:	0f 90       	pop	r0
 304:	0b be       	out	0x3b, r0	; 59
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <__vector_29>:
 310:	1f 92       	push	r1
 312:	0f 92       	push	r0
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	0f 92       	push	r0
 318:	11 24       	eor	r1, r1
 31a:	0b b6       	in	r0, 0x3b	; 59
 31c:	0f 92       	push	r0
 31e:	2f 93       	push	r18
 320:	3f 93       	push	r19
 322:	8f 93       	push	r24
 324:	9f 93       	push	r25
 326:	ef 93       	push	r30
 328:	ff 93       	push	r31
 32a:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <reflective_present>
 32e:	88 23       	and	r24, r24
 330:	29 f1       	breq	.+74     	; 0x37c <__vector_29+0x6c>
 332:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 336:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	98 2f       	mov	r25, r24
 33e:	88 27       	eor	r24, r24
 340:	82 0f       	add	r24, r18
 342:	91 1d       	adc	r25, r1
 344:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ADC_result+0x1>
 348:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ADC_result>
 34c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <ADC_result>
 350:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <ADC_result+0x1>
 354:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <ADC_lowest_val>
 358:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <ADC_lowest_val+0x1>
 35c:	28 17       	cp	r18, r24
 35e:	39 07       	cpc	r19, r25
 360:	40 f4       	brcc	.+16     	; 0x372 <__vector_29+0x62>
 362:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ADC_result>
 366:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ADC_result+0x1>
 36a:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_lowest_val+0x1>
 36e:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_lowest_val>
 372:	ea e7       	ldi	r30, 0x7A	; 122
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	80 64       	ori	r24, 0x40	; 64
 37a:	80 83       	st	Z, r24
 37c:	ff 91       	pop	r31
 37e:	ef 91       	pop	r30
 380:	9f 91       	pop	r25
 382:	8f 91       	pop	r24
 384:	3f 91       	pop	r19
 386:	2f 91       	pop	r18
 388:	0f 90       	pop	r0
 38a:	0b be       	out	0x3b, r0	; 59
 38c:	0f 90       	pop	r0
 38e:	0f be       	out	0x3f, r0	; 63
 390:	0f 90       	pop	r0
 392:	1f 90       	pop	r1
 394:	18 95       	reti

00000396 <__vector_default>:
 396:	1f 92       	push	r1
 398:	0f 92       	push	r0
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	0f 92       	push	r0
 39e:	11 24       	eor	r1, r1
 3a0:	0f 90       	pop	r0
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	0f 90       	pop	r0
 3a6:	1f 90       	pop	r1
 3a8:	18 95       	reti

000003aa <init_interrupts>:
 3aa:	8a e9       	ldi	r24, 0x9A	; 154
 3ac:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 3b0:	8d b3       	in	r24, 0x1d	; 29
 3b2:	8f 60       	ori	r24, 0x0F	; 15
 3b4:	8d bb       	out	0x1d, r24	; 29
 3b6:	08 95       	ret

000003b8 <init_timer0_pwm>:
 3b8:	84 b5       	in	r24, 0x24	; 36
 3ba:	83 68       	ori	r24, 0x83	; 131
 3bc:	84 bd       	out	0x24, r24	; 36
 3be:	85 b5       	in	r24, 0x25	; 37
 3c0:	82 60       	ori	r24, 0x02	; 2
 3c2:	85 bd       	out	0x25, r24	; 37
 3c4:	80 e8       	ldi	r24, 0x80	; 128
 3c6:	87 bd       	out	0x27, r24	; 39
 3c8:	08 95       	ret

000003ca <init_motor>:
 3ca:	84 e0       	ldi	r24, 0x04	; 4
 3cc:	85 b9       	out	0x05, r24	; 5
 3ce:	80 e7       	ldi	r24, 0x70	; 112
 3d0:	87 bd       	out	0x27, r24	; 39
 3d2:	08 95       	ret

000003d4 <init_ADC>:
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	93 e0       	ldi	r25, 0x03	; 3
 3d8:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ADC_result+0x1>
 3dc:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ADC_result>
 3e0:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_lowest_val+0x1>
 3e4:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_lowest_val>
 3e8:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <reflective_present>
 3ec:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <item_ready>
 3f0:	ec e7       	ldi	r30, 0x7C	; 124
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	80 64       	ori	r24, 0x40	; 64
 3f8:	80 83       	st	Z, r24
 3fa:	ea e7       	ldi	r30, 0x7A	; 122
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	82 60       	ori	r24, 0x02	; 2
 402:	80 83       	st	Z, r24
 404:	80 81       	ld	r24, Z
 406:	81 60       	ori	r24, 0x01	; 1
 408:	80 83       	st	Z, r24
 40a:	80 81       	ld	r24, Z
 40c:	88 60       	ori	r24, 0x08	; 8
 40e:	80 83       	st	Z, r24
 410:	80 81       	ld	r24, Z
 412:	80 68       	ori	r24, 0x80	; 128
 414:	80 83       	st	Z, r24
 416:	08 95       	ret

00000418 <classify_item>:
 418:	ff 92       	push	r15
 41a:	0f 93       	push	r16
 41c:	1f 93       	push	r17
 41e:	cf 93       	push	r28
 420:	df 93       	push	r29
 422:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <__data_end>
 426:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <__data_end+0x1>
 42a:	08 81       	ld	r16, Y
 42c:	19 81       	ldd	r17, Y+1	; 0x01
 42e:	f8 01       	movw	r30, r16
 430:	a1 81       	ldd	r26, Z+1	; 0x01
 432:	b2 81       	ldd	r27, Z+2	; 0x02
 434:	f0 80       	ld	r15, Z
 436:	21 e0       	ldi	r18, 0x01	; 1
 438:	40 e0       	ldi	r20, 0x00	; 0
 43a:	50 e0       	ldi	r21, 0x00	; 0
 43c:	6f ef       	ldi	r22, 0xFF	; 255
 43e:	73 e0       	ldi	r23, 0x03	; 3
 440:	30 e0       	ldi	r19, 0x00	; 0
 442:	fa 01       	movw	r30, r20
 444:	ee 0f       	add	r30, r30
 446:	ff 1f       	adc	r31, r31
 448:	ee 0f       	add	r30, r30
 44a:	ff 1f       	adc	r31, r31
 44c:	ee 0f       	add	r30, r30
 44e:	ff 1f       	adc	r31, r31
 450:	e1 5f       	subi	r30, 0xF1	; 241
 452:	fe 4f       	sbci	r31, 0xFE	; 254
 454:	84 81       	ldd	r24, Z+4	; 0x04
 456:	95 81       	ldd	r25, Z+5	; 0x05
 458:	8a 1b       	sub	r24, r26
 45a:	9b 0b       	sbc	r25, r27
 45c:	fc 01       	movw	r30, r24
 45e:	22 f4       	brpl	.+8      	; 0x468 <classify_item+0x50>
 460:	ee 27       	eor	r30, r30
 462:	ff 27       	eor	r31, r31
 464:	e8 1b       	sub	r30, r24
 466:	f9 0b       	sbc	r31, r25
 468:	e6 17       	cp	r30, r22
 46a:	f7 07       	cpc	r31, r23
 46c:	10 f4       	brcc	.+4      	; 0x472 <classify_item+0x5a>
 46e:	bf 01       	movw	r22, r30
 470:	32 2f       	mov	r19, r18
 472:	4f 5f       	subi	r20, 0xFF	; 255
 474:	5f 4f       	sbci	r21, 0xFF	; 255
 476:	2f 5f       	subi	r18, 0xFF	; 255
 478:	25 30       	cpi	r18, 0x05	; 5
 47a:	19 f7       	brne	.-58     	; 0x442 <classify_item+0x2a>
 47c:	31 30       	cpi	r19, 0x01	; 1
 47e:	29 f4       	brne	.+10     	; 0x48a <classify_item+0x72>
 480:	f1 10       	cpse	r15, r1
 482:	13 c0       	rjmp	.+38     	; 0x4aa <classify_item+0x92>
 484:	f8 01       	movw	r30, r16
 486:	33 83       	std	Z+3, r19	; 0x03
 488:	10 c0       	rjmp	.+32     	; 0x4aa <classify_item+0x92>
 48a:	32 30       	cpi	r19, 0x02	; 2
 48c:	29 f4       	brne	.+10     	; 0x498 <classify_item+0x80>
 48e:	f1 10       	cpse	r15, r1
 490:	15 c0       	rjmp	.+42     	; 0x4bc <classify_item+0xa4>
 492:	f8 01       	movw	r30, r16
 494:	33 83       	std	Z+3, r19	; 0x03
 496:	12 c0       	rjmp	.+36     	; 0x4bc <classify_item+0xa4>
 498:	33 30       	cpi	r19, 0x03	; 3
 49a:	39 f4       	brne	.+14     	; 0x4aa <classify_item+0x92>
 49c:	f1 e0       	ldi	r31, 0x01	; 1
 49e:	ff 12       	cpse	r15, r31
 4a0:	0d c0       	rjmp	.+26     	; 0x4bc <classify_item+0xa4>
 4a2:	e8 81       	ld	r30, Y
 4a4:	f9 81       	ldd	r31, Y+1	; 0x01
 4a6:	33 83       	std	Z+3, r19	; 0x03
 4a8:	09 c0       	rjmp	.+18     	; 0x4bc <classify_item+0xa4>
 4aa:	34 30       	cpi	r19, 0x04	; 4
 4ac:	39 f4       	brne	.+14     	; 0x4bc <classify_item+0xa4>
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	f8 12       	cpse	r15, r24
 4b2:	04 c0       	rjmp	.+8      	; 0x4bc <classify_item+0xa4>
 4b4:	e8 81       	ld	r30, Y
 4b6:	f9 81       	ldd	r31, Y+1	; 0x01
 4b8:	33 83       	std	Z+3, r19	; 0x03
 4ba:	03 c0       	rjmp	.+6      	; 0x4c2 <classify_item+0xaa>
 4bc:	e8 81       	ld	r30, Y
 4be:	f9 81       	ldd	r31, Y+1	; 0x01
 4c0:	13 82       	std	Z+3, r1	; 0x03
 4c2:	e8 81       	ld	r30, Y
 4c4:	f9 81       	ldd	r31, Y+1	; 0x01
 4c6:	83 e0       	ldi	r24, 0x03	; 3
 4c8:	84 83       	std	Z+4, r24	; 0x04
 4ca:	df 91       	pop	r29
 4cc:	cf 91       	pop	r28
 4ce:	1f 91       	pop	r17
 4d0:	0f 91       	pop	r16
 4d2:	ff 90       	pop	r15
 4d4:	08 95       	ret

000004d6 <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 4d6:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal
 4d8:	8f e8       	ldi	r24, 0x8F	; 143
 4da:	84 b9       	out	0x04, r24	; 4
						// PB3:0 = output for motor
	DDRC = 0xFF;		// Port C all output (LEDs)
 4dc:	8f ef       	ldi	r24, 0xFF	; 255
 4de:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 4e0:	80 ef       	ldi	r24, 0xF0	; 240
 4e2:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 4e4:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 4e6:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 4e8:	18 b8       	out	0x08, r1	; 8
	
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_motor();
 4ea:	f8 94       	cli
	init_interrupts();
 4ec:	73 df       	rcall	.-282    	; 0x3d4 <init_ADC>
 4ee:	64 df       	rcall	.-312    	; 0x3b8 <init_timer0_pwm>
	//init_stepper();
	sei();
 4f0:	6c df       	rcall	.-296    	; 0x3ca <init_motor>

	// Calibrate ADC before program starts
	//ADC_calibrate();

	itemList = initQueue();
 4f2:	5b df       	rcall	.-330    	; 0x3aa <init_interrupts>
 4f4:	78 94       	sei
 4f6:	fa dd       	rcall	.-1036   	; 0xec <initQueue>
 4f8:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 4fc:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	STATE = OPERATIONAL;
 500:	82 e0       	ldi	r24, 0x02	; 2
		
	// Main Program
	while (1)
	{
		if(item_ready)
 502:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <STATE>
 506:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <item_ready>
		{
			classify_item();
 50a:	88 23       	and	r24, r24
 50c:	e1 f3       	breq	.-8      	; 0x506 <main+0x30>
 50e:	84 df       	rcall	.-248    	; 0x418 <classify_item>
 510:	fa cf       	rjmp	.-12     	; 0x506 <main+0x30>

00000512 <malloc>:
 512:	0f 93       	push	r16
 514:	1f 93       	push	r17
 516:	cf 93       	push	r28
 518:	df 93       	push	r29
 51a:	82 30       	cpi	r24, 0x02	; 2
 51c:	91 05       	cpc	r25, r1
 51e:	10 f4       	brcc	.+4      	; 0x524 <malloc+0x12>
 520:	82 e0       	ldi	r24, 0x02	; 2
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <__flp>
 528:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <__flp+0x1>
 52c:	20 e0       	ldi	r18, 0x00	; 0
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	a0 e0       	ldi	r26, 0x00	; 0
 532:	b0 e0       	ldi	r27, 0x00	; 0
 534:	30 97       	sbiw	r30, 0x00	; 0
 536:	19 f1       	breq	.+70     	; 0x57e <malloc+0x6c>
 538:	40 81       	ld	r20, Z
 53a:	51 81       	ldd	r21, Z+1	; 0x01
 53c:	02 81       	ldd	r16, Z+2	; 0x02
 53e:	13 81       	ldd	r17, Z+3	; 0x03
 540:	48 17       	cp	r20, r24
 542:	59 07       	cpc	r21, r25
 544:	c8 f0       	brcs	.+50     	; 0x578 <malloc+0x66>
 546:	84 17       	cp	r24, r20
 548:	95 07       	cpc	r25, r21
 54a:	69 f4       	brne	.+26     	; 0x566 <malloc+0x54>
 54c:	10 97       	sbiw	r26, 0x00	; 0
 54e:	31 f0       	breq	.+12     	; 0x55c <malloc+0x4a>
 550:	12 96       	adiw	r26, 0x02	; 2
 552:	0c 93       	st	X, r16
 554:	12 97       	sbiw	r26, 0x02	; 2
 556:	13 96       	adiw	r26, 0x03	; 3
 558:	1c 93       	st	X, r17
 55a:	27 c0       	rjmp	.+78     	; 0x5aa <malloc+0x98>
 55c:	00 93 38 01 	sts	0x0138, r16	; 0x800138 <__flp>
 560:	10 93 39 01 	sts	0x0139, r17	; 0x800139 <__flp+0x1>
 564:	22 c0       	rjmp	.+68     	; 0x5aa <malloc+0x98>
 566:	21 15       	cp	r18, r1
 568:	31 05       	cpc	r19, r1
 56a:	19 f0       	breq	.+6      	; 0x572 <malloc+0x60>
 56c:	42 17       	cp	r20, r18
 56e:	53 07       	cpc	r21, r19
 570:	18 f4       	brcc	.+6      	; 0x578 <malloc+0x66>
 572:	9a 01       	movw	r18, r20
 574:	bd 01       	movw	r22, r26
 576:	ef 01       	movw	r28, r30
 578:	df 01       	movw	r26, r30
 57a:	f8 01       	movw	r30, r16
 57c:	db cf       	rjmp	.-74     	; 0x534 <malloc+0x22>
 57e:	21 15       	cp	r18, r1
 580:	31 05       	cpc	r19, r1
 582:	f9 f0       	breq	.+62     	; 0x5c2 <malloc+0xb0>
 584:	28 1b       	sub	r18, r24
 586:	39 0b       	sbc	r19, r25
 588:	24 30       	cpi	r18, 0x04	; 4
 58a:	31 05       	cpc	r19, r1
 58c:	80 f4       	brcc	.+32     	; 0x5ae <malloc+0x9c>
 58e:	8a 81       	ldd	r24, Y+2	; 0x02
 590:	9b 81       	ldd	r25, Y+3	; 0x03
 592:	61 15       	cp	r22, r1
 594:	71 05       	cpc	r23, r1
 596:	21 f0       	breq	.+8      	; 0x5a0 <malloc+0x8e>
 598:	fb 01       	movw	r30, r22
 59a:	93 83       	std	Z+3, r25	; 0x03
 59c:	82 83       	std	Z+2, r24	; 0x02
 59e:	04 c0       	rjmp	.+8      	; 0x5a8 <malloc+0x96>
 5a0:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__flp+0x1>
 5a4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__flp>
 5a8:	fe 01       	movw	r30, r28
 5aa:	32 96       	adiw	r30, 0x02	; 2
 5ac:	44 c0       	rjmp	.+136    	; 0x636 <malloc+0x124>
 5ae:	fe 01       	movw	r30, r28
 5b0:	e2 0f       	add	r30, r18
 5b2:	f3 1f       	adc	r31, r19
 5b4:	81 93       	st	Z+, r24
 5b6:	91 93       	st	Z+, r25
 5b8:	22 50       	subi	r18, 0x02	; 2
 5ba:	31 09       	sbc	r19, r1
 5bc:	39 83       	std	Y+1, r19	; 0x01
 5be:	28 83       	st	Y, r18
 5c0:	3a c0       	rjmp	.+116    	; 0x636 <malloc+0x124>
 5c2:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 5c6:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 5ca:	23 2b       	or	r18, r19
 5cc:	41 f4       	brne	.+16     	; 0x5de <malloc+0xcc>
 5ce:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 5d2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 5d6:	30 93 37 01 	sts	0x0137, r19	; 0x800137 <__brkval+0x1>
 5da:	20 93 36 01 	sts	0x0136, r18	; 0x800136 <__brkval>
 5de:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 5e2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 5e6:	21 15       	cp	r18, r1
 5e8:	31 05       	cpc	r19, r1
 5ea:	41 f4       	brne	.+16     	; 0x5fc <malloc+0xea>
 5ec:	2d b7       	in	r18, 0x3d	; 61
 5ee:	3e b7       	in	r19, 0x3e	; 62
 5f0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 5f4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 5f8:	24 1b       	sub	r18, r20
 5fa:	35 0b       	sbc	r19, r21
 5fc:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <__brkval>
 600:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <__brkval+0x1>
 604:	e2 17       	cp	r30, r18
 606:	f3 07       	cpc	r31, r19
 608:	a0 f4       	brcc	.+40     	; 0x632 <malloc+0x120>
 60a:	2e 1b       	sub	r18, r30
 60c:	3f 0b       	sbc	r19, r31
 60e:	28 17       	cp	r18, r24
 610:	39 07       	cpc	r19, r25
 612:	78 f0       	brcs	.+30     	; 0x632 <malloc+0x120>
 614:	ac 01       	movw	r20, r24
 616:	4e 5f       	subi	r20, 0xFE	; 254
 618:	5f 4f       	sbci	r21, 0xFF	; 255
 61a:	24 17       	cp	r18, r20
 61c:	35 07       	cpc	r19, r21
 61e:	48 f0       	brcs	.+18     	; 0x632 <malloc+0x120>
 620:	4e 0f       	add	r20, r30
 622:	5f 1f       	adc	r21, r31
 624:	50 93 37 01 	sts	0x0137, r21	; 0x800137 <__brkval+0x1>
 628:	40 93 36 01 	sts	0x0136, r20	; 0x800136 <__brkval>
 62c:	81 93       	st	Z+, r24
 62e:	91 93       	st	Z+, r25
 630:	02 c0       	rjmp	.+4      	; 0x636 <malloc+0x124>
 632:	e0 e0       	ldi	r30, 0x00	; 0
 634:	f0 e0       	ldi	r31, 0x00	; 0
 636:	cf 01       	movw	r24, r30
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	1f 91       	pop	r17
 63e:	0f 91       	pop	r16
 640:	08 95       	ret

00000642 <free>:
 642:	cf 93       	push	r28
 644:	df 93       	push	r29
 646:	00 97       	sbiw	r24, 0x00	; 0
 648:	09 f4       	brne	.+2      	; 0x64c <free+0xa>
 64a:	81 c0       	rjmp	.+258    	; 0x74e <free+0x10c>
 64c:	fc 01       	movw	r30, r24
 64e:	32 97       	sbiw	r30, 0x02	; 2
 650:	13 82       	std	Z+3, r1	; 0x03
 652:	12 82       	std	Z+2, r1	; 0x02
 654:	a0 91 38 01 	lds	r26, 0x0138	; 0x800138 <__flp>
 658:	b0 91 39 01 	lds	r27, 0x0139	; 0x800139 <__flp+0x1>
 65c:	10 97       	sbiw	r26, 0x00	; 0
 65e:	81 f4       	brne	.+32     	; 0x680 <free+0x3e>
 660:	20 81       	ld	r18, Z
 662:	31 81       	ldd	r19, Z+1	; 0x01
 664:	82 0f       	add	r24, r18
 666:	93 1f       	adc	r25, r19
 668:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 66c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 670:	28 17       	cp	r18, r24
 672:	39 07       	cpc	r19, r25
 674:	51 f5       	brne	.+84     	; 0x6ca <free+0x88>
 676:	f0 93 37 01 	sts	0x0137, r31	; 0x800137 <__brkval+0x1>
 67a:	e0 93 36 01 	sts	0x0136, r30	; 0x800136 <__brkval>
 67e:	67 c0       	rjmp	.+206    	; 0x74e <free+0x10c>
 680:	ed 01       	movw	r28, r26
 682:	20 e0       	ldi	r18, 0x00	; 0
 684:	30 e0       	ldi	r19, 0x00	; 0
 686:	ce 17       	cp	r28, r30
 688:	df 07       	cpc	r29, r31
 68a:	40 f4       	brcc	.+16     	; 0x69c <free+0x5a>
 68c:	4a 81       	ldd	r20, Y+2	; 0x02
 68e:	5b 81       	ldd	r21, Y+3	; 0x03
 690:	9e 01       	movw	r18, r28
 692:	41 15       	cp	r20, r1
 694:	51 05       	cpc	r21, r1
 696:	f1 f0       	breq	.+60     	; 0x6d4 <free+0x92>
 698:	ea 01       	movw	r28, r20
 69a:	f5 cf       	rjmp	.-22     	; 0x686 <free+0x44>
 69c:	d3 83       	std	Z+3, r29	; 0x03
 69e:	c2 83       	std	Z+2, r28	; 0x02
 6a0:	40 81       	ld	r20, Z
 6a2:	51 81       	ldd	r21, Z+1	; 0x01
 6a4:	84 0f       	add	r24, r20
 6a6:	95 1f       	adc	r25, r21
 6a8:	c8 17       	cp	r28, r24
 6aa:	d9 07       	cpc	r29, r25
 6ac:	59 f4       	brne	.+22     	; 0x6c4 <free+0x82>
 6ae:	88 81       	ld	r24, Y
 6b0:	99 81       	ldd	r25, Y+1	; 0x01
 6b2:	84 0f       	add	r24, r20
 6b4:	95 1f       	adc	r25, r21
 6b6:	02 96       	adiw	r24, 0x02	; 2
 6b8:	91 83       	std	Z+1, r25	; 0x01
 6ba:	80 83       	st	Z, r24
 6bc:	8a 81       	ldd	r24, Y+2	; 0x02
 6be:	9b 81       	ldd	r25, Y+3	; 0x03
 6c0:	93 83       	std	Z+3, r25	; 0x03
 6c2:	82 83       	std	Z+2, r24	; 0x02
 6c4:	21 15       	cp	r18, r1
 6c6:	31 05       	cpc	r19, r1
 6c8:	29 f4       	brne	.+10     	; 0x6d4 <free+0x92>
 6ca:	f0 93 39 01 	sts	0x0139, r31	; 0x800139 <__flp+0x1>
 6ce:	e0 93 38 01 	sts	0x0138, r30	; 0x800138 <__flp>
 6d2:	3d c0       	rjmp	.+122    	; 0x74e <free+0x10c>
 6d4:	e9 01       	movw	r28, r18
 6d6:	fb 83       	std	Y+3, r31	; 0x03
 6d8:	ea 83       	std	Y+2, r30	; 0x02
 6da:	49 91       	ld	r20, Y+
 6dc:	59 91       	ld	r21, Y+
 6de:	c4 0f       	add	r28, r20
 6e0:	d5 1f       	adc	r29, r21
 6e2:	ec 17       	cp	r30, r28
 6e4:	fd 07       	cpc	r31, r29
 6e6:	61 f4       	brne	.+24     	; 0x700 <free+0xbe>
 6e8:	80 81       	ld	r24, Z
 6ea:	91 81       	ldd	r25, Z+1	; 0x01
 6ec:	84 0f       	add	r24, r20
 6ee:	95 1f       	adc	r25, r21
 6f0:	02 96       	adiw	r24, 0x02	; 2
 6f2:	e9 01       	movw	r28, r18
 6f4:	99 83       	std	Y+1, r25	; 0x01
 6f6:	88 83       	st	Y, r24
 6f8:	82 81       	ldd	r24, Z+2	; 0x02
 6fa:	93 81       	ldd	r25, Z+3	; 0x03
 6fc:	9b 83       	std	Y+3, r25	; 0x03
 6fe:	8a 83       	std	Y+2, r24	; 0x02
 700:	e0 e0       	ldi	r30, 0x00	; 0
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	12 96       	adiw	r26, 0x02	; 2
 706:	8d 91       	ld	r24, X+
 708:	9c 91       	ld	r25, X
 70a:	13 97       	sbiw	r26, 0x03	; 3
 70c:	00 97       	sbiw	r24, 0x00	; 0
 70e:	19 f0       	breq	.+6      	; 0x716 <free+0xd4>
 710:	fd 01       	movw	r30, r26
 712:	dc 01       	movw	r26, r24
 714:	f7 cf       	rjmp	.-18     	; 0x704 <free+0xc2>
 716:	8d 91       	ld	r24, X+
 718:	9c 91       	ld	r25, X
 71a:	11 97       	sbiw	r26, 0x01	; 1
 71c:	9d 01       	movw	r18, r26
 71e:	2e 5f       	subi	r18, 0xFE	; 254
 720:	3f 4f       	sbci	r19, 0xFF	; 255
 722:	82 0f       	add	r24, r18
 724:	93 1f       	adc	r25, r19
 726:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <__brkval>
 72a:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <__brkval+0x1>
 72e:	28 17       	cp	r18, r24
 730:	39 07       	cpc	r19, r25
 732:	69 f4       	brne	.+26     	; 0x74e <free+0x10c>
 734:	30 97       	sbiw	r30, 0x00	; 0
 736:	29 f4       	brne	.+10     	; 0x742 <free+0x100>
 738:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <__flp+0x1>
 73c:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <__flp>
 740:	02 c0       	rjmp	.+4      	; 0x746 <free+0x104>
 742:	13 82       	std	Z+3, r1	; 0x03
 744:	12 82       	std	Z+2, r1	; 0x02
 746:	b0 93 37 01 	sts	0x0137, r27	; 0x800137 <__brkval+0x1>
 74a:	a0 93 36 01 	sts	0x0136, r26	; 0x800136 <__brkval>
 74e:	df 91       	pop	r29
 750:	cf 91       	pop	r28
 752:	08 95       	ret

00000754 <_exit>:
 754:	f8 94       	cli

00000756 <__stop_program>:
 756:	ff cf       	rjmp	.-2      	; 0x756 <__stop_program>
