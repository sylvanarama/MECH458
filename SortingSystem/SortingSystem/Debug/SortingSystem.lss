
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000484  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800100  00800100  000004f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000528  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000568  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000142d  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cee  00000000  00000000  00001a65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000099f  00000000  00000000  00002753  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f4  00000000  00000000  000030f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000783  00000000  00000000  000033e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000926  00000000  00000000  00003b6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004491  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	d4 c0       	rjmp	.+424    	; 0x1ae <__vector_1>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	6d c0       	rjmp	.+218    	; 0xe8 <__vector_3>
   e:	00 00       	nop
  10:	dd c0       	rjmp	.+442    	; 0x1cc <__vector_4>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	5f c0       	rjmp	.+190    	; 0x134 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e4 e8       	ldi	r30, 0x84	; 132
  ac:	f4 e0       	ldi	r31, 0x04	; 4
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a0 30       	cpi	r26, 0x00	; 0
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a0 e0       	ldi	r26, 0x00	; 0
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ae 30       	cpi	r26, 0x0E	; 14
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	a9 d1       	rcall	.+850    	; 0x422 <main>
  d0:	d7 c1       	rjmp	.+942    	; 0x480 <_exit>

000000d2 <__bad_interrupt>:
  d2:	8b c0       	rjmp	.+278    	; 0x1ea <__vector_default>

000000d4 <__vector_21>:
	if((v[1][0] < r)  && (r < v[1][1]) && (m == 0)) q->head->type = 2; // black
	if((v[2][0] < r)  && (r < v[2][1]) && (m == 1)) q->head->type = 3; // aluminum
	if((v[3][0] < r)  && (r < v[3][1]) && (m == 1)) q->head->type = 4; // steel
	else q->head->type = 0; //unknown type
	q->head->stage = 3;
}//classify_part
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	0f 90       	pop	r0
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	0f 90       	pop	r0
  e4:	1f 90       	pop	r1
  e6:	18 95       	reti

000000e8 <__vector_3>:
  e8:	1f 92       	push	r1
  ea:	0f 92       	push	r0
  ec:	0f b6       	in	r0, 0x3f	; 63
  ee:	0f 92       	push	r0
  f0:	11 24       	eor	r1, r1
  f2:	0b b6       	in	r0, 0x3b	; 59
  f4:	0f 92       	push	r0
  f6:	8f 93       	push	r24
  f8:	ef 93       	push	r30
  fa:	ff 93       	push	r31
  fc:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <reflective_present>
 100:	88 23       	and	r24, r24
 102:	31 f0       	breq	.+12     	; 0x110 <__vector_3+0x28>
 104:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <reflective_present>
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <item_ready>
 10e:	08 c0       	rjmp	.+16     	; 0x120 <__vector_3+0x38>
 110:	81 e0       	ldi	r24, 0x01	; 1
 112:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <reflective_present>
 116:	ea e7       	ldi	r30, 0x7A	; 122
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	80 64       	ori	r24, 0x40	; 64
 11e:	80 83       	st	Z, r24
 120:	ff 91       	pop	r31
 122:	ef 91       	pop	r30
 124:	8f 91       	pop	r24
 126:	0f 90       	pop	r0
 128:	0b be       	out	0x3b, r0	; 59
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti

00000134 <__vector_29>:
 134:	1f 92       	push	r1
 136:	0f 92       	push	r0
 138:	0f b6       	in	r0, 0x3f	; 63
 13a:	0f 92       	push	r0
 13c:	11 24       	eor	r1, r1
 13e:	0b b6       	in	r0, 0x3b	; 59
 140:	0f 92       	push	r0
 142:	2f 93       	push	r18
 144:	3f 93       	push	r19
 146:	8f 93       	push	r24
 148:	9f 93       	push	r25
 14a:	ef 93       	push	r30
 14c:	ff 93       	push	r31
 14e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <reflective_present>
 152:	88 23       	and	r24, r24
 154:	f9 f0       	breq	.+62     	; 0x194 <__vector_29+0x60>
 156:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 160:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 164:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_end>
 168:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_end+0x1>
 16c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <ADC_lowest_val>
 170:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <ADC_lowest_val+0x1>
 174:	28 17       	cp	r18, r24
 176:	39 07       	cpc	r19, r25
 178:	40 f4       	brcc	.+16     	; 0x18a <__vector_29+0x56>
 17a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 17e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 182:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <ADC_lowest_val+0x1>
 186:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <ADC_lowest_val>
 18a:	ea e7       	ldi	r30, 0x7A	; 122
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	80 64       	ori	r24, 0x40	; 64
 192:	80 83       	st	Z, r24
 194:	ff 91       	pop	r31
 196:	ef 91       	pop	r30
 198:	9f 91       	pop	r25
 19a:	8f 91       	pop	r24
 19c:	3f 91       	pop	r19
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0b be       	out	0x3b, r0	; 59
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <__vector_1>:
 1ae:	1f 92       	push	r1
 1b0:	0f 92       	push	r0
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	0f 92       	push	r0
 1b6:	11 24       	eor	r1, r1
 1b8:	8f 93       	push	r24
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <STATE>
 1c0:	8f 91       	pop	r24
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <__vector_4>:
 1cc:	1f 92       	push	r1
 1ce:	0f 92       	push	r0
 1d0:	0f b6       	in	r0, 0x3f	; 63
 1d2:	0f 92       	push	r0
 1d4:	11 24       	eor	r1, r1
 1d6:	8f 93       	push	r24
 1d8:	84 e0       	ldi	r24, 0x04	; 4
 1da:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <STATE>
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <__vector_default>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	0f 90       	pop	r0
 1f6:	0f be       	out	0x3f, r0	; 63
 1f8:	0f 90       	pop	r0
 1fa:	1f 90       	pop	r1
 1fc:	18 95       	reti

000001fe <init_timer0_pwm>:
 1fe:	27 9a       	sbi	0x04, 7	; 4
 200:	84 b5       	in	r24, 0x24	; 36
 202:	83 68       	ori	r24, 0x83	; 131
 204:	84 bd       	out	0x24, r24	; 36
 206:	85 b5       	in	r24, 0x25	; 37
 208:	82 60       	ori	r24, 0x02	; 2
 20a:	85 bd       	out	0x25, r24	; 37
 20c:	80 e8       	ldi	r24, 0x80	; 128
 20e:	87 bd       	out	0x27, r24	; 39
 210:	08 95       	ret

00000212 <init_motor>:
 212:	84 e0       	ldi	r24, 0x04	; 4
 214:	85 b9       	out	0x05, r24	; 5
 216:	80 e7       	ldi	r24, 0x70	; 112
 218:	87 bd       	out	0x27, r24	; 39
 21a:	08 95       	ret

0000021c <init_ADC>:
 21c:	f8 94       	cli
 21e:	8f ef       	ldi	r24, 0xFF	; 255
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 226:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 22a:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <ADC_lowest_val+0x1>
 22e:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <ADC_lowest_val>
 232:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <reflective_present>
 236:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <item_ready>
 23a:	ea 9a       	sbi	0x1d, 2	; 29
 23c:	80 e1       	ldi	r24, 0x10	; 16
 23e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 242:	ea e7       	ldi	r30, 0x7A	; 122
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	80 81       	ld	r24, Z
 248:	80 68       	ori	r24, 0x80	; 128
 24a:	80 83       	st	Z, r24
 24c:	80 81       	ld	r24, Z
 24e:	88 60       	ori	r24, 0x08	; 8
 250:	80 83       	st	Z, r24
 252:	ec e7       	ldi	r30, 0x7C	; 124
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	80 66       	ori	r24, 0x60	; 96
 25a:	80 83       	st	Z, r24
 25c:	78 94       	sei
 25e:	08 95       	ret

00000260 <mTimer>:
 260:	ac 01       	movw	r20, r24
 262:	e1 e8       	ldi	r30, 0x81	; 129
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	90 81       	ld	r25, Z
 268:	91 60       	ori	r25, 0x01	; 1
 26a:	90 83       	st	Z, r25
 26c:	90 81       	ld	r25, Z
 26e:	98 60       	ori	r25, 0x08	; 8
 270:	90 83       	st	Z, r25
 272:	88 ee       	ldi	r24, 0xE8	; 232
 274:	93 e0       	ldi	r25, 0x03	; 3
 276:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 27a:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 27e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 282:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 286:	ef e6       	ldi	r30, 0x6F	; 111
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	90 81       	ld	r25, Z
 28c:	92 60       	ori	r25, 0x02	; 2
 28e:	90 83       	st	Z, r25
 290:	b1 9a       	sbi	0x16, 1	; 22
 292:	20 e0       	ldi	r18, 0x00	; 0
 294:	30 e0       	ldi	r19, 0x00	; 0
 296:	05 c0       	rjmp	.+10     	; 0x2a2 <mTimer+0x42>
 298:	b1 9b       	sbis	0x16, 1	; 22
 29a:	fe cf       	rjmp	.-4      	; 0x298 <mTimer+0x38>
 29c:	b1 9a       	sbi	0x16, 1	; 22
 29e:	2f 5f       	subi	r18, 0xFF	; 255
 2a0:	3f 4f       	sbci	r19, 0xFF	; 255
 2a2:	24 17       	cp	r18, r20
 2a4:	35 07       	cpc	r19, r21
 2a6:	1c f4       	brge	.+6      	; 0x2ae <mTimer+0x4e>
 2a8:	b1 9b       	sbis	0x16, 1	; 22
 2aa:	f6 cf       	rjmp	.-20     	; 0x298 <mTimer+0x38>
 2ac:	f7 cf       	rjmp	.-18     	; 0x29c <mTimer+0x3c>
 2ae:	08 95       	ret

000002b0 <ADC_calibrate>:

//Calibrate the ADC by running each part through the sensor 10 times, in the order: white, black, aluminum, steel
void ADC_calibrate(uint16_t cal_vals_final[4][4]){
 2b0:	2f 92       	push	r2
 2b2:	3f 92       	push	r3
 2b4:	4f 92       	push	r4
 2b6:	5f 92       	push	r5
 2b8:	6f 92       	push	r6
 2ba:	7f 92       	push	r7
 2bc:	8f 92       	push	r8
 2be:	9f 92       	push	r9
 2c0:	af 92       	push	r10
 2c2:	bf 92       	push	r11
 2c4:	cf 92       	push	r12
 2c6:	df 92       	push	r13
 2c8:	ef 92       	push	r14
 2ca:	ff 92       	push	r15
 2cc:	0f 93       	push	r16
 2ce:	1f 93       	push	r17
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	cd b7       	in	r28, 0x3d	; 61
 2d6:	de b7       	in	r29, 0x3e	; 62
 2d8:	64 97       	sbiw	r28, 0x14	; 20
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
	init_ADC();
 2e4:	1c 01       	movw	r2, r24
 2e6:	9a df       	rcall	.-204    	; 0x21c <init_ADC>
 2e8:	8a df       	rcall	.-236    	; 0x1fe <init_timer0_pwm>
 2ea:	93 df       	rcall	.-218    	; 0x212 <init_motor>
 2ec:	8f ef       	ldi	r24, 0xFF	; 255
 2ee:	88 b9       	out	0x08, r24	; 8
 2f0:	31 01       	movw	r6, r2
 2f2:	80 e2       	ldi	r24, 0x20	; 32
 2f4:	28 0e       	add	r2, r24
 2f6:	31 1c       	adc	r3, r1
 2f8:	cc 24       	eor	r12, r12
 2fa:	ca 94       	dec	r12
 2fc:	d1 2c       	mov	r13, r1
 2fe:	5e 01       	movw	r10, r28
 300:	e5 e1       	ldi	r30, 0x15	; 21
 302:	ae 0e       	add	r10, r30
 304:	b1 1c       	adc	r11, r1
 306:	70 c0       	rjmp	.+224    	; 0x3e8 <ADC_calibrate+0x138>
 308:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <item_ready>
 30c:	88 23       	and	r24, r24
 30e:	e1 f3       	breq	.-8      	; 0x308 <ADC_calibrate+0x58>
 310:	98 b9       	out	0x08, r25	; 8
 312:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <ADC_lowest_val>
 316:	30 91 0a 01 	lds	r19, 0x010A	; 0x80010a <ADC_lowest_val+0x1>
 31a:	21 93       	st	Z+, r18
 31c:	31 93       	st	Z+, r19
 31e:	d0 92 0a 01 	sts	0x010A, r13	; 0x80010a <ADC_lowest_val+0x1>
 322:	c0 92 09 01 	sts	0x0109, r12	; 0x800109 <ADC_lowest_val>
 326:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <item_ready>
 32a:	9f 5f       	subi	r25, 0xFF	; 255
 32c:	9b 30       	cpi	r25, 0x0B	; 11
 32e:	61 f7       	brne	.-40     	; 0x308 <ADC_calibrate+0x58>
 330:	ff ef       	ldi	r31, 0xFF	; 255
 332:	f8 b9       	out	0x08, r31	; 8
 334:	84 e6       	ldi	r24, 0x64	; 100
 336:	90 e0       	ldi	r25, 0x00	; 0
 338:	93 df       	rcall	.-218    	; 0x260 <mTimer>
 33a:	09 81       	ldd	r16, Y+1	; 0x01
 33c:	1a 81       	ldd	r17, Y+2	; 0x02
 33e:	fe 01       	movw	r30, r28
 340:	33 96       	adiw	r30, 0x03	; 3
 342:	98 01       	movw	r18, r16
 344:	78 01       	movw	r14, r16
 346:	81 91       	ld	r24, Z+
 348:	91 91       	ld	r25, Z+
 34a:	e8 16       	cp	r14, r24
 34c:	f9 06       	cpc	r15, r25
 34e:	08 f4       	brcc	.+2      	; 0x352 <ADC_calibrate+0xa2>
 350:	7c 01       	movw	r14, r24
 352:	80 17       	cp	r24, r16
 354:	91 07       	cpc	r25, r17
 356:	08 f4       	brcc	.+2      	; 0x35a <ADC_calibrate+0xaa>
 358:	8c 01       	movw	r16, r24
 35a:	28 0f       	add	r18, r24
 35c:	39 1f       	adc	r19, r25
 35e:	ea 15       	cp	r30, r10
 360:	fb 05       	cpc	r31, r11
 362:	89 f7       	brne	.-30     	; 0x346 <ADC_calibrate+0x96>
 364:	27 01       	movw	r4, r14
 366:	40 0e       	add	r4, r16
 368:	51 1e       	adc	r5, r17
 36a:	56 94       	lsr	r5
 36c:	47 94       	ror	r4
 36e:	ad ec       	ldi	r26, 0xCD	; 205
 370:	bc ec       	ldi	r27, 0xCC	; 204
 372:	77 d0       	rcall	.+238    	; 0x462 <__umulhisi3>
 374:	4c 01       	movw	r8, r24
 376:	96 94       	lsr	r9
 378:	87 94       	ror	r8
 37a:	96 94       	lsr	r9
 37c:	87 94       	ror	r8
 37e:	96 94       	lsr	r9
 380:	87 94       	ror	r8
 382:	f3 01       	movw	r30, r6
 384:	11 83       	std	Z+1, r17	; 0x01
 386:	00 83       	st	Z, r16
 388:	f3 82       	std	Z+3, r15	; 0x03
 38a:	e2 82       	std	Z+2, r14	; 0x02
 38c:	55 82       	std	Z+5, r5	; 0x05
 38e:	44 82       	std	Z+4, r4	; 0x04
 390:	97 82       	std	Z+7, r9	; 0x07
 392:	86 82       	std	Z+6, r8	; 0x06
 394:	f1 e0       	ldi	r31, 0x01	; 1
 396:	f8 b9       	out	0x08, r31	; 8
 398:	84 e6       	ldi	r24, 0x64	; 100
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	61 df       	rcall	.-318    	; 0x260 <mTimer>
 39e:	08 b9       	out	0x08, r16	; 8
 3a0:	84 ef       	ldi	r24, 0xF4	; 244
 3a2:	91 e0       	ldi	r25, 0x01	; 1
 3a4:	5d df       	rcall	.-326    	; 0x260 <mTimer>
 3a6:	82 e0       	ldi	r24, 0x02	; 2
 3a8:	88 b9       	out	0x08, r24	; 8
 3aa:	84 e6       	ldi	r24, 0x64	; 100
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	58 df       	rcall	.-336    	; 0x260 <mTimer>
 3b0:	e8 b8       	out	0x08, r14	; 8
 3b2:	84 ef       	ldi	r24, 0xF4	; 244
 3b4:	91 e0       	ldi	r25, 0x01	; 1
 3b6:	54 df       	rcall	.-344    	; 0x260 <mTimer>
 3b8:	e3 e0       	ldi	r30, 0x03	; 3
 3ba:	e8 b9       	out	0x08, r30	; 8
 3bc:	84 e6       	ldi	r24, 0x64	; 100
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	4f df       	rcall	.-354    	; 0x260 <mTimer>
 3c2:	48 b8       	out	0x08, r4	; 8
 3c4:	84 ef       	ldi	r24, 0xF4	; 244
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	4b df       	rcall	.-362    	; 0x260 <mTimer>
 3ca:	f4 e0       	ldi	r31, 0x04	; 4
 3cc:	f8 b9       	out	0x08, r31	; 8
 3ce:	84 e6       	ldi	r24, 0x64	; 100
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	46 df       	rcall	.-372    	; 0x260 <mTimer>
 3d4:	88 b8       	out	0x08, r8	; 8
 3d6:	84 ef       	ldi	r24, 0xF4	; 244
 3d8:	91 e0       	ldi	r25, 0x01	; 1
 3da:	42 df       	rcall	.-380    	; 0x260 <mTimer>
 3dc:	88 e0       	ldi	r24, 0x08	; 8
 3de:	68 0e       	add	r6, r24
 3e0:	71 1c       	adc	r7, r1
 3e2:	62 14       	cp	r6, r2
 3e4:	73 04       	cpc	r7, r3
 3e6:	21 f0       	breq	.+8      	; 0x3f0 <ADC_calibrate+0x140>
 3e8:	fe 01       	movw	r30, r28
 3ea:	31 96       	adiw	r30, 0x01	; 1
 3ec:	91 e0       	ldi	r25, 0x01	; 1
 3ee:	8c cf       	rjmp	.-232    	; 0x308 <ADC_calibrate+0x58>
 3f0:	64 96       	adiw	r28, 0x14	; 20
 3f2:	0f b6       	in	r0, 0x3f	; 63
 3f4:	f8 94       	cli
 3f6:	de bf       	out	0x3e, r29	; 62
 3f8:	0f be       	out	0x3f, r0	; 63
 3fa:	cd bf       	out	0x3d, r28	; 61
 3fc:	df 91       	pop	r29
 3fe:	cf 91       	pop	r28
 400:	1f 91       	pop	r17
 402:	0f 91       	pop	r16
 404:	ff 90       	pop	r15
 406:	ef 90       	pop	r14
 408:	df 90       	pop	r13
 40a:	cf 90       	pop	r12
 40c:	bf 90       	pop	r11
 40e:	af 90       	pop	r10
 410:	9f 90       	pop	r9
 412:	8f 90       	pop	r8
 414:	7f 90       	pop	r7
 416:	6f 90       	pop	r6
 418:	5f 90       	pop	r5
 41a:	4f 90       	pop	r4
 41c:	3f 90       	pop	r3
 41e:	2f 90       	pop	r2
 420:	08 95       	ret

00000422 <main>:
 422:	cf 93       	push	r28
 424:	df 93       	push	r29
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
 42a:	a0 97       	sbiw	r28, 0x20	; 32
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	f8 94       	cli
 430:	de bf       	out	0x3e, r29	; 62
 432:	0f be       	out	0x3f, r0	; 63
 434:	cd bf       	out	0x3d, r28	; 61
 436:	11 b8       	out	0x01, r1	; 1
 438:	8f ef       	ldi	r24, 0xFF	; 255
 43a:	87 b9       	out	0x07, r24	; 7
 43c:	90 ef       	ldi	r25, 0xF0	; 240
 43e:	9a b9       	out	0x0a, r25	; 10
 440:	10 ba       	out	0x10, r1	; 16
 442:	1d b8       	out	0x0d, r1	; 13
 444:	84 b9       	out	0x04, r24	; 4
 446:	ce 01       	movw	r24, r28
 448:	01 96       	adiw	r24, 0x01	; 1
 44a:	32 df       	rcall	.-412    	; 0x2b0 <ADC_calibrate>
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	90 e0       	ldi	r25, 0x00	; 0
 450:	a0 96       	adiw	r28, 0x20	; 32
 452:	0f b6       	in	r0, 0x3f	; 63
 454:	f8 94       	cli
 456:	de bf       	out	0x3e, r29	; 62
 458:	0f be       	out	0x3f, r0	; 63
 45a:	cd bf       	out	0x3d, r28	; 61
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	08 95       	ret

00000462 <__umulhisi3>:
 462:	a2 9f       	mul	r26, r18
 464:	b0 01       	movw	r22, r0
 466:	b3 9f       	mul	r27, r19
 468:	c0 01       	movw	r24, r0
 46a:	a3 9f       	mul	r26, r19
 46c:	70 0d       	add	r23, r0
 46e:	81 1d       	adc	r24, r1
 470:	11 24       	eor	r1, r1
 472:	91 1d       	adc	r25, r1
 474:	b2 9f       	mul	r27, r18
 476:	70 0d       	add	r23, r0
 478:	81 1d       	adc	r24, r1
 47a:	11 24       	eor	r1, r1
 47c:	91 1d       	adc	r25, r1
 47e:	08 95       	ret

00000480 <_exit>:
 480:	f8 94       	cli

00000482 <__stop_program>:
 482:	ff cf       	rjmp	.-2      	; 0x482 <__stop_program>
