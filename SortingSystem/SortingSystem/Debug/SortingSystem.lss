
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000dde  00000e72  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  0080011a  0080011a  00000e8c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cbc  00000000  00000000  0000108c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f00  00000000  00000000  00002d48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e92  00000000  00000000  00003c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  00004adc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a58  00000000  00000000  00004f74  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d68  00000000  00000000  000059cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00006734  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	e1 c0       	rjmp	.+450    	; 0x1c8 <__vector_1>
   6:	00 00       	nop
   8:	ee c0       	rjmp	.+476    	; 0x1e6 <__vector_2>
   a:	00 00       	nop
   c:	f3 c3       	rjmp	.+2022   	; 0x7f4 <__vector_3>
   e:	00 00       	nop
  10:	f9 c0       	rjmp	.+498    	; 0x204 <__vector_4>
  12:	00 00       	nop
  14:	06 c1       	rjmp	.+524    	; 0x222 <__vector_5>
  16:	00 00       	nop
  18:	26 c1       	rjmp	.+588    	; 0x266 <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	99 c0       	rjmp	.+306    	; 0x188 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	0a c1       	rjmp	.+532    	; 0x28a <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8d c0       	rjmp	.+282    	; 0x19c <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	ee ed       	ldi	r30, 0xDE	; 222
  ac:	fd e0       	ldi	r31, 0x0D	; 13
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	aa 31       	cpi	r26, 0x1A	; 26
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	aa e1       	ldi	r26, 0x1A	; 26
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a6 36       	cpi	r26, 0x66	; 102
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	75 d4       	rcall	.+2282   	; 0x9ba <main>
  d0:	84 c6       	rjmp	.+3336   	; 0xdda <_exit>

000000d2 <__bad_interrupt>:
  d2:	1e c1       	rjmp	.+572    	; 0x310 <__vector_default>

000000d4 <initItem>:
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	5f d5       	rcall	.+2750   	; 0xb98 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	52 d5       	rcall	.+2724   	; 0xb98 <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <clearQueue>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	99 81       	ldd	r25, Y+1	; 0x01
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	51 f0       	breq	.+20     	; 0x16a <clearQueue+0x22>
 156:	fc 01       	movw	r30, r24
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	37 81       	ldd	r19, Z+7	; 0x07
 15c:	39 83       	std	Y+1, r19	; 0x01
 15e:	28 83       	st	Y, r18
 160:	b3 d5       	rcall	.+2918   	; 0xcc8 <free>
 162:	88 81       	ld	r24, Y
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	b1 f7       	brne	.-20     	; 0x156 <clearQueue+0xe>
 16a:	1b 82       	std	Y+3, r1	; 0x03
 16c:	1a 82       	std	Y+2, r1	; 0x02
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <isEmpty>:
 174:	fc 01       	movw	r30, r24
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	23 2b       	or	r18, r19
 180:	11 f0       	breq	.+4      	; 0x186 <isEmpty+0x12>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	08 95       	ret

00000188 <__vector_21>:
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_32>:
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <timer3_flag>
 1ae:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <processing_for_ramp_down>
 1b2:	88 23       	and	r24, r24
 1b4:	19 f0       	breq	.+6      	; 0x1bc <__vector_32+0x20>
 1b6:	84 e0       	ldi	r24, 0x04	; 4
 1b8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 1bc:	8f 91       	pop	r24
 1be:	0f 90       	pop	r0
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	0f 90       	pop	r0
 1c4:	1f 90       	pop	r1
 1c6:	18 95       	reti

000001c8 <__vector_1>:
 1c8:	1f 92       	push	r1
 1ca:	0f 92       	push	r0
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	0f 92       	push	r0
 1d0:	11 24       	eor	r1, r1
 1d2:	8f 93       	push	r24
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <OS1_flag>
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <__vector_2>:
 1e6:	1f 92       	push	r1
 1e8:	0f 92       	push	r0
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	0f 92       	push	r0
 1ee:	11 24       	eor	r1, r1
 1f0:	8f 93       	push	r24
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <FER_flag>
 1f8:	8f 91       	pop	r24
 1fa:	0f 90       	pop	r0
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	0f 90       	pop	r0
 200:	1f 90       	pop	r1
 202:	18 95       	reti

00000204 <__vector_4>:
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	8f 93       	push	r24
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <OS3_flag>
 216:	8f 91       	pop	r24
 218:	0f 90       	pop	r0
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	0f 90       	pop	r0
 21e:	1f 90       	pop	r1
 220:	18 95       	reti

00000222 <__vector_5>:
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	8f 93       	push	r24
 22e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	39 f4       	brne	.+14     	; 0x244 <__vector_5+0x22>
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 23c:	83 e0       	ldi	r24, 0x03	; 3
 23e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 242:	0b c0       	rjmp	.+22     	; 0x25a <__vector_5+0x38>
 244:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 248:	83 30       	cpi	r24, 0x03	; 3
 24a:	39 f4       	brne	.+14     	; 0x25a <__vector_5+0x38>
 24c:	82 e0       	ldi	r24, 0x02	; 2
 24e:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 252:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 256:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
 25a:	8f 91       	pop	r24
 25c:	0f 90       	pop	r0
 25e:	0f be       	out	0x3f, r0	; 63
 260:	0f 90       	pop	r0
 262:	1f 90       	pop	r1
 264:	18 95       	reti

00000266 <__vector_6>:
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	8f 93       	push	r24
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <processing_for_ramp_down>
 27e:	8f 91       	pop	r24
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <__vector_29>:
 28a:	1f 92       	push	r1
 28c:	0f 92       	push	r0
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	0b b6       	in	r0, 0x3b	; 59
 296:	0f 92       	push	r0
 298:	2f 93       	push	r18
 29a:	3f 93       	push	r19
 29c:	8f 93       	push	r24
 29e:	9f 93       	push	r25
 2a0:	ef 93       	push	r30
 2a2:	ff 93       	push	r31
 2a4:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 2a8:	88 23       	and	r24, r24
 2aa:	29 f1       	breq	.+74     	; 0x2f6 <__vector_29+0x6c>
 2ac:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	98 2f       	mov	r25, r24
 2b8:	88 27       	eor	r24, r24
 2ba:	82 0f       	add	r24, r18
 2bc:	91 1d       	adc	r25, r1
 2be:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_result+0x1>
 2c2:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_result>
 2c6:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <ADC_result>
 2ca:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <ADC_result+0x1>
 2ce:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <ADC_lowest_val>
 2d2:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <ADC_lowest_val+0x1>
 2d6:	28 17       	cp	r18, r24
 2d8:	39 07       	cpc	r19, r25
 2da:	40 f4       	brcc	.+16     	; 0x2ec <__vector_29+0x62>
 2dc:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <ADC_result>
 2e0:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <ADC_result+0x1>
 2e4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 2e8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 2ec:	ea e7       	ldi	r30, 0x7A	; 122
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	80 64       	ori	r24, 0x40	; 64
 2f4:	80 83       	st	Z, r24
 2f6:	ff 91       	pop	r31
 2f8:	ef 91       	pop	r30
 2fa:	9f 91       	pop	r25
 2fc:	8f 91       	pop	r24
 2fe:	3f 91       	pop	r19
 300:	2f 91       	pop	r18
 302:	0f 90       	pop	r0
 304:	0b be       	out	0x3b, r0	; 59
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <__vector_default>:
 310:	1f 92       	push	r1
 312:	0f 92       	push	r0
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	0f 92       	push	r0
 318:	11 24       	eor	r1, r1
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <init_interrupts>:
 324:	8a e9       	ldi	r24, 0x9A	; 154
 326:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 32a:	8a e0       	ldi	r24, 0x0A	; 10
 32c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 330:	8d b3       	in	r24, 0x1d	; 29
 332:	8f 63       	ori	r24, 0x3F	; 63
 334:	8d bb       	out	0x1d, r24	; 29
 336:	08 95       	ret

00000338 <init_timer0_pwm>:
 338:	84 b5       	in	r24, 0x24	; 36
 33a:	83 68       	ori	r24, 0x83	; 131
 33c:	84 bd       	out	0x24, r24	; 36
 33e:	85 b5       	in	r24, 0x25	; 37
 340:	82 60       	ori	r24, 0x02	; 2
 342:	85 bd       	out	0x25, r24	; 37
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	87 bd       	out	0x27, r24	; 39
 348:	08 95       	ret

0000034a <init_timer3>:
 34a:	e1 e9       	ldi	r30, 0x91	; 145
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	8b 60       	ori	r24, 0x0B	; 11
 352:	80 83       	st	Z, r24
 354:	e1 e7       	ldi	r30, 0x71	; 113
 356:	f0 e0       	ldi	r31, 0x00	; 0
 358:	80 81       	ld	r24, Z
 35a:	82 60       	ori	r24, 0x02	; 2
 35c:	80 83       	st	Z, r24
 35e:	c1 9a       	sbi	0x18, 1	; 24
 360:	80 81       	ld	r24, Z
 362:	8d 7f       	andi	r24, 0xFD	; 253
 364:	80 83       	st	Z, r24
 366:	08 95       	ret

00000368 <start_timer3>:
 368:	9c 01       	movw	r18, r24
 36a:	e1 e7       	ldi	r30, 0x71	; 113
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	90 81       	ld	r25, Z
 370:	92 60       	ori	r25, 0x02	; 2
 372:	90 83       	st	Z, r25
 374:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 378:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 37c:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 380:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 384:	08 95       	ret

00000386 <init_motor>:
 386:	84 e0       	ldi	r24, 0x04	; 4
 388:	85 b9       	out	0x05, r24	; 5
 38a:	80 e7       	ldi	r24, 0x70	; 112
 38c:	87 bd       	out	0x27, r24	; 39
 38e:	08 95       	ret

00000390 <init_ADC>:
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	93 e0       	ldi	r25, 0x03	; 3
 394:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_result+0x1>
 398:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_result>
 39c:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 3a0:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 3a4:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <reflective_present>
 3a8:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_ready>
 3ac:	ec e7       	ldi	r30, 0x7C	; 124
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	80 64       	ori	r24, 0x40	; 64
 3b4:	80 83       	st	Z, r24
 3b6:	ea e7       	ldi	r30, 0x7A	; 122
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	80 81       	ld	r24, Z
 3bc:	82 60       	ori	r24, 0x02	; 2
 3be:	80 83       	st	Z, r24
 3c0:	80 81       	ld	r24, Z
 3c2:	81 60       	ori	r24, 0x01	; 1
 3c4:	80 83       	st	Z, r24
 3c6:	80 81       	ld	r24, Z
 3c8:	88 60       	ori	r24, 0x08	; 8
 3ca:	80 83       	st	Z, r24
 3cc:	80 81       	ld	r24, Z
 3ce:	80 68       	ori	r24, 0x80	; 128
 3d0:	80 83       	st	Z, r24
 3d2:	08 95       	ret

000003d4 <init_stepper>:
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	81 b9       	out	0x01, r24	; 1
 3d8:	85 e3       	ldi	r24, 0x35	; 53
 3da:	82 b9       	out	0x02, r24	; 2
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <motor_position+0x1>
 3e4:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <motor_position>
 3e8:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stepper_on+0x1>
 3ec:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <stepper_on>
 3f0:	08 95       	ret

000003f2 <mTimer>:
 3f2:	ac 01       	movw	r20, r24
 3f4:	e1 e8       	ldi	r30, 0x81	; 129
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	90 81       	ld	r25, Z
 3fa:	91 60       	ori	r25, 0x01	; 1
 3fc:	90 83       	st	Z, r25
 3fe:	90 81       	ld	r25, Z
 400:	98 60       	ori	r25, 0x08	; 8
 402:	90 83       	st	Z, r25
 404:	88 ee       	ldi	r24, 0xE8	; 232
 406:	93 e0       	ldi	r25, 0x03	; 3
 408:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 40c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 410:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 414:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 418:	b1 9a       	sbi	0x16, 1	; 22
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	05 c0       	rjmp	.+10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 420:	b1 9b       	sbis	0x16, 1	; 22
 422:	fe cf       	rjmp	.-4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 424:	b1 9a       	sbi	0x16, 1	; 22
 426:	2f 5f       	subi	r18, 0xFF	; 255
 428:	3f 4f       	sbci	r19, 0xFF	; 255
 42a:	24 17       	cp	r18, r20
 42c:	35 07       	cpc	r19, r21
 42e:	1c f4       	brge	.+6      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 430:	b1 9b       	sbis	0x16, 1	; 22
 432:	f6 cf       	rjmp	.-20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 434:	f7 cf       	rjmp	.-18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 436:	08 95       	ret

00000438 <stepper_rotate>:
 438:	cf 92       	push	r12
 43a:	df 92       	push	r13
 43c:	ef 92       	push	r14
 43e:	ff 92       	push	r15
 440:	0f 93       	push	r16
 442:	1f 93       	push	r17
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	18 16       	cp	r1, r24
 44a:	19 06       	cpc	r1, r25
 44c:	0c f0       	brlt	.+2      	; 0x450 <stepper_rotate+0x18>
 44e:	61 c0       	rjmp	.+194    	; 0x512 <stepper_rotate+0xda>
 450:	6b 01       	movw	r12, r22
 452:	8c 01       	movw	r16, r24
 454:	c0 e0       	ldi	r28, 0x00	; 0
 456:	d0 e0       	ldi	r29, 0x00	; 0
 458:	0f 2e       	mov	r0, r31
 45a:	fa e0       	ldi	r31, 0x0A	; 10
 45c:	ef 2e       	mov	r14, r31
 45e:	f1 2c       	mov	r15, r1
 460:	f0 2d       	mov	r31, r0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	c8 16       	cp	r12, r24
 466:	d1 04       	cpc	r13, r1
 468:	d1 f4       	brne	.+52     	; 0x49e <stepper_rotate+0x66>
 46a:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 46e:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 472:	e3 5f       	subi	r30, 0xF3	; 243
 474:	fe 4f       	sbci	r31, 0xFE	; 254
 476:	80 81       	ld	r24, Z
 478:	82 b9       	out	0x02, r24	; 2
 47a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 47e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 482:	01 96       	adiw	r24, 0x01	; 1
 484:	83 70       	andi	r24, 0x03	; 3
 486:	90 78       	andi	r25, 0x80	; 128
 488:	99 23       	and	r25, r25
 48a:	24 f4       	brge	.+8      	; 0x494 <stepper_rotate+0x5c>
 48c:	01 97       	sbiw	r24, 0x01	; 1
 48e:	8c 6f       	ori	r24, 0xFC	; 252
 490:	9f 6f       	ori	r25, 0xFF	; 255
 492:	01 96       	adiw	r24, 0x01	; 1
 494:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 498:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 49c:	1d c0       	rjmp	.+58     	; 0x4d8 <stepper_rotate+0xa0>
 49e:	8f ef       	ldi	r24, 0xFF	; 255
 4a0:	c8 16       	cp	r12, r24
 4a2:	d8 06       	cpc	r13, r24
 4a4:	c9 f4       	brne	.+50     	; 0x4d8 <stepper_rotate+0xa0>
 4a6:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 4aa:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 4ae:	e7 5f       	subi	r30, 0xF7	; 247
 4b0:	fe 4f       	sbci	r31, 0xFE	; 254
 4b2:	80 81       	ld	r24, Z
 4b4:	82 b9       	out	0x02, r24	; 2
 4b6:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 4ba:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 4be:	01 96       	adiw	r24, 0x01	; 1
 4c0:	83 70       	andi	r24, 0x03	; 3
 4c2:	90 78       	andi	r25, 0x80	; 128
 4c4:	99 23       	and	r25, r25
 4c6:	24 f4       	brge	.+8      	; 0x4d0 <stepper_rotate+0x98>
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	8c 6f       	ori	r24, 0xFC	; 252
 4cc:	9f 6f       	ori	r25, 0xFF	; 255
 4ce:	01 96       	adiw	r24, 0x01	; 1
 4d0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 4d4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 4d8:	c7 01       	movw	r24, r14
 4da:	8b df       	rcall	.-234    	; 0x3f2 <mTimer>
 4dc:	c4 30       	cpi	r28, 0x04	; 4
 4de:	d1 05       	cpc	r29, r1
 4e0:	3c f4       	brge	.+14     	; 0x4f0 <stepper_rotate+0xb8>
 4e2:	86 e0       	ldi	r24, 0x06	; 6
 4e4:	e8 16       	cp	r14, r24
 4e6:	f1 04       	cpc	r15, r1
 4e8:	1c f0       	brlt	.+6      	; 0x4f0 <stepper_rotate+0xb8>
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	e8 1a       	sub	r14, r24
 4ee:	f1 08       	sbc	r15, r1
 4f0:	c8 01       	movw	r24, r16
 4f2:	8c 1b       	sub	r24, r28
 4f4:	9d 0b       	sbc	r25, r29
 4f6:	05 97       	sbiw	r24, 0x05	; 5
 4f8:	3c f4       	brge	.+14     	; 0x508 <stepper_rotate+0xd0>
 4fa:	8b e0       	ldi	r24, 0x0B	; 11
 4fc:	e8 16       	cp	r14, r24
 4fe:	f1 04       	cpc	r15, r1
 500:	1c f4       	brge	.+6      	; 0x508 <stepper_rotate+0xd0>
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	e8 1a       	sub	r14, r24
 506:	f8 0a       	sbc	r15, r24
 508:	21 96       	adiw	r28, 0x01	; 1
 50a:	0c 17       	cp	r16, r28
 50c:	1d 07       	cpc	r17, r29
 50e:	09 f0       	breq	.+2      	; 0x512 <stepper_rotate+0xda>
 510:	a8 cf       	rjmp	.-176    	; 0x462 <stepper_rotate+0x2a>
 512:	df 91       	pop	r29
 514:	cf 91       	pop	r28
 516:	1f 91       	pop	r17
 518:	0f 91       	pop	r16
 51a:	ff 90       	pop	r15
 51c:	ef 90       	pop	r14
 51e:	df 90       	pop	r13
 520:	cf 90       	pop	r12
 522:	08 95       	ret

00000524 <stepper_position>:
 524:	cf 93       	push	r28
 526:	df 93       	push	r29
 528:	c8 2f       	mov	r28, r24
 52a:	d0 e0       	ldi	r29, 0x00	; 0
 52c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <motor_position>
 530:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <motor_position+0x1>
 534:	9e 01       	movw	r18, r28
 536:	28 1b       	sub	r18, r24
 538:	39 0b       	sbc	r19, r25
 53a:	21 30       	cpi	r18, 0x01	; 1
 53c:	31 05       	cpc	r19, r1
 53e:	21 f0       	breq	.+8      	; 0x548 <stepper_position+0x24>
 540:	2d 3f       	cpi	r18, 0xFD	; 253
 542:	8f ef       	ldi	r24, 0xFF	; 255
 544:	38 07       	cpc	r19, r24
 546:	31 f4       	brne	.+12     	; 0x554 <stepper_position+0x30>
 548:	61 e0       	ldi	r22, 0x01	; 1
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	82 e3       	ldi	r24, 0x32	; 50
 54e:	90 e0       	ldi	r25, 0x00	; 0
 550:	73 df       	rcall	.-282    	; 0x438 <stepper_rotate>
 552:	18 c0       	rjmp	.+48     	; 0x584 <stepper_position+0x60>
 554:	2f 3f       	cpi	r18, 0xFF	; 255
 556:	8f ef       	ldi	r24, 0xFF	; 255
 558:	38 07       	cpc	r19, r24
 55a:	19 f0       	breq	.+6      	; 0x562 <stepper_position+0x3e>
 55c:	23 30       	cpi	r18, 0x03	; 3
 55e:	31 05       	cpc	r19, r1
 560:	31 f4       	brne	.+12     	; 0x56e <stepper_position+0x4a>
 562:	6f ef       	ldi	r22, 0xFF	; 255
 564:	7f ef       	ldi	r23, 0xFF	; 255
 566:	82 e3       	ldi	r24, 0x32	; 50
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	66 df       	rcall	.-308    	; 0x438 <stepper_rotate>
 56c:	0b c0       	rjmp	.+22     	; 0x584 <stepper_position+0x60>
 56e:	22 30       	cpi	r18, 0x02	; 2
 570:	31 05       	cpc	r19, r1
 572:	19 f0       	breq	.+6      	; 0x57a <stepper_position+0x56>
 574:	2e 3f       	cpi	r18, 0xFE	; 254
 576:	3f 4f       	sbci	r19, 0xFF	; 255
 578:	29 f4       	brne	.+10     	; 0x584 <stepper_position+0x60>
 57a:	61 e0       	ldi	r22, 0x01	; 1
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	84 e6       	ldi	r24, 0x64	; 100
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	5a df       	rcall	.-332    	; 0x438 <stepper_rotate>
 584:	d0 93 34 01 	sts	0x0134, r29	; 0x800134 <motor_position+0x1>
 588:	c0 93 33 01 	sts	0x0133, r28	; 0x800133 <motor_position>
 58c:	df 91       	pop	r29
 58e:	cf 91       	pop	r28
 590:	08 95       	ret

00000592 <display_reflective_reading>:
 592:	2b b1       	in	r18, 0x0b	; 11
 594:	2f 70       	andi	r18, 0x0F	; 15
 596:	2b b9       	out	0x0b, r18	; 11
 598:	9c 01       	movw	r18, r24
 59a:	33 70       	andi	r19, 0x03	; 3
 59c:	28 b9       	out	0x08, r18	; 8
 59e:	2b b1       	in	r18, 0x0b	; 11
 5a0:	ac 01       	movw	r20, r24
 5a2:	44 27       	eor	r20, r20
 5a4:	51 70       	andi	r21, 0x01	; 1
 5a6:	52 95       	swap	r21
 5a8:	42 95       	swap	r20
 5aa:	4f 70       	andi	r20, 0x0F	; 15
 5ac:	45 27       	eor	r20, r21
 5ae:	5f 70       	andi	r21, 0x0F	; 15
 5b0:	45 27       	eor	r20, r21
 5b2:	88 27       	eor	r24, r24
 5b4:	92 70       	andi	r25, 0x02	; 2
 5b6:	96 95       	lsr	r25
 5b8:	87 95       	ror	r24
 5ba:	96 95       	lsr	r25
 5bc:	87 95       	ror	r24
 5be:	84 0f       	add	r24, r20
 5c0:	82 2b       	or	r24, r18
 5c2:	8b b9       	out	0x0b, r24	; 11
 5c4:	08 95       	ret

000005c6 <ADC_calibrate>:
 5c6:	2f 92       	push	r2
 5c8:	3f 92       	push	r3
 5ca:	4f 92       	push	r4
 5cc:	5f 92       	push	r5
 5ce:	6f 92       	push	r6
 5d0:	7f 92       	push	r7
 5d2:	8f 92       	push	r8
 5d4:	9f 92       	push	r9
 5d6:	af 92       	push	r10
 5d8:	bf 92       	push	r11
 5da:	cf 92       	push	r12
 5dc:	df 92       	push	r13
 5de:	ef 92       	push	r14
 5e0:	ff 92       	push	r15
 5e2:	0f 93       	push	r16
 5e4:	1f 93       	push	r17
 5e6:	cf 93       	push	r28
 5e8:	df 93       	push	r29
 5ea:	cd b7       	in	r28, 0x3d	; 61
 5ec:	de b7       	in	r29, 0x3e	; 62
 5ee:	64 97       	sbiw	r28, 0x14	; 20
 5f0:	0f b6       	in	r0, 0x3f	; 63
 5f2:	f8 94       	cli
 5f4:	de bf       	out	0x3e, r29	; 62
 5f6:	0f be       	out	0x3f, r0	; 63
 5f8:	cd bf       	out	0x3d, r28	; 61
 5fa:	81 2c       	mov	r8, r1
 5fc:	91 2c       	mov	r9, r1
 5fe:	0f 2e       	mov	r0, r31
 600:	cc 24       	eor	r12, r12
 602:	ca 94       	dec	r12
 604:	f3 e0       	ldi	r31, 0x03	; 3
 606:	df 2e       	mov	r13, r31
 608:	f0 2d       	mov	r31, r0
 60a:	5e 01       	movw	r10, r28
 60c:	45 e1       	ldi	r20, 0x15	; 21
 60e:	a4 0e       	add	r10, r20
 610:	b1 1c       	adc	r11, r1
 612:	22 24       	eor	r2, r2
 614:	23 94       	inc	r2
 616:	68 94       	set
 618:	33 24       	eor	r3, r3
 61a:	31 f8       	bld	r3, 1
 61c:	7f c0       	rjmp	.+254    	; 0x71c <ADC_calibrate+0x156>
 61e:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <item_ready>
 622:	88 23       	and	r24, r24
 624:	e1 f3       	breq	.-8      	; 0x61e <ADC_calibrate+0x58>
 626:	98 b9       	out	0x08, r25	; 8
 628:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <ADC_lowest_val>
 62c:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <ADC_lowest_val+0x1>
 630:	21 93       	st	Z+, r18
 632:	31 93       	st	Z+, r19
 634:	d0 92 61 01 	sts	0x0161, r13	; 0x800161 <ADC_lowest_val+0x1>
 638:	c0 92 60 01 	sts	0x0160, r12	; 0x800160 <ADC_lowest_val>
 63c:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_ready>
 640:	9f 5f       	subi	r25, 0xFF	; 255
 642:	9b 30       	cpi	r25, 0x0B	; 11
 644:	61 f7       	brne	.-40     	; 0x61e <ADC_calibrate+0x58>
 646:	15 b8       	out	0x05, r1	; 5
 648:	84 e6       	ldi	r24, 0x64	; 100
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	d2 de       	rcall	.-604    	; 0x3f2 <mTimer>
 64e:	09 81       	ldd	r16, Y+1	; 0x01
 650:	1a 81       	ldd	r17, Y+2	; 0x02
 652:	fe 01       	movw	r30, r28
 654:	33 96       	adiw	r30, 0x03	; 3
 656:	98 01       	movw	r18, r16
 658:	78 01       	movw	r14, r16
 65a:	81 91       	ld	r24, Z+
 65c:	91 91       	ld	r25, Z+
 65e:	e8 16       	cp	r14, r24
 660:	f9 06       	cpc	r15, r25
 662:	28 f4       	brcc	.+10     	; 0x66e <ADC_calibrate+0xa8>
 664:	8f 3f       	cpi	r24, 0xFF	; 255
 666:	43 e0       	ldi	r20, 0x03	; 3
 668:	94 07       	cpc	r25, r20
 66a:	09 f0       	breq	.+2      	; 0x66e <ADC_calibrate+0xa8>
 66c:	7c 01       	movw	r14, r24
 66e:	80 17       	cp	r24, r16
 670:	91 07       	cpc	r25, r17
 672:	08 f4       	brcc	.+2      	; 0x676 <ADC_calibrate+0xb0>
 674:	8c 01       	movw	r16, r24
 676:	28 0f       	add	r18, r24
 678:	39 1f       	adc	r19, r25
 67a:	ea 15       	cp	r30, r10
 67c:	fb 05       	cpc	r31, r11
 67e:	69 f7       	brne	.-38     	; 0x65a <ADC_calibrate+0x94>
 680:	27 01       	movw	r4, r14
 682:	40 0e       	add	r4, r16
 684:	51 1e       	adc	r5, r17
 686:	56 94       	lsr	r5
 688:	47 94       	ror	r4
 68a:	ad ec       	ldi	r26, 0xCD	; 205
 68c:	bc ec       	ldi	r27, 0xCC	; 204
 68e:	75 d2       	rcall	.+1258   	; 0xb7a <__umulhisi3>
 690:	3c 01       	movw	r6, r24
 692:	76 94       	lsr	r7
 694:	67 94       	ror	r6
 696:	76 94       	lsr	r7
 698:	67 94       	ror	r6
 69a:	76 94       	lsr	r7
 69c:	67 94       	ror	r6
 69e:	f4 01       	movw	r30, r8
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	ee 0f       	add	r30, r30
 6a6:	ff 1f       	adc	r31, r31
 6a8:	ee 0f       	add	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	e6 5c       	subi	r30, 0xC6	; 198
 6ae:	fe 4f       	sbci	r31, 0xFE	; 254
 6b0:	11 83       	std	Z+1, r17	; 0x01
 6b2:	00 83       	st	Z, r16
 6b4:	f3 82       	std	Z+3, r15	; 0x03
 6b6:	e2 82       	std	Z+2, r14	; 0x02
 6b8:	55 82       	std	Z+5, r5	; 0x05
 6ba:	44 82       	std	Z+4, r4	; 0x04
 6bc:	77 82       	std	Z+7, r7	; 0x07
 6be:	66 82       	std	Z+6, r6	; 0x06
 6c0:	28 b8       	out	0x08, r2	; 8
 6c2:	88 ee       	ldi	r24, 0xE8	; 232
 6c4:	93 e0       	ldi	r25, 0x03	; 3
 6c6:	95 de       	rcall	.-726    	; 0x3f2 <mTimer>
 6c8:	c8 01       	movw	r24, r16
 6ca:	63 df       	rcall	.-314    	; 0x592 <display_reflective_reading>
 6cc:	88 e5       	ldi	r24, 0x58	; 88
 6ce:	9b e1       	ldi	r25, 0x1B	; 27
 6d0:	90 de       	rcall	.-736    	; 0x3f2 <mTimer>
 6d2:	38 b8       	out	0x08, r3	; 8
 6d4:	88 ee       	ldi	r24, 0xE8	; 232
 6d6:	93 e0       	ldi	r25, 0x03	; 3
 6d8:	8c de       	rcall	.-744    	; 0x3f2 <mTimer>
 6da:	c7 01       	movw	r24, r14
 6dc:	5a df       	rcall	.-332    	; 0x592 <display_reflective_reading>
 6de:	88 e5       	ldi	r24, 0x58	; 88
 6e0:	9b e1       	ldi	r25, 0x1B	; 27
 6e2:	87 de       	rcall	.-754    	; 0x3f2 <mTimer>
 6e4:	83 e0       	ldi	r24, 0x03	; 3
 6e6:	88 b9       	out	0x08, r24	; 8
 6e8:	88 ee       	ldi	r24, 0xE8	; 232
 6ea:	93 e0       	ldi	r25, 0x03	; 3
 6ec:	82 de       	rcall	.-764    	; 0x3f2 <mTimer>
 6ee:	c2 01       	movw	r24, r4
 6f0:	50 df       	rcall	.-352    	; 0x592 <display_reflective_reading>
 6f2:	88 e5       	ldi	r24, 0x58	; 88
 6f4:	9b e1       	ldi	r25, 0x1B	; 27
 6f6:	7d de       	rcall	.-774    	; 0x3f2 <mTimer>
 6f8:	44 e0       	ldi	r20, 0x04	; 4
 6fa:	48 b9       	out	0x08, r20	; 8
 6fc:	88 ee       	ldi	r24, 0xE8	; 232
 6fe:	93 e0       	ldi	r25, 0x03	; 3
 700:	78 de       	rcall	.-784    	; 0x3f2 <mTimer>
 702:	c3 01       	movw	r24, r6
 704:	46 df       	rcall	.-372    	; 0x592 <display_reflective_reading>
 706:	88 e5       	ldi	r24, 0x58	; 88
 708:	9b e1       	ldi	r25, 0x1B	; 27
 70a:	73 de       	rcall	.-794    	; 0x3f2 <mTimer>
 70c:	3c de       	rcall	.-904    	; 0x386 <init_motor>
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	88 1a       	sub	r8, r24
 712:	98 0a       	sbc	r9, r24
 714:	44 e0       	ldi	r20, 0x04	; 4
 716:	84 16       	cp	r8, r20
 718:	91 04       	cpc	r9, r1
 71a:	21 f0       	breq	.+8      	; 0x724 <ADC_calibrate+0x15e>
 71c:	fe 01       	movw	r30, r28
 71e:	31 96       	adiw	r30, 0x01	; 1
 720:	91 e0       	ldi	r25, 0x01	; 1
 722:	7d cf       	rjmp	.-262    	; 0x61e <ADC_calibrate+0x58>
 724:	64 96       	adiw	r28, 0x14	; 20
 726:	0f b6       	in	r0, 0x3f	; 63
 728:	f8 94       	cli
 72a:	de bf       	out	0x3e, r29	; 62
 72c:	0f be       	out	0x3f, r0	; 63
 72e:	cd bf       	out	0x3d, r28	; 61
 730:	df 91       	pop	r29
 732:	cf 91       	pop	r28
 734:	1f 91       	pop	r17
 736:	0f 91       	pop	r16
 738:	ff 90       	pop	r15
 73a:	ef 90       	pop	r14
 73c:	df 90       	pop	r13
 73e:	cf 90       	pop	r12
 740:	bf 90       	pop	r11
 742:	af 90       	pop	r10
 744:	9f 90       	pop	r9
 746:	8f 90       	pop	r8
 748:	7f 90       	pop	r7
 74a:	6f 90       	pop	r6
 74c:	5f 90       	pop	r5
 74e:	4f 90       	pop	r4
 750:	3f 90       	pop	r3
 752:	2f 90       	pop	r2
 754:	08 95       	ret

00000756 <entry_sensor>:
 756:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <OS1_flag>
 75a:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <item_number>
 75e:	8f 5f       	subi	r24, 0xFF	; 255
 760:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <item_number>
 764:	b7 dc       	rcall	.-1682   	; 0xd4 <initItem>
 766:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <item_number>
 76a:	fc 01       	movw	r30, r24
 76c:	25 83       	std	Z+5, r18	; 0x05
 76e:	21 e0       	ldi	r18, 0x01	; 1
 770:	24 83       	std	Z+4, r18	; 0x04
 772:	bc 01       	movw	r22, r24
 774:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 778:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 77c:	c1 cc       	rjmp	.-1662   	; 0x100 <enqueue>
 77e:	08 95       	ret

00000780 <metal_sensor>:
 780:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <FER_flag>
 784:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <entryList>
 788:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <entryList+0x1>
 78c:	02 80       	ldd	r0, Z+2	; 0x02
 78e:	f3 81       	ldd	r31, Z+3	; 0x03
 790:	e0 2d       	mov	r30, r0
 792:	81 e0       	ldi	r24, 0x01	; 1
 794:	80 83       	st	Z, r24
 796:	08 95       	ret

00000798 <reflective_sensor>:
 798:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <OS2_flag>
 79c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 7a0:	88 23       	and	r24, r24
 7a2:	31 f0       	breq	.+12     	; 0x7b0 <reflective_sensor+0x18>
 7a4:	ea e7       	ldi	r30, 0x7A	; 122
 7a6:	f0 e0       	ldi	r31, 0x00	; 0
 7a8:	80 81       	ld	r24, Z
 7aa:	80 64       	ori	r24, 0x40	; 64
 7ac:	80 83       	st	Z, r24
 7ae:	08 95       	ret
 7b0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 7b4:	82 30       	cpi	r24, 0x02	; 2
 7b6:	d1 f4       	brne	.+52     	; 0x7ec <reflective_sensor+0x54>
 7b8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 7bc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 7c0:	b0 dc       	rcall	.-1696   	; 0x122 <dequeue>
 7c2:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <ADC_lowest_val>
 7c6:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <ADC_lowest_val+0x1>
 7ca:	fc 01       	movw	r30, r24
 7cc:	32 83       	std	Z+2, r19	; 0x02
 7ce:	21 83       	std	Z+1, r18	; 0x01
 7d0:	22 e0       	ldi	r18, 0x02	; 2
 7d2:	24 83       	std	Z+4, r18	; 0x04
 7d4:	bc 01       	movw	r22, r24
 7d6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 7da:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 7de:	90 dc       	rcall	.-1760   	; 0x100 <enqueue>
 7e0:	8f ef       	ldi	r24, 0xFF	; 255
 7e2:	93 e0       	ldi	r25, 0x03	; 3
 7e4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 7e8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 7ec:	81 e0       	ldi	r24, 0x01	; 1
 7ee:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <item_ready>
 7f2:	08 95       	ret

000007f4 <__vector_3>:
 7f4:	1f 92       	push	r1
 7f6:	0f 92       	push	r0
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	0f 92       	push	r0
 7fc:	11 24       	eor	r1, r1
 7fe:	0b b6       	in	r0, 0x3b	; 59
 800:	0f 92       	push	r0
 802:	2f 93       	push	r18
 804:	3f 93       	push	r19
 806:	4f 93       	push	r20
 808:	5f 93       	push	r21
 80a:	6f 93       	push	r22
 80c:	7f 93       	push	r23
 80e:	8f 93       	push	r24
 810:	9f 93       	push	r25
 812:	af 93       	push	r26
 814:	bf 93       	push	r27
 816:	ef 93       	push	r30
 818:	ff 93       	push	r31
 81a:	81 e0       	ldi	r24, 0x01	; 1
 81c:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <OS2_flag>
 820:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 824:	88 23       	and	r24, r24
 826:	19 f0       	breq	.+6      	; 0x82e <__vector_3+0x3a>
 828:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <reflective_present>
 82c:	03 c0       	rjmp	.+6      	; 0x834 <__vector_3+0x40>
 82e:	81 e0       	ldi	r24, 0x01	; 1
 830:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <reflective_present>
 834:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 838:	81 30       	cpi	r24, 0x01	; 1
 83a:	09 f4       	brne	.+2      	; 0x83e <__vector_3+0x4a>
 83c:	ad df       	rcall	.-166    	; 0x798 <reflective_sensor>
 83e:	ff 91       	pop	r31
 840:	ef 91       	pop	r30
 842:	bf 91       	pop	r27
 844:	af 91       	pop	r26
 846:	9f 91       	pop	r25
 848:	8f 91       	pop	r24
 84a:	7f 91       	pop	r23
 84c:	6f 91       	pop	r22
 84e:	5f 91       	pop	r21
 850:	4f 91       	pop	r20
 852:	3f 91       	pop	r19
 854:	2f 91       	pop	r18
 856:	0f 90       	pop	r0
 858:	0b be       	out	0x3b, r0	; 59
 85a:	0f 90       	pop	r0
 85c:	0f be       	out	0x3f, r0	; 63
 85e:	0f 90       	pop	r0
 860:	1f 90       	pop	r1
 862:	18 95       	reti

00000864 <classify_item>:
 864:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_ready>
 868:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 86c:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 870:	58 dc       	rcall	.-1872   	; 0x122 <dequeue>
 872:	fc 01       	movw	r30, r24
 874:	81 81       	ldd	r24, Z+1	; 0x01
 876:	92 81       	ldd	r25, Z+2	; 0x02
 878:	20 81       	ld	r18, Z
 87a:	21 11       	cpse	r18, r1
 87c:	34 c0       	rjmp	.+104    	; 0x8e6 <classify_item+0x82>
 87e:	a1 e1       	ldi	r26, 0x11	; 17
 880:	b1 e0       	ldi	r27, 0x01	; 1
 882:	4d 91       	ld	r20, X+
 884:	5c 91       	ld	r21, X
 886:	11 97       	sbiw	r26, 0x01	; 1
 888:	12 96       	adiw	r26, 0x02	; 2
 88a:	2d 91       	ld	r18, X+
 88c:	3c 91       	ld	r19, X
 88e:	13 97       	sbiw	r26, 0x03	; 3
 890:	48 1b       	sub	r20, r24
 892:	59 0b       	sbc	r21, r25
 894:	ba 01       	movw	r22, r20
 896:	22 f4       	brpl	.+8      	; 0x8a0 <classify_item+0x3c>
 898:	66 27       	eor	r22, r22
 89a:	77 27       	eor	r23, r23
 89c:	64 1b       	sub	r22, r20
 89e:	75 0b       	sbc	r23, r21
 8a0:	a9 01       	movw	r20, r18
 8a2:	48 1b       	sub	r20, r24
 8a4:	59 0b       	sbc	r21, r25
 8a6:	9a 01       	movw	r18, r20
 8a8:	22 f4       	brpl	.+8      	; 0x8b2 <classify_item+0x4e>
 8aa:	22 27       	eor	r18, r18
 8ac:	33 27       	eor	r19, r19
 8ae:	24 1b       	sub	r18, r20
 8b0:	35 0b       	sbc	r19, r21
 8b2:	62 17       	cp	r22, r18
 8b4:	73 07       	cpc	r23, r19
 8b6:	50 f4       	brcc	.+20     	; 0x8cc <classify_item+0x68>
 8b8:	ad e1       	ldi	r26, 0x1D	; 29
 8ba:	b1 e0       	ldi	r27, 0x01	; 1
 8bc:	8d 91       	ld	r24, X+
 8be:	9c 91       	ld	r25, X
 8c0:	11 97       	sbiw	r26, 0x01	; 1
 8c2:	01 96       	adiw	r24, 0x01	; 1
 8c4:	8d 93       	st	X+, r24
 8c6:	9c 93       	st	X, r25
 8c8:	80 e0       	ldi	r24, 0x00	; 0
 8ca:	48 c0       	rjmp	.+144    	; 0x95c <classify_item+0xf8>
 8cc:	ad e1       	ldi	r26, 0x1D	; 29
 8ce:	b1 e0       	ldi	r27, 0x01	; 1
 8d0:	14 96       	adiw	r26, 0x04	; 4
 8d2:	8d 91       	ld	r24, X+
 8d4:	9c 91       	ld	r25, X
 8d6:	15 97       	sbiw	r26, 0x05	; 5
 8d8:	01 96       	adiw	r24, 0x01	; 1
 8da:	15 96       	adiw	r26, 0x05	; 5
 8dc:	9c 93       	st	X, r25
 8de:	8e 93       	st	-X, r24
 8e0:	14 97       	sbiw	r26, 0x04	; 4
 8e2:	82 e0       	ldi	r24, 0x02	; 2
 8e4:	3b c0       	rjmp	.+118    	; 0x95c <classify_item+0xf8>
 8e6:	21 30       	cpi	r18, 0x01	; 1
 8e8:	c1 f5       	brne	.+112    	; 0x95a <classify_item+0xf6>
 8ea:	a1 e1       	ldi	r26, 0x11	; 17
 8ec:	b1 e0       	ldi	r27, 0x01	; 1
 8ee:	14 96       	adiw	r26, 0x04	; 4
 8f0:	4d 91       	ld	r20, X+
 8f2:	5c 91       	ld	r21, X
 8f4:	15 97       	sbiw	r26, 0x05	; 5
 8f6:	16 96       	adiw	r26, 0x06	; 6
 8f8:	2d 91       	ld	r18, X+
 8fa:	3c 91       	ld	r19, X
 8fc:	17 97       	sbiw	r26, 0x07	; 7
 8fe:	48 1b       	sub	r20, r24
 900:	59 0b       	sbc	r21, r25
 902:	ba 01       	movw	r22, r20
 904:	22 f4       	brpl	.+8      	; 0x90e <classify_item+0xaa>
 906:	66 27       	eor	r22, r22
 908:	77 27       	eor	r23, r23
 90a:	64 1b       	sub	r22, r20
 90c:	75 0b       	sbc	r23, r21
 90e:	a9 01       	movw	r20, r18
 910:	48 1b       	sub	r20, r24
 912:	59 0b       	sbc	r21, r25
 914:	9a 01       	movw	r18, r20
 916:	22 f4       	brpl	.+8      	; 0x920 <classify_item+0xbc>
 918:	22 27       	eor	r18, r18
 91a:	33 27       	eor	r19, r19
 91c:	24 1b       	sub	r18, r20
 91e:	35 0b       	sbc	r19, r21
 920:	62 17       	cp	r22, r18
 922:	73 07       	cpc	r23, r19
 924:	68 f4       	brcc	.+26     	; 0x940 <classify_item+0xdc>
 926:	ad e1       	ldi	r26, 0x1D	; 29
 928:	b1 e0       	ldi	r27, 0x01	; 1
 92a:	16 96       	adiw	r26, 0x06	; 6
 92c:	8d 91       	ld	r24, X+
 92e:	9c 91       	ld	r25, X
 930:	17 97       	sbiw	r26, 0x07	; 7
 932:	01 96       	adiw	r24, 0x01	; 1
 934:	17 96       	adiw	r26, 0x07	; 7
 936:	9c 93       	st	X, r25
 938:	8e 93       	st	-X, r24
 93a:	16 97       	sbiw	r26, 0x06	; 6
 93c:	83 e0       	ldi	r24, 0x03	; 3
 93e:	0e c0       	rjmp	.+28     	; 0x95c <classify_item+0xf8>
 940:	ad e1       	ldi	r26, 0x1D	; 29
 942:	b1 e0       	ldi	r27, 0x01	; 1
 944:	12 96       	adiw	r26, 0x02	; 2
 946:	8d 91       	ld	r24, X+
 948:	9c 91       	ld	r25, X
 94a:	13 97       	sbiw	r26, 0x03	; 3
 94c:	01 96       	adiw	r24, 0x01	; 1
 94e:	13 96       	adiw	r26, 0x03	; 3
 950:	9c 93       	st	X, r25
 952:	8e 93       	st	-X, r24
 954:	12 97       	sbiw	r26, 0x02	; 2
 956:	81 e0       	ldi	r24, 0x01	; 1
 958:	01 c0       	rjmp	.+2      	; 0x95c <classify_item+0xf8>
 95a:	80 e0       	ldi	r24, 0x00	; 0
 95c:	83 83       	std	Z+3, r24	; 0x03
 95e:	83 e0       	ldi	r24, 0x03	; 3
 960:	84 83       	std	Z+4, r24	; 0x04
 962:	ad e1       	ldi	r26, 0x1D	; 29
 964:	b1 e0       	ldi	r27, 0x01	; 1
 966:	18 96       	adiw	r26, 0x08	; 8
 968:	8d 91       	ld	r24, X+
 96a:	9c 91       	ld	r25, X
 96c:	19 97       	sbiw	r26, 0x09	; 9
 96e:	01 96       	adiw	r24, 0x01	; 1
 970:	19 96       	adiw	r26, 0x09	; 9
 972:	9c 93       	st	X, r25
 974:	8e 93       	st	-X, r24
 976:	18 97       	sbiw	r26, 0x08	; 8
 978:	bf 01       	movw	r22, r30
 97a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 97e:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 982:	be cb       	rjmp	.-2180   	; 0x100 <enqueue>
 984:	08 95       	ret

00000986 <exit_sensor>:
 986:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <OS3_flag>
 98a:	15 b8       	out	0x05, r1	; 5
 98c:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 990:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 994:	c6 db       	rcall	.-2164   	; 0x122 <dequeue>
 996:	bc 01       	movw	r22, r24
 998:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sortedList>
 99c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <sortedList+0x1>
 9a0:	af db       	rcall	.-2210   	; 0x100 <enqueue>
 9a2:	e0 91 35 01 	lds	r30, 0x0135	; 0x800135 <sortedList>
 9a6:	f0 91 36 01 	lds	r31, 0x0136	; 0x800136 <sortedList+0x1>
 9aa:	02 80       	ldd	r0, Z+2	; 0x02
 9ac:	f3 81       	ldd	r31, Z+3	; 0x03
 9ae:	e0 2d       	mov	r30, r0
 9b0:	83 81       	ldd	r24, Z+3	; 0x03
 9b2:	8f 5f       	subi	r24, 0xFF	; 255
 9b4:	b7 dd       	rcall	.-1170   	; 0x524 <stepper_position>
 9b6:	e7 cc       	rjmp	.-1586   	; 0x386 <init_motor>
 9b8:	08 95       	ret

000009ba <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 9ba:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 9bc:	8f e8       	ldi	r24, 0x8F	; 143
 9be:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 9c0:	8f ef       	ldi	r24, 0xFF	; 255
 9c2:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 9c4:	80 ef       	ldi	r24, 0xF0	; 240
 9c6:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 9c8:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 9ca:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 9cc:	18 b8       	out	0x08, r1	; 8
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
	init_motor();
	init_interrupts();
 9ce:	f8 94       	cli
	init_stepper();
 9d0:	df dc       	rcall	.-1602   	; 0x390 <init_ADC>
 9d2:	b2 dc       	rcall	.-1692   	; 0x338 <init_timer0_pwm>
	sei();

	// Calibrate ADC before program starts

	ADC_calibrate();
 9d4:	ba dc       	rcall	.-1676   	; 0x34a <init_timer3>

	entryList = initQueue();
 9d6:	d7 dc       	rcall	.-1618   	; 0x386 <init_motor>
 9d8:	a5 dc       	rcall	.-1718   	; 0x324 <init_interrupts>
 9da:	fc dc       	rcall	.-1544   	; 0x3d4 <init_stepper>
 9dc:	78 94       	sei
 9de:	f3 dd       	rcall	.-1050   	; 0x5c6 <ADC_calibrate>
	reflectiveList = initQueue();
 9e0:	86 db       	rcall	.-2292   	; 0xee <initQueue>
 9e2:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <entryList+0x1>
 9e6:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <entryList>
	classifiedList = initQueue();
 9ea:	81 db       	rcall	.-2302   	; 0xee <initQueue>
 9ec:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <reflectiveList+0x1>
 9f0:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <reflectiveList>
 9f4:	7c db       	rcall	.-2312   	; 0xee <initQueue>
	sortedList = initQueue();
 9f6:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <classifiedList+0x1>
 9fa:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <classifiedList>
 9fe:	77 db       	rcall	.-2322   	; 0xee <initQueue>
 a00:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <sortedList+0x1>

	STATE = OPERATIONAL;
 a04:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <sortedList>
	item_waiting = 0;
 a08:	82 e0       	ldi	r24, 0x02	; 2
 a0a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
	item_number = 0;
 a0e:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <item_waiting>
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 a12:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <item_number>
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 a16:	c1 e7       	ldi	r28, 0x71	; 113
			
			STATE_TRANSITION = NONE;
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
				STATE = OPERATIONAL;
 a18:	d0 e0       	ldi	r29, 0x00	; 0
 a1a:	01 e0       	ldi	r16, 0x01	; 1
 a1c:	10 e0       	ldi	r17, 0x00	; 0
		if (STATE == OPERATIONAL || RAMP_DOWN) {
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
				// start motor
				PORTB =  CW;
 a1e:	68 94       	set
 a20:	ee 24       	eor	r14, r14
 a22:	e1 f8       	bld	r14, 1
	// Main Program
	while (1)
	{
				
		// When we trigger ramp down button stay in OPERATIONAL for time of half conveyor
		if (STATE_TRANSITION == RAMP_DOWN_ENTERED) {
 a24:	68 94       	set
 a26:	ff 24       	eor	r15, r15
 a28:	f2 f8       	bld	r15, 2
 a2a:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
			//PORTC |= 0x02;
			
			STATE_TRANSITION = NONE;
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
 a2e:	83 30       	cpi	r24, 0x03	; 3
 a30:	69 f4       	brne	.+26     	; 0xa4c <main+0x92>
 a32:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <STATE_TRANSITION>
				STATE = OPERATIONAL;
 a36:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
			}
			
			start_timer3(timer3_1sec);		// Good for MOTOR_SPEED = 0x30
 a3a:	83 30       	cpi	r24, 0x03	; 3
 a3c:	11 f4       	brne	.+4      	; 0xa42 <main+0x88>
 a3e:	e0 92 08 01 	sts	0x0108, r14	; 0x800108 <STATE>
 a42:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
		}
		
		if (STATE == OPERATIONAL || RAMP_DOWN) {
 a46:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
 a4a:	8e dc       	rcall	.-1764   	; 0x368 <start_timer3>
 a4c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 a50:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
			}	
			
			// Handle flags from sensors
			if(OS1_flag) 
 a54:	82 30       	cpi	r24, 0x02	; 2
 a56:	21 f4       	brne	.+8      	; 0xa60 <main+0xa6>
				entry_sensor();
 a58:	f5 b8       	out	0x05, r15	; 5
			if(FER_flag) 
 a5a:	88 81       	ld	r24, Y
 a5c:	8d 7f       	andi	r24, 0xFD	; 253
				metal_sensor();
 a5e:	88 83       	st	Y, r24
 a60:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <OS1_flag>
			if(OS2_flag) 
 a64:	81 11       	cpse	r24, r1
 a66:	77 de       	rcall	.-786    	; 0x756 <entry_sensor>
				reflective_sensor();
 a68:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <FER_flag>
			if(item_ready) 
 a6c:	81 11       	cpse	r24, r1
 a6e:	88 de       	rcall	.-752    	; 0x780 <metal_sensor>
 a70:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <OS2_flag>
				classify_item();
 a74:	81 11       	cpse	r24, r1
			if(OS3_flag) 
 a76:	90 de       	rcall	.-736    	; 0x798 <reflective_sensor>
 a78:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <item_ready>
				exit_sensor();	
			
		}
		
		if (STATE == PAUSED) {
 a7c:	81 11       	cpse	r24, r1
 a7e:	f2 de       	rcall	.-540    	; 0x864 <classify_item>
 a80:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <OS3_flag>
			
			// Check if just entering PAUSED
			if (STATE_TRANSITION == PAUSE_ENTERED) {
 a84:	81 11       	cpse	r24, r1
 a86:	7f df       	rcall	.-258    	; 0x986 <exit_sensor>
 a88:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				//pause_entered = 0;
				STATE_TRANSITION = NONE;
 a8c:	83 30       	cpi	r24, 0x03	; 3
 a8e:	99 f5       	brne	.+102    	; 0xaf6 <main+0x13c>
				
				// turn off motor
				PORTB =  0;
 a90:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
				
				// start timer for 1 sec
				start_timer3(timer3_1sec);
 a94:	81 30       	cpi	r24, 0x01	; 1
 a96:	41 f4       	brne	.+16     	; 0xaa8 <main+0xee>
 a98:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <STATE_TRANSITION>
 a9c:	15 b8       	out	0x05, r1	; 5
			}
			
			// Update display
			if (timer3_flag) {
 a9e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
 aa2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
				timer3_flag = 0;
 aa6:	60 dc       	rcall	.-1856   	; 0x368 <start_timer3>
 aa8:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 aac:	88 23       	and	r24, r24
 aae:	19 f1       	breq	.+70     	; 0xaf6 <main+0x13c>
 ab0:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 ab4:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <display_index>
 ab8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
 abc:	98 01       	movw	r18, r16
			// Update display
			if (timer3_flag) {
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 abe:	02 c0       	rjmp	.+4      	; 0xac4 <main+0x10a>
 ac0:	22 0f       	add	r18, r18
 ac2:	33 1f       	adc	r19, r19
 ac4:	8a 95       	dec	r24
 ac6:	e2 f7       	brpl	.-8      	; 0xac0 <main+0x106>
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 ac8:	f0 e0       	ldi	r31, 0x00	; 0
 aca:	ee 0f       	add	r30, r30
 acc:	ff 1f       	adc	r31, r31
 ace:	e3 5e       	subi	r30, 0xE3	; 227
 ad0:	fe 4f       	sbci	r31, 0xFE	; 254
 ad2:	80 81       	ld	r24, Z
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
				
				if (display_index == 3) {
 ad4:	90 e1       	ldi	r25, 0x10	; 16
 ad6:	29 9f       	mul	r18, r25
 ad8:	80 0d       	add	r24, r0
 ada:	11 24       	eor	r1, r1
					display_index = 0;
 adc:	88 b9       	out	0x08, r24	; 8
 ade:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
				} else {
					display_index++;
 ae2:	83 30       	cpi	r24, 0x03	; 3
 ae4:	19 f4       	brne	.+6      	; 0xaec <main+0x132>
 ae6:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
				}
			}			
		} 
		
		if (STATE == RAMP_DOWN) {
 aea:	05 c0       	rjmp	.+10     	; 0xaf6 <main+0x13c>
 aec:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
 af0:	8f 5f       	subi	r24, 0xFF	; 255
			// testing
			//PORTC |= 0x08;
			
			if (timer3_flag) {	
 af2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <display_index>
 af6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				timer3_flag = 0;
 afa:	84 30       	cpi	r24, 0x04	; 4
				
				// Disable timer
				TIMSK3 &= 0xFD;
 afc:	09 f0       	breq	.+2      	; 0xb00 <main+0x146>
 afe:	95 cf       	rjmp	.-214    	; 0xa2a <main+0x70>
 b00:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 b04:	88 23       	and	r24, r24
 b06:	29 f0       	breq	.+10     	; 0xb12 <main+0x158>
 b08:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
 b0c:	88 81       	ld	r24, Y
 b0e:	8d 7f       	andi	r24, 0xFD	; 253
 b10:	88 83       	st	Y, r24
				isEmpty(reflectiveList) &&
 b12:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 b16:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 b1a:	2c db       	rcall	.-2472   	; 0x174 <isEmpty>
 b1c:	89 2b       	or	r24, r25
				// Disable timer
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 b1e:	09 f4       	brne	.+2      	; 0xb22 <main+0x168>
 b20:	84 cf       	rjmp	.-248    	; 0xa2a <main+0x70>
				isEmpty(reflectiveList) &&
				isEmpty(classifiedList) /*&&
 b22:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 b26:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 b2a:	24 db       	rcall	.-2488   	; 0x174 <isEmpty>
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
				isEmpty(reflectiveList) &&
 b2c:	89 2b       	or	r24, r25
 b2e:	09 f4       	brne	.+2      	; 0xb32 <main+0x178>
				
				// Turn off motor
				PORTB = 0;
				
				// Disable ADC
				ADCSRA &= ~_BV(ADEN);
 b30:	7c cf       	rjmp	.-264    	; 0xa2a <main+0x70>
 b32:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 b36:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
				
				// Disable interrupts
				cli();
				
				// Release resources
				clearQueue(entryList);
 b3a:	1c db       	rcall	.-2504   	; 0x174 <isEmpty>
 b3c:	89 2b       	or	r24, r25
 b3e:	09 f4       	brne	.+2      	; 0xb42 <main+0x188>
 b40:	74 cf       	rjmp	.-280    	; 0xa2a <main+0x70>
 b42:	15 b8       	out	0x05, r1	; 5
 b44:	ea e7       	ldi	r30, 0x7A	; 122
				clearQueue(reflectiveList);
 b46:	f0 e0       	ldi	r31, 0x00	; 0
 b48:	80 81       	ld	r24, Z
 b4a:	8f 77       	andi	r24, 0x7F	; 127
 b4c:	80 83       	st	Z, r24
 b4e:	f8 94       	cli
 b50:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
				clearQueue(classifiedList);
 b54:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 b58:	f7 da       	rcall	.-2578   	; 0x148 <clearQueue>
 b5a:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
				clearQueue(sortedList);
 b5e:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 b62:	f2 da       	rcall	.-2588   	; 0x148 <clearQueue>
 b64:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 b68:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 b6c:	ed da       	rcall	.-2598   	; 0x148 <clearQueue>
 b6e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sortedList>
 b72:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <sortedList+0x1>
 b76:	e8 da       	rcall	.-2608   	; 0x148 <clearQueue>
 b78:	55 cf       	rjmp	.-342    	; 0xa24 <main+0x6a>

00000b7a <__umulhisi3>:
 b7a:	a2 9f       	mul	r26, r18
 b7c:	b0 01       	movw	r22, r0
 b7e:	b3 9f       	mul	r27, r19
 b80:	c0 01       	movw	r24, r0
 b82:	a3 9f       	mul	r26, r19
 b84:	70 0d       	add	r23, r0
 b86:	81 1d       	adc	r24, r1
 b88:	11 24       	eor	r1, r1
 b8a:	91 1d       	adc	r25, r1
 b8c:	b2 9f       	mul	r27, r18
 b8e:	70 0d       	add	r23, r0
 b90:	81 1d       	adc	r24, r1
 b92:	11 24       	eor	r1, r1
 b94:	91 1d       	adc	r25, r1
 b96:	08 95       	ret

00000b98 <malloc>:
 b98:	0f 93       	push	r16
 b9a:	1f 93       	push	r17
 b9c:	cf 93       	push	r28
 b9e:	df 93       	push	r29
 ba0:	82 30       	cpi	r24, 0x02	; 2
 ba2:	91 05       	cpc	r25, r1
 ba4:	10 f4       	brcc	.+4      	; 0xbaa <malloc+0x12>
 ba6:	82 e0       	ldi	r24, 0x02	; 2
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <__flp>
 bae:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <__flp+0x1>
 bb2:	20 e0       	ldi	r18, 0x00	; 0
 bb4:	30 e0       	ldi	r19, 0x00	; 0
 bb6:	a0 e0       	ldi	r26, 0x00	; 0
 bb8:	b0 e0       	ldi	r27, 0x00	; 0
 bba:	30 97       	sbiw	r30, 0x00	; 0
 bbc:	19 f1       	breq	.+70     	; 0xc04 <malloc+0x6c>
 bbe:	40 81       	ld	r20, Z
 bc0:	51 81       	ldd	r21, Z+1	; 0x01
 bc2:	02 81       	ldd	r16, Z+2	; 0x02
 bc4:	13 81       	ldd	r17, Z+3	; 0x03
 bc6:	48 17       	cp	r20, r24
 bc8:	59 07       	cpc	r21, r25
 bca:	c8 f0       	brcs	.+50     	; 0xbfe <malloc+0x66>
 bcc:	84 17       	cp	r24, r20
 bce:	95 07       	cpc	r25, r21
 bd0:	69 f4       	brne	.+26     	; 0xbec <malloc+0x54>
 bd2:	10 97       	sbiw	r26, 0x00	; 0
 bd4:	31 f0       	breq	.+12     	; 0xbe2 <malloc+0x4a>
 bd6:	12 96       	adiw	r26, 0x02	; 2
 bd8:	0c 93       	st	X, r16
 bda:	12 97       	sbiw	r26, 0x02	; 2
 bdc:	13 96       	adiw	r26, 0x03	; 3
 bde:	1c 93       	st	X, r17
 be0:	27 c0       	rjmp	.+78     	; 0xc30 <malloc+0x98>
 be2:	00 93 64 01 	sts	0x0164, r16	; 0x800164 <__flp>
 be6:	10 93 65 01 	sts	0x0165, r17	; 0x800165 <__flp+0x1>
 bea:	22 c0       	rjmp	.+68     	; 0xc30 <malloc+0x98>
 bec:	21 15       	cp	r18, r1
 bee:	31 05       	cpc	r19, r1
 bf0:	19 f0       	breq	.+6      	; 0xbf8 <malloc+0x60>
 bf2:	42 17       	cp	r20, r18
 bf4:	53 07       	cpc	r21, r19
 bf6:	18 f4       	brcc	.+6      	; 0xbfe <malloc+0x66>
 bf8:	9a 01       	movw	r18, r20
 bfa:	bd 01       	movw	r22, r26
 bfc:	ef 01       	movw	r28, r30
 bfe:	df 01       	movw	r26, r30
 c00:	f8 01       	movw	r30, r16
 c02:	db cf       	rjmp	.-74     	; 0xbba <malloc+0x22>
 c04:	21 15       	cp	r18, r1
 c06:	31 05       	cpc	r19, r1
 c08:	f9 f0       	breq	.+62     	; 0xc48 <malloc+0xb0>
 c0a:	28 1b       	sub	r18, r24
 c0c:	39 0b       	sbc	r19, r25
 c0e:	24 30       	cpi	r18, 0x04	; 4
 c10:	31 05       	cpc	r19, r1
 c12:	80 f4       	brcc	.+32     	; 0xc34 <malloc+0x9c>
 c14:	8a 81       	ldd	r24, Y+2	; 0x02
 c16:	9b 81       	ldd	r25, Y+3	; 0x03
 c18:	61 15       	cp	r22, r1
 c1a:	71 05       	cpc	r23, r1
 c1c:	21 f0       	breq	.+8      	; 0xc26 <malloc+0x8e>
 c1e:	fb 01       	movw	r30, r22
 c20:	93 83       	std	Z+3, r25	; 0x03
 c22:	82 83       	std	Z+2, r24	; 0x02
 c24:	04 c0       	rjmp	.+8      	; 0xc2e <malloc+0x96>
 c26:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <__flp+0x1>
 c2a:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__flp>
 c2e:	fe 01       	movw	r30, r28
 c30:	32 96       	adiw	r30, 0x02	; 2
 c32:	44 c0       	rjmp	.+136    	; 0xcbc <malloc+0x124>
 c34:	fe 01       	movw	r30, r28
 c36:	e2 0f       	add	r30, r18
 c38:	f3 1f       	adc	r31, r19
 c3a:	81 93       	st	Z+, r24
 c3c:	91 93       	st	Z+, r25
 c3e:	22 50       	subi	r18, 0x02	; 2
 c40:	31 09       	sbc	r19, r1
 c42:	39 83       	std	Y+1, r19	; 0x01
 c44:	28 83       	st	Y, r18
 c46:	3a c0       	rjmp	.+116    	; 0xcbc <malloc+0x124>
 c48:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 c4c:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 c50:	23 2b       	or	r18, r19
 c52:	41 f4       	brne	.+16     	; 0xc64 <malloc+0xcc>
 c54:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 c58:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 c5c:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__brkval+0x1>
 c60:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__brkval>
 c64:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 c68:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 c6c:	21 15       	cp	r18, r1
 c6e:	31 05       	cpc	r19, r1
 c70:	41 f4       	brne	.+16     	; 0xc82 <malloc+0xea>
 c72:	2d b7       	in	r18, 0x3d	; 61
 c74:	3e b7       	in	r19, 0x3e	; 62
 c76:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c7a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c7e:	24 1b       	sub	r18, r20
 c80:	35 0b       	sbc	r19, r21
 c82:	e0 91 62 01 	lds	r30, 0x0162	; 0x800162 <__brkval>
 c86:	f0 91 63 01 	lds	r31, 0x0163	; 0x800163 <__brkval+0x1>
 c8a:	e2 17       	cp	r30, r18
 c8c:	f3 07       	cpc	r31, r19
 c8e:	a0 f4       	brcc	.+40     	; 0xcb8 <malloc+0x120>
 c90:	2e 1b       	sub	r18, r30
 c92:	3f 0b       	sbc	r19, r31
 c94:	28 17       	cp	r18, r24
 c96:	39 07       	cpc	r19, r25
 c98:	78 f0       	brcs	.+30     	; 0xcb8 <malloc+0x120>
 c9a:	ac 01       	movw	r20, r24
 c9c:	4e 5f       	subi	r20, 0xFE	; 254
 c9e:	5f 4f       	sbci	r21, 0xFF	; 255
 ca0:	24 17       	cp	r18, r20
 ca2:	35 07       	cpc	r19, r21
 ca4:	48 f0       	brcs	.+18     	; 0xcb8 <malloc+0x120>
 ca6:	4e 0f       	add	r20, r30
 ca8:	5f 1f       	adc	r21, r31
 caa:	50 93 63 01 	sts	0x0163, r21	; 0x800163 <__brkval+0x1>
 cae:	40 93 62 01 	sts	0x0162, r20	; 0x800162 <__brkval>
 cb2:	81 93       	st	Z+, r24
 cb4:	91 93       	st	Z+, r25
 cb6:	02 c0       	rjmp	.+4      	; 0xcbc <malloc+0x124>
 cb8:	e0 e0       	ldi	r30, 0x00	; 0
 cba:	f0 e0       	ldi	r31, 0x00	; 0
 cbc:	cf 01       	movw	r24, r30
 cbe:	df 91       	pop	r29
 cc0:	cf 91       	pop	r28
 cc2:	1f 91       	pop	r17
 cc4:	0f 91       	pop	r16
 cc6:	08 95       	ret

00000cc8 <free>:
 cc8:	cf 93       	push	r28
 cca:	df 93       	push	r29
 ccc:	00 97       	sbiw	r24, 0x00	; 0
 cce:	09 f4       	brne	.+2      	; 0xcd2 <free+0xa>
 cd0:	81 c0       	rjmp	.+258    	; 0xdd4 <free+0x10c>
 cd2:	fc 01       	movw	r30, r24
 cd4:	32 97       	sbiw	r30, 0x02	; 2
 cd6:	13 82       	std	Z+3, r1	; 0x03
 cd8:	12 82       	std	Z+2, r1	; 0x02
 cda:	a0 91 64 01 	lds	r26, 0x0164	; 0x800164 <__flp>
 cde:	b0 91 65 01 	lds	r27, 0x0165	; 0x800165 <__flp+0x1>
 ce2:	10 97       	sbiw	r26, 0x00	; 0
 ce4:	81 f4       	brne	.+32     	; 0xd06 <free+0x3e>
 ce6:	20 81       	ld	r18, Z
 ce8:	31 81       	ldd	r19, Z+1	; 0x01
 cea:	82 0f       	add	r24, r18
 cec:	93 1f       	adc	r25, r19
 cee:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 cf2:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 cf6:	28 17       	cp	r18, r24
 cf8:	39 07       	cpc	r19, r25
 cfa:	51 f5       	brne	.+84     	; 0xd50 <free+0x88>
 cfc:	f0 93 63 01 	sts	0x0163, r31	; 0x800163 <__brkval+0x1>
 d00:	e0 93 62 01 	sts	0x0162, r30	; 0x800162 <__brkval>
 d04:	67 c0       	rjmp	.+206    	; 0xdd4 <free+0x10c>
 d06:	ed 01       	movw	r28, r26
 d08:	20 e0       	ldi	r18, 0x00	; 0
 d0a:	30 e0       	ldi	r19, 0x00	; 0
 d0c:	ce 17       	cp	r28, r30
 d0e:	df 07       	cpc	r29, r31
 d10:	40 f4       	brcc	.+16     	; 0xd22 <free+0x5a>
 d12:	4a 81       	ldd	r20, Y+2	; 0x02
 d14:	5b 81       	ldd	r21, Y+3	; 0x03
 d16:	9e 01       	movw	r18, r28
 d18:	41 15       	cp	r20, r1
 d1a:	51 05       	cpc	r21, r1
 d1c:	f1 f0       	breq	.+60     	; 0xd5a <free+0x92>
 d1e:	ea 01       	movw	r28, r20
 d20:	f5 cf       	rjmp	.-22     	; 0xd0c <free+0x44>
 d22:	d3 83       	std	Z+3, r29	; 0x03
 d24:	c2 83       	std	Z+2, r28	; 0x02
 d26:	40 81       	ld	r20, Z
 d28:	51 81       	ldd	r21, Z+1	; 0x01
 d2a:	84 0f       	add	r24, r20
 d2c:	95 1f       	adc	r25, r21
 d2e:	c8 17       	cp	r28, r24
 d30:	d9 07       	cpc	r29, r25
 d32:	59 f4       	brne	.+22     	; 0xd4a <free+0x82>
 d34:	88 81       	ld	r24, Y
 d36:	99 81       	ldd	r25, Y+1	; 0x01
 d38:	84 0f       	add	r24, r20
 d3a:	95 1f       	adc	r25, r21
 d3c:	02 96       	adiw	r24, 0x02	; 2
 d3e:	91 83       	std	Z+1, r25	; 0x01
 d40:	80 83       	st	Z, r24
 d42:	8a 81       	ldd	r24, Y+2	; 0x02
 d44:	9b 81       	ldd	r25, Y+3	; 0x03
 d46:	93 83       	std	Z+3, r25	; 0x03
 d48:	82 83       	std	Z+2, r24	; 0x02
 d4a:	21 15       	cp	r18, r1
 d4c:	31 05       	cpc	r19, r1
 d4e:	29 f4       	brne	.+10     	; 0xd5a <free+0x92>
 d50:	f0 93 65 01 	sts	0x0165, r31	; 0x800165 <__flp+0x1>
 d54:	e0 93 64 01 	sts	0x0164, r30	; 0x800164 <__flp>
 d58:	3d c0       	rjmp	.+122    	; 0xdd4 <free+0x10c>
 d5a:	e9 01       	movw	r28, r18
 d5c:	fb 83       	std	Y+3, r31	; 0x03
 d5e:	ea 83       	std	Y+2, r30	; 0x02
 d60:	49 91       	ld	r20, Y+
 d62:	59 91       	ld	r21, Y+
 d64:	c4 0f       	add	r28, r20
 d66:	d5 1f       	adc	r29, r21
 d68:	ec 17       	cp	r30, r28
 d6a:	fd 07       	cpc	r31, r29
 d6c:	61 f4       	brne	.+24     	; 0xd86 <free+0xbe>
 d6e:	80 81       	ld	r24, Z
 d70:	91 81       	ldd	r25, Z+1	; 0x01
 d72:	84 0f       	add	r24, r20
 d74:	95 1f       	adc	r25, r21
 d76:	02 96       	adiw	r24, 0x02	; 2
 d78:	e9 01       	movw	r28, r18
 d7a:	99 83       	std	Y+1, r25	; 0x01
 d7c:	88 83       	st	Y, r24
 d7e:	82 81       	ldd	r24, Z+2	; 0x02
 d80:	93 81       	ldd	r25, Z+3	; 0x03
 d82:	9b 83       	std	Y+3, r25	; 0x03
 d84:	8a 83       	std	Y+2, r24	; 0x02
 d86:	e0 e0       	ldi	r30, 0x00	; 0
 d88:	f0 e0       	ldi	r31, 0x00	; 0
 d8a:	12 96       	adiw	r26, 0x02	; 2
 d8c:	8d 91       	ld	r24, X+
 d8e:	9c 91       	ld	r25, X
 d90:	13 97       	sbiw	r26, 0x03	; 3
 d92:	00 97       	sbiw	r24, 0x00	; 0
 d94:	19 f0       	breq	.+6      	; 0xd9c <free+0xd4>
 d96:	fd 01       	movw	r30, r26
 d98:	dc 01       	movw	r26, r24
 d9a:	f7 cf       	rjmp	.-18     	; 0xd8a <free+0xc2>
 d9c:	8d 91       	ld	r24, X+
 d9e:	9c 91       	ld	r25, X
 da0:	11 97       	sbiw	r26, 0x01	; 1
 da2:	9d 01       	movw	r18, r26
 da4:	2e 5f       	subi	r18, 0xFE	; 254
 da6:	3f 4f       	sbci	r19, 0xFF	; 255
 da8:	82 0f       	add	r24, r18
 daa:	93 1f       	adc	r25, r19
 dac:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 db0:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 db4:	28 17       	cp	r18, r24
 db6:	39 07       	cpc	r19, r25
 db8:	69 f4       	brne	.+26     	; 0xdd4 <free+0x10c>
 dba:	30 97       	sbiw	r30, 0x00	; 0
 dbc:	29 f4       	brne	.+10     	; 0xdc8 <free+0x100>
 dbe:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <__flp+0x1>
 dc2:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <__flp>
 dc6:	02 c0       	rjmp	.+4      	; 0xdcc <free+0x104>
 dc8:	13 82       	std	Z+3, r1	; 0x03
 dca:	12 82       	std	Z+2, r1	; 0x02
 dcc:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <__brkval+0x1>
 dd0:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <__brkval>
 dd4:	df 91       	pop	r29
 dd6:	cf 91       	pop	r28
 dd8:	08 95       	ret

00000dda <_exit>:
 dda:	f8 94       	cli

00000ddc <__stop_program>:
 ddc:	ff cf       	rjmp	.-2      	; 0xddc <__stop_program>
