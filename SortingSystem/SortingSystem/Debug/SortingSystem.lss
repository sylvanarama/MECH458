
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000bd6  00000c6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bd6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004d  0080011a  0080011a  00000c84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c90  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee2  00000000  00000000  00002b14  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e6c  00000000  00000000  000039f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  00004864  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a5d  00000000  00000000  00004cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ca9  00000000  00000000  00005721  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  000063ca  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	da c0       	rjmp	.+436    	; 0x1ba <__vector_1>
   6:	00 00       	nop
   8:	e7 c0       	rjmp	.+462    	; 0x1d8 <__vector_2>
   a:	00 00       	nop
   c:	f4 c0       	rjmp	.+488    	; 0x1f6 <__vector_3>
   e:	00 00       	nop
  10:	0b c1       	rjmp	.+534    	; 0x228 <__vector_4>
  12:	00 00       	nop
  14:	18 c1       	rjmp	.+560    	; 0x246 <__vector_5>
  16:	00 00       	nop
  18:	39 c1       	rjmp	.+626    	; 0x28c <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	99 c0       	rjmp	.+306    	; 0x188 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c1       	rjmp	.+576    	; 0x2b6 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8d c0       	rjmp	.+282    	; 0x19c <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e6 ed       	ldi	r30, 0xD6	; 214
  ac:	fb e0       	ldi	r31, 0x0B	; 11
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	aa 31       	cpi	r26, 0x1A	; 26
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	aa e1       	ldi	r26, 0x1A	; 26
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a7 36       	cpi	r26, 0x67	; 103
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	78 d3       	rcall	.+1776   	; 0x7c0 <main>
  d0:	80 c5       	rjmp	.+2816   	; 0xbd2 <_exit>

000000d2 <__bad_interrupt>:
  d2:	3b c1       	rjmp	.+630    	; 0x34a <__vector_default>

000000d4 <initItem>:
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	5b d4       	rcall	.+2230   	; 0x990 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	4e d4       	rcall	.+2204   	; 0x990 <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <clearQueue>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	99 81       	ldd	r25, Y+1	; 0x01
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	51 f0       	breq	.+20     	; 0x16a <clearQueue+0x22>
 156:	fc 01       	movw	r30, r24
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	37 81       	ldd	r19, Z+7	; 0x07
 15c:	39 83       	std	Y+1, r19	; 0x01
 15e:	28 83       	st	Y, r18
 160:	af d4       	rcall	.+2398   	; 0xac0 <free>
 162:	88 81       	ld	r24, Y
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	b1 f7       	brne	.-20     	; 0x156 <clearQueue+0xe>
 16a:	1b 82       	std	Y+3, r1	; 0x03
 16c:	1a 82       	std	Y+2, r1	; 0x02
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <isEmpty>:
 174:	fc 01       	movw	r30, r24
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	23 2b       	or	r18, r19
 180:	11 f0       	breq	.+4      	; 0x186 <isEmpty+0x12>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	08 95       	ret

00000188 <__vector_21>:
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_32>:
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <timer3_flag>
 1ae:	8f 91       	pop	r24
 1b0:	0f 90       	pop	r0
 1b2:	0f be       	out	0x3f, r0	; 63
 1b4:	0f 90       	pop	r0
 1b6:	1f 90       	pop	r1
 1b8:	18 95       	reti

000001ba <__vector_1>:
 1ba:	1f 92       	push	r1
 1bc:	0f 92       	push	r0
 1be:	0f b6       	in	r0, 0x3f	; 63
 1c0:	0f 92       	push	r0
 1c2:	11 24       	eor	r1, r1
 1c4:	8f 93       	push	r24
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <OS1_flag>
 1cc:	8f 91       	pop	r24
 1ce:	0f 90       	pop	r0
 1d0:	0f be       	out	0x3f, r0	; 63
 1d2:	0f 90       	pop	r0
 1d4:	1f 90       	pop	r1
 1d6:	18 95       	reti

000001d8 <__vector_2>:
 1d8:	1f 92       	push	r1
 1da:	0f 92       	push	r0
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	0f 92       	push	r0
 1e0:	11 24       	eor	r1, r1
 1e2:	8f 93       	push	r24
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <FER_flag>
 1ea:	8f 91       	pop	r24
 1ec:	0f 90       	pop	r0
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	0f 90       	pop	r0
 1f2:	1f 90       	pop	r1
 1f4:	18 95       	reti

000001f6 <__vector_3>:
 1f6:	1f 92       	push	r1
 1f8:	0f 92       	push	r0
 1fa:	0f b6       	in	r0, 0x3f	; 63
 1fc:	0f 92       	push	r0
 1fe:	11 24       	eor	r1, r1
 200:	8f 93       	push	r24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <OS2_flag>
 208:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflective_present>
 20c:	88 23       	and	r24, r24
 20e:	19 f0       	breq	.+6      	; 0x216 <__vector_3+0x20>
 210:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <reflective_present>
 214:	03 c0       	rjmp	.+6      	; 0x21c <__vector_3+0x26>
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <reflective_present>
 21c:	8f 91       	pop	r24
 21e:	0f 90       	pop	r0
 220:	0f be       	out	0x3f, r0	; 63
 222:	0f 90       	pop	r0
 224:	1f 90       	pop	r1
 226:	18 95       	reti

00000228 <__vector_4>:
 228:	1f 92       	push	r1
 22a:	0f 92       	push	r0
 22c:	0f b6       	in	r0, 0x3f	; 63
 22e:	0f 92       	push	r0
 230:	11 24       	eor	r1, r1
 232:	8f 93       	push	r24
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <OS3_flag>
 23a:	8f 91       	pop	r24
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <__vector_5>:
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	8f 93       	push	r24
 252:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 256:	82 30       	cpi	r24, 0x02	; 2
 258:	39 f4       	brne	.+14     	; 0x268 <__vector_5+0x22>
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <pause_entered>
 260:	83 e0       	ldi	r24, 0x03	; 3
 262:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 266:	0c c0       	rjmp	.+24     	; 0x280 <__vector_5+0x3a>
 268:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 26c:	83 30       	cpi	r24, 0x03	; 3
 26e:	41 f4       	brne	.+16     	; 0x280 <__vector_5+0x3a>
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <operational_entered>
 276:	82 e0       	ldi	r24, 0x02	; 2
 278:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 27c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
 280:	8f 91       	pop	r24
 282:	0f 90       	pop	r0
 284:	0f be       	out	0x3f, r0	; 63
 286:	0f 90       	pop	r0
 288:	1f 90       	pop	r1
 28a:	18 95       	reti

0000028c <__vector_6>:
 28c:	1f 92       	push	r1
 28e:	0f 92       	push	r0
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	0f 92       	push	r0
 294:	11 24       	eor	r1, r1
 296:	8f 93       	push	r24
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <ramp_down_entered>
 29e:	84 e0       	ldi	r24, 0x04	; 4
 2a0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 2a4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 2a8:	88 b9       	out	0x08, r24	; 8
 2aa:	8f 91       	pop	r24
 2ac:	0f 90       	pop	r0
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	0f 90       	pop	r0
 2b2:	1f 90       	pop	r1
 2b4:	18 95       	reti

000002b6 <__vector_29>:
 2b6:	1f 92       	push	r1
 2b8:	0f 92       	push	r0
 2ba:	0f b6       	in	r0, 0x3f	; 63
 2bc:	0f 92       	push	r0
 2be:	11 24       	eor	r1, r1
 2c0:	0b b6       	in	r0, 0x3b	; 59
 2c2:	0f 92       	push	r0
 2c4:	2f 93       	push	r18
 2c6:	3f 93       	push	r19
 2c8:	8f 93       	push	r24
 2ca:	9f 93       	push	r25
 2cc:	ef 93       	push	r30
 2ce:	ff 93       	push	r31
 2d0:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflective_present>
 2d4:	88 23       	and	r24, r24
 2d6:	61 f1       	breq	.+88     	; 0x330 <__vector_29+0x7a>
 2d8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <ADC_result+0x1>
 2e2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <ADC_result>
 2e6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <ADC_result>
 2ea:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <ADC_result+0x1>
 2ee:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2f2:	98 2f       	mov	r25, r24
 2f4:	88 27       	eor	r24, r24
 2f6:	82 2b       	or	r24, r18
 2f8:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <ADC_result+0x1>
 2fc:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <ADC_result>
 300:	20 91 32 01 	lds	r18, 0x0132	; 0x800132 <ADC_result>
 304:	30 91 33 01 	lds	r19, 0x0133	; 0x800133 <ADC_result+0x1>
 308:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <ADC_lowest_val>
 30c:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <ADC_lowest_val+0x1>
 310:	28 17       	cp	r18, r24
 312:	39 07       	cpc	r19, r25
 314:	40 f4       	brcc	.+16     	; 0x326 <__vector_29+0x70>
 316:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <ADC_result>
 31a:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <ADC_result+0x1>
 31e:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <ADC_lowest_val+0x1>
 322:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <ADC_lowest_val>
 326:	ea e7       	ldi	r30, 0x7A	; 122
 328:	f0 e0       	ldi	r31, 0x00	; 0
 32a:	80 81       	ld	r24, Z
 32c:	80 64       	ori	r24, 0x40	; 64
 32e:	80 83       	st	Z, r24
 330:	ff 91       	pop	r31
 332:	ef 91       	pop	r30
 334:	9f 91       	pop	r25
 336:	8f 91       	pop	r24
 338:	3f 91       	pop	r19
 33a:	2f 91       	pop	r18
 33c:	0f 90       	pop	r0
 33e:	0b be       	out	0x3b, r0	; 59
 340:	0f 90       	pop	r0
 342:	0f be       	out	0x3f, r0	; 63
 344:	0f 90       	pop	r0
 346:	1f 90       	pop	r1
 348:	18 95       	reti

0000034a <__vector_default>:
 34a:	1f 92       	push	r1
 34c:	0f 92       	push	r0
 34e:	0f b6       	in	r0, 0x3f	; 63
 350:	0f 92       	push	r0
 352:	11 24       	eor	r1, r1
 354:	0f 90       	pop	r0
 356:	0f be       	out	0x3f, r0	; 63
 358:	0f 90       	pop	r0
 35a:	1f 90       	pop	r1
 35c:	18 95       	reti

0000035e <init_interrupts>:
 35e:	8a e9       	ldi	r24, 0x9A	; 154
 360:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 364:	8a e0       	ldi	r24, 0x0A	; 10
 366:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 36a:	8d b3       	in	r24, 0x1d	; 29
 36c:	8f 63       	ori	r24, 0x3F	; 63
 36e:	8d bb       	out	0x1d, r24	; 29
 370:	08 95       	ret

00000372 <init_timer0_pwm>:
 372:	84 b5       	in	r24, 0x24	; 36
 374:	83 68       	ori	r24, 0x83	; 131
 376:	84 bd       	out	0x24, r24	; 36
 378:	85 b5       	in	r24, 0x25	; 37
 37a:	82 60       	ori	r24, 0x02	; 2
 37c:	85 bd       	out	0x25, r24	; 37
 37e:	80 e8       	ldi	r24, 0x80	; 128
 380:	87 bd       	out	0x27, r24	; 39
 382:	08 95       	ret

00000384 <init_timer3>:
 384:	e1 e9       	ldi	r30, 0x91	; 145
 386:	f0 e0       	ldi	r31, 0x00	; 0
 388:	80 81       	ld	r24, Z
 38a:	8b 60       	ori	r24, 0x0B	; 11
 38c:	80 83       	st	Z, r24
 38e:	e1 e7       	ldi	r30, 0x71	; 113
 390:	f0 e0       	ldi	r31, 0x00	; 0
 392:	80 81       	ld	r24, Z
 394:	82 60       	ori	r24, 0x02	; 2
 396:	80 83       	st	Z, r24
 398:	c1 9a       	sbi	0x18, 1	; 24
 39a:	80 81       	ld	r24, Z
 39c:	8d 7f       	andi	r24, 0xFD	; 253
 39e:	80 83       	st	Z, r24
 3a0:	08 95       	ret

000003a2 <start_timer3>:
 3a2:	9c 01       	movw	r18, r24
 3a4:	e1 e7       	ldi	r30, 0x71	; 113
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	90 81       	ld	r25, Z
 3aa:	92 60       	ori	r25, 0x02	; 2
 3ac:	90 83       	st	Z, r25
 3ae:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 3b2:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 3b6:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 3ba:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 3be:	08 95       	ret

000003c0 <init_motor>:
 3c0:	84 e0       	ldi	r24, 0x04	; 4
 3c2:	85 b9       	out	0x05, r24	; 5
 3c4:	80 e3       	ldi	r24, 0x30	; 48
 3c6:	87 bd       	out	0x27, r24	; 39
 3c8:	08 95       	ret

000003ca <init_ADC>:
 3ca:	8f ef       	ldi	r24, 0xFF	; 255
 3cc:	93 e0       	ldi	r25, 0x03	; 3
 3ce:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <ADC_result+0x1>
 3d2:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <ADC_result>
 3d6:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <ADC_lowest_val+0x1>
 3da:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <ADC_lowest_val>
 3de:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <reflective_present>
 3e2:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <item_ready>
 3e6:	ec e7       	ldi	r30, 0x7C	; 124
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	80 81       	ld	r24, Z
 3ec:	80 64       	ori	r24, 0x40	; 64
 3ee:	80 83       	st	Z, r24
 3f0:	ea e7       	ldi	r30, 0x7A	; 122
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	80 81       	ld	r24, Z
 3f6:	82 60       	ori	r24, 0x02	; 2
 3f8:	80 83       	st	Z, r24
 3fa:	80 81       	ld	r24, Z
 3fc:	81 60       	ori	r24, 0x01	; 1
 3fe:	80 83       	st	Z, r24
 400:	80 81       	ld	r24, Z
 402:	88 60       	ori	r24, 0x08	; 8
 404:	80 83       	st	Z, r24
 406:	80 81       	ld	r24, Z
 408:	80 68       	ori	r24, 0x80	; 128
 40a:	80 83       	st	Z, r24
 40c:	08 95       	ret

0000040e <init_stepper>:
 40e:	8f ef       	ldi	r24, 0xFF	; 255
 410:	81 b9       	out	0x01, r24	; 1
 412:	85 e3       	ldi	r24, 0x35	; 53
 414:	82 b9       	out	0x02, r24	; 2
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <motor_position+0x1>
 41e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <motor_position>
 422:	10 92 5c 01 	sts	0x015C, r1	; 0x80015c <stepper_on+0x1>
 426:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stepper_on>
 42a:	08 95       	ret

0000042c <mTimer>:
 42c:	ac 01       	movw	r20, r24
 42e:	e1 e8       	ldi	r30, 0x81	; 129
 430:	f0 e0       	ldi	r31, 0x00	; 0
 432:	90 81       	ld	r25, Z
 434:	91 60       	ori	r25, 0x01	; 1
 436:	90 83       	st	Z, r25
 438:	90 81       	ld	r25, Z
 43a:	98 60       	ori	r25, 0x08	; 8
 43c:	90 83       	st	Z, r25
 43e:	88 ee       	ldi	r24, 0xE8	; 232
 440:	93 e0       	ldi	r25, 0x03	; 3
 442:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 446:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 44a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 44e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 452:	b1 9a       	sbi	0x16, 1	; 22
 454:	20 e0       	ldi	r18, 0x00	; 0
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	05 c0       	rjmp	.+10     	; 0x464 <mTimer+0x38>
 45a:	b1 9b       	sbis	0x16, 1	; 22
 45c:	fe cf       	rjmp	.-4      	; 0x45a <mTimer+0x2e>
 45e:	b1 9a       	sbi	0x16, 1	; 22
 460:	2f 5f       	subi	r18, 0xFF	; 255
 462:	3f 4f       	sbci	r19, 0xFF	; 255
 464:	24 17       	cp	r18, r20
 466:	35 07       	cpc	r19, r21
 468:	1c f4       	brge	.+6      	; 0x470 <mTimer+0x44>
 46a:	b1 9b       	sbis	0x16, 1	; 22
 46c:	f6 cf       	rjmp	.-20     	; 0x45a <mTimer+0x2e>
 46e:	f7 cf       	rjmp	.-18     	; 0x45e <mTimer+0x32>
 470:	08 95       	ret

00000472 <stepper_rotate>:
 472:	cf 92       	push	r12
 474:	df 92       	push	r13
 476:	ef 92       	push	r14
 478:	ff 92       	push	r15
 47a:	0f 93       	push	r16
 47c:	1f 93       	push	r17
 47e:	cf 93       	push	r28
 480:	df 93       	push	r29
 482:	18 16       	cp	r1, r24
 484:	19 06       	cpc	r1, r25
 486:	0c f0       	brlt	.+2      	; 0x48a <stepper_rotate+0x18>
 488:	61 c0       	rjmp	.+194    	; 0x54c <stepper_rotate+0xda>
 48a:	6b 01       	movw	r12, r22
 48c:	8c 01       	movw	r16, r24
 48e:	c0 e0       	ldi	r28, 0x00	; 0
 490:	d0 e0       	ldi	r29, 0x00	; 0
 492:	0f 2e       	mov	r0, r31
 494:	fa e0       	ldi	r31, 0x0A	; 10
 496:	ef 2e       	mov	r14, r31
 498:	f1 2c       	mov	r15, r1
 49a:	f0 2d       	mov	r31, r0
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	c8 16       	cp	r12, r24
 4a0:	d1 04       	cpc	r13, r1
 4a2:	d1 f4       	brne	.+52     	; 0x4d8 <stepper_rotate+0x66>
 4a4:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 4a8:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 4ac:	e3 5f       	subi	r30, 0xF3	; 243
 4ae:	fe 4f       	sbci	r31, 0xFE	; 254
 4b0:	80 81       	ld	r24, Z
 4b2:	82 b9       	out	0x02, r24	; 2
 4b4:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 4b8:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 4bc:	01 96       	adiw	r24, 0x01	; 1
 4be:	83 70       	andi	r24, 0x03	; 3
 4c0:	90 78       	andi	r25, 0x80	; 128
 4c2:	99 23       	and	r25, r25
 4c4:	24 f4       	brge	.+8      	; 0x4ce <stepper_rotate+0x5c>
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	8c 6f       	ori	r24, 0xFC	; 252
 4ca:	9f 6f       	ori	r25, 0xFF	; 255
 4cc:	01 96       	adiw	r24, 0x01	; 1
 4ce:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 4d2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 4d6:	1d c0       	rjmp	.+58     	; 0x512 <stepper_rotate+0xa0>
 4d8:	8f ef       	ldi	r24, 0xFF	; 255
 4da:	c8 16       	cp	r12, r24
 4dc:	d8 06       	cpc	r13, r24
 4de:	c9 f4       	brne	.+50     	; 0x512 <stepper_rotate+0xa0>
 4e0:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 4e4:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 4e8:	e7 5f       	subi	r30, 0xF7	; 247
 4ea:	fe 4f       	sbci	r31, 0xFE	; 254
 4ec:	80 81       	ld	r24, Z
 4ee:	82 b9       	out	0x02, r24	; 2
 4f0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 4f4:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 4f8:	01 96       	adiw	r24, 0x01	; 1
 4fa:	83 70       	andi	r24, 0x03	; 3
 4fc:	90 78       	andi	r25, 0x80	; 128
 4fe:	99 23       	and	r25, r25
 500:	24 f4       	brge	.+8      	; 0x50a <stepper_rotate+0x98>
 502:	01 97       	sbiw	r24, 0x01	; 1
 504:	8c 6f       	ori	r24, 0xFC	; 252
 506:	9f 6f       	ori	r25, 0xFF	; 255
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 50e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 512:	c7 01       	movw	r24, r14
 514:	8b df       	rcall	.-234    	; 0x42c <mTimer>
 516:	c4 30       	cpi	r28, 0x04	; 4
 518:	d1 05       	cpc	r29, r1
 51a:	3c f4       	brge	.+14     	; 0x52a <stepper_rotate+0xb8>
 51c:	86 e0       	ldi	r24, 0x06	; 6
 51e:	e8 16       	cp	r14, r24
 520:	f1 04       	cpc	r15, r1
 522:	1c f0       	brlt	.+6      	; 0x52a <stepper_rotate+0xb8>
 524:	81 e0       	ldi	r24, 0x01	; 1
 526:	e8 1a       	sub	r14, r24
 528:	f1 08       	sbc	r15, r1
 52a:	c8 01       	movw	r24, r16
 52c:	8c 1b       	sub	r24, r28
 52e:	9d 0b       	sbc	r25, r29
 530:	05 97       	sbiw	r24, 0x05	; 5
 532:	3c f4       	brge	.+14     	; 0x542 <stepper_rotate+0xd0>
 534:	8b e0       	ldi	r24, 0x0B	; 11
 536:	e8 16       	cp	r14, r24
 538:	f1 04       	cpc	r15, r1
 53a:	1c f4       	brge	.+6      	; 0x542 <stepper_rotate+0xd0>
 53c:	8f ef       	ldi	r24, 0xFF	; 255
 53e:	e8 1a       	sub	r14, r24
 540:	f8 0a       	sbc	r15, r24
 542:	21 96       	adiw	r28, 0x01	; 1
 544:	0c 17       	cp	r16, r28
 546:	1d 07       	cpc	r17, r29
 548:	09 f0       	breq	.+2      	; 0x54c <stepper_rotate+0xda>
 54a:	a8 cf       	rjmp	.-176    	; 0x49c <stepper_rotate+0x2a>
 54c:	df 91       	pop	r29
 54e:	cf 91       	pop	r28
 550:	1f 91       	pop	r17
 552:	0f 91       	pop	r16
 554:	ff 90       	pop	r15
 556:	ef 90       	pop	r14
 558:	df 90       	pop	r13
 55a:	cf 90       	pop	r12
 55c:	08 95       	ret

0000055e <stepper_position>:
 55e:	cf 93       	push	r28
 560:	df 93       	push	r29
 562:	c8 2f       	mov	r28, r24
 564:	d0 e0       	ldi	r29, 0x00	; 0
 566:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <motor_position>
 56a:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <motor_position+0x1>
 56e:	9e 01       	movw	r18, r28
 570:	28 1b       	sub	r18, r24
 572:	39 0b       	sbc	r19, r25
 574:	21 30       	cpi	r18, 0x01	; 1
 576:	31 05       	cpc	r19, r1
 578:	21 f0       	breq	.+8      	; 0x582 <stepper_position+0x24>
 57a:	2d 3f       	cpi	r18, 0xFD	; 253
 57c:	8f ef       	ldi	r24, 0xFF	; 255
 57e:	38 07       	cpc	r19, r24
 580:	31 f4       	brne	.+12     	; 0x58e <stepper_position+0x30>
 582:	61 e0       	ldi	r22, 0x01	; 1
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	82 e3       	ldi	r24, 0x32	; 50
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	73 df       	rcall	.-282    	; 0x472 <stepper_rotate>
 58c:	18 c0       	rjmp	.+48     	; 0x5be <stepper_position+0x60>
 58e:	2f 3f       	cpi	r18, 0xFF	; 255
 590:	8f ef       	ldi	r24, 0xFF	; 255
 592:	38 07       	cpc	r19, r24
 594:	19 f0       	breq	.+6      	; 0x59c <stepper_position+0x3e>
 596:	23 30       	cpi	r18, 0x03	; 3
 598:	31 05       	cpc	r19, r1
 59a:	31 f4       	brne	.+12     	; 0x5a8 <stepper_position+0x4a>
 59c:	6f ef       	ldi	r22, 0xFF	; 255
 59e:	7f ef       	ldi	r23, 0xFF	; 255
 5a0:	82 e3       	ldi	r24, 0x32	; 50
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	66 df       	rcall	.-308    	; 0x472 <stepper_rotate>
 5a6:	0b c0       	rjmp	.+22     	; 0x5be <stepper_position+0x60>
 5a8:	22 30       	cpi	r18, 0x02	; 2
 5aa:	31 05       	cpc	r19, r1
 5ac:	19 f0       	breq	.+6      	; 0x5b4 <stepper_position+0x56>
 5ae:	2e 3f       	cpi	r18, 0xFE	; 254
 5b0:	3f 4f       	sbci	r19, 0xFF	; 255
 5b2:	29 f4       	brne	.+10     	; 0x5be <stepper_position+0x60>
 5b4:	61 e0       	ldi	r22, 0x01	; 1
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	84 e6       	ldi	r24, 0x64	; 100
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	5a df       	rcall	.-332    	; 0x472 <stepper_rotate>
 5be:	d0 93 35 01 	sts	0x0135, r29	; 0x800135 <motor_position+0x1>
 5c2:	c0 93 34 01 	sts	0x0134, r28	; 0x800134 <motor_position>
 5c6:	df 91       	pop	r29
 5c8:	cf 91       	pop	r28
 5ca:	08 95       	ret

000005cc <entry_sensor>:
 5cc:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <OS1_flag>
 5d0:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <item_number>
 5d4:	8f 5f       	subi	r24, 0xFF	; 255
 5d6:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <item_number>
 5da:	7c dd       	rcall	.-1288   	; 0xd4 <initItem>
 5dc:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <item_number>
 5e0:	fc 01       	movw	r30, r24
 5e2:	25 83       	std	Z+5, r18	; 0x05
 5e4:	21 e0       	ldi	r18, 0x01	; 1
 5e6:	24 83       	std	Z+4, r18	; 0x04
 5e8:	bc 01       	movw	r22, r24
 5ea:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <entryList>
 5ee:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <entryList+0x1>
 5f2:	86 cd       	rjmp	.-1268   	; 0x100 <enqueue>
 5f4:	08 95       	ret

000005f6 <metal_sensor>:
 5f6:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <FER_flag>
 5fa:	e0 91 5f 01 	lds	r30, 0x015F	; 0x80015f <entryList>
 5fe:	f0 91 60 01 	lds	r31, 0x0160	; 0x800160 <entryList+0x1>
 602:	02 80       	ldd	r0, Z+2	; 0x02
 604:	f3 81       	ldd	r31, Z+3	; 0x03
 606:	e0 2d       	mov	r30, r0
 608:	81 e0       	ldi	r24, 0x01	; 1
 60a:	80 83       	st	Z, r24
 60c:	08 95       	ret

0000060e <reflective_sensor>:
 60e:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <OS2_flag>
 612:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflective_present>
 616:	88 23       	and	r24, r24
 618:	31 f0       	breq	.+12     	; 0x626 <reflective_sensor+0x18>
 61a:	ea e7       	ldi	r30, 0x7A	; 122
 61c:	f0 e0       	ldi	r31, 0x00	; 0
 61e:	80 81       	ld	r24, Z
 620:	80 64       	ori	r24, 0x40	; 64
 622:	80 83       	st	Z, r24
 624:	08 95       	ret
 626:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 62a:	82 30       	cpi	r24, 0x02	; 2
 62c:	a1 f4       	brne	.+40     	; 0x656 <reflective_sensor+0x48>
 62e:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <entryList>
 632:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <entryList+0x1>
 636:	75 dd       	rcall	.-1302   	; 0x122 <dequeue>
 638:	20 91 61 01 	lds	r18, 0x0161	; 0x800161 <ADC_lowest_val>
 63c:	30 91 62 01 	lds	r19, 0x0162	; 0x800162 <ADC_lowest_val+0x1>
 640:	fc 01       	movw	r30, r24
 642:	32 83       	std	Z+2, r19	; 0x02
 644:	21 83       	std	Z+1, r18	; 0x01
 646:	22 e0       	ldi	r18, 0x02	; 2
 648:	24 83       	std	Z+4, r18	; 0x04
 64a:	bc 01       	movw	r22, r24
 64c:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <reflectiveList>
 650:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <reflectiveList+0x1>
 654:	55 dd       	rcall	.-1366   	; 0x100 <enqueue>
 656:	8f ef       	ldi	r24, 0xFF	; 255
 658:	93 e0       	ldi	r25, 0x03	; 3
 65a:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <ADC_lowest_val+0x1>
 65e:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <ADC_lowest_val>
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <item_ready>
 668:	08 95       	ret

0000066a <classify_item>:
 66a:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <item_ready>
 66e:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <reflectiveList>
 672:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <reflectiveList+0x1>
 676:	55 dd       	rcall	.-1366   	; 0x122 <dequeue>
 678:	fc 01       	movw	r30, r24
 67a:	81 81       	ldd	r24, Z+1	; 0x01
 67c:	92 81       	ldd	r25, Z+2	; 0x02
 67e:	20 81       	ld	r18, Z
 680:	21 11       	cpse	r18, r1
 682:	34 c0       	rjmp	.+104    	; 0x6ec <classify_item+0x82>
 684:	a1 e1       	ldi	r26, 0x11	; 17
 686:	b1 e0       	ldi	r27, 0x01	; 1
 688:	4d 91       	ld	r20, X+
 68a:	5c 91       	ld	r21, X
 68c:	11 97       	sbiw	r26, 0x01	; 1
 68e:	12 96       	adiw	r26, 0x02	; 2
 690:	2d 91       	ld	r18, X+
 692:	3c 91       	ld	r19, X
 694:	13 97       	sbiw	r26, 0x03	; 3
 696:	48 1b       	sub	r20, r24
 698:	59 0b       	sbc	r21, r25
 69a:	ba 01       	movw	r22, r20
 69c:	22 f4       	brpl	.+8      	; 0x6a6 <classify_item+0x3c>
 69e:	66 27       	eor	r22, r22
 6a0:	77 27       	eor	r23, r23
 6a2:	64 1b       	sub	r22, r20
 6a4:	75 0b       	sbc	r23, r21
 6a6:	a9 01       	movw	r20, r18
 6a8:	48 1b       	sub	r20, r24
 6aa:	59 0b       	sbc	r21, r25
 6ac:	9a 01       	movw	r18, r20
 6ae:	22 f4       	brpl	.+8      	; 0x6b8 <classify_item+0x4e>
 6b0:	22 27       	eor	r18, r18
 6b2:	33 27       	eor	r19, r19
 6b4:	24 1b       	sub	r18, r20
 6b6:	35 0b       	sbc	r19, r21
 6b8:	62 17       	cp	r22, r18
 6ba:	73 07       	cpc	r23, r19
 6bc:	50 f4       	brcc	.+20     	; 0x6d2 <classify_item+0x68>
 6be:	ad e1       	ldi	r26, 0x1D	; 29
 6c0:	b1 e0       	ldi	r27, 0x01	; 1
 6c2:	8d 91       	ld	r24, X+
 6c4:	9c 91       	ld	r25, X
 6c6:	11 97       	sbiw	r26, 0x01	; 1
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	8d 93       	st	X+, r24
 6cc:	9c 93       	st	X, r25
 6ce:	80 e0       	ldi	r24, 0x00	; 0
 6d0:	48 c0       	rjmp	.+144    	; 0x762 <classify_item+0xf8>
 6d2:	ad e1       	ldi	r26, 0x1D	; 29
 6d4:	b1 e0       	ldi	r27, 0x01	; 1
 6d6:	14 96       	adiw	r26, 0x04	; 4
 6d8:	8d 91       	ld	r24, X+
 6da:	9c 91       	ld	r25, X
 6dc:	15 97       	sbiw	r26, 0x05	; 5
 6de:	01 96       	adiw	r24, 0x01	; 1
 6e0:	15 96       	adiw	r26, 0x05	; 5
 6e2:	9c 93       	st	X, r25
 6e4:	8e 93       	st	-X, r24
 6e6:	14 97       	sbiw	r26, 0x04	; 4
 6e8:	82 e0       	ldi	r24, 0x02	; 2
 6ea:	3b c0       	rjmp	.+118    	; 0x762 <classify_item+0xf8>
 6ec:	21 30       	cpi	r18, 0x01	; 1
 6ee:	c1 f5       	brne	.+112    	; 0x760 <classify_item+0xf6>
 6f0:	a1 e1       	ldi	r26, 0x11	; 17
 6f2:	b1 e0       	ldi	r27, 0x01	; 1
 6f4:	14 96       	adiw	r26, 0x04	; 4
 6f6:	4d 91       	ld	r20, X+
 6f8:	5c 91       	ld	r21, X
 6fa:	15 97       	sbiw	r26, 0x05	; 5
 6fc:	16 96       	adiw	r26, 0x06	; 6
 6fe:	2d 91       	ld	r18, X+
 700:	3c 91       	ld	r19, X
 702:	17 97       	sbiw	r26, 0x07	; 7
 704:	48 1b       	sub	r20, r24
 706:	59 0b       	sbc	r21, r25
 708:	ba 01       	movw	r22, r20
 70a:	22 f4       	brpl	.+8      	; 0x714 <classify_item+0xaa>
 70c:	66 27       	eor	r22, r22
 70e:	77 27       	eor	r23, r23
 710:	64 1b       	sub	r22, r20
 712:	75 0b       	sbc	r23, r21
 714:	a9 01       	movw	r20, r18
 716:	48 1b       	sub	r20, r24
 718:	59 0b       	sbc	r21, r25
 71a:	9a 01       	movw	r18, r20
 71c:	22 f4       	brpl	.+8      	; 0x726 <classify_item+0xbc>
 71e:	22 27       	eor	r18, r18
 720:	33 27       	eor	r19, r19
 722:	24 1b       	sub	r18, r20
 724:	35 0b       	sbc	r19, r21
 726:	62 17       	cp	r22, r18
 728:	73 07       	cpc	r23, r19
 72a:	68 f4       	brcc	.+26     	; 0x746 <classify_item+0xdc>
 72c:	ad e1       	ldi	r26, 0x1D	; 29
 72e:	b1 e0       	ldi	r27, 0x01	; 1
 730:	16 96       	adiw	r26, 0x06	; 6
 732:	8d 91       	ld	r24, X+
 734:	9c 91       	ld	r25, X
 736:	17 97       	sbiw	r26, 0x07	; 7
 738:	01 96       	adiw	r24, 0x01	; 1
 73a:	17 96       	adiw	r26, 0x07	; 7
 73c:	9c 93       	st	X, r25
 73e:	8e 93       	st	-X, r24
 740:	16 97       	sbiw	r26, 0x06	; 6
 742:	83 e0       	ldi	r24, 0x03	; 3
 744:	0e c0       	rjmp	.+28     	; 0x762 <classify_item+0xf8>
 746:	ad e1       	ldi	r26, 0x1D	; 29
 748:	b1 e0       	ldi	r27, 0x01	; 1
 74a:	12 96       	adiw	r26, 0x02	; 2
 74c:	8d 91       	ld	r24, X+
 74e:	9c 91       	ld	r25, X
 750:	13 97       	sbiw	r26, 0x03	; 3
 752:	01 96       	adiw	r24, 0x01	; 1
 754:	13 96       	adiw	r26, 0x03	; 3
 756:	9c 93       	st	X, r25
 758:	8e 93       	st	-X, r24
 75a:	12 97       	sbiw	r26, 0x02	; 2
 75c:	81 e0       	ldi	r24, 0x01	; 1
 75e:	01 c0       	rjmp	.+2      	; 0x762 <classify_item+0xf8>
 760:	80 e0       	ldi	r24, 0x00	; 0
 762:	83 83       	std	Z+3, r24	; 0x03
 764:	83 e0       	ldi	r24, 0x03	; 3
 766:	84 83       	std	Z+4, r24	; 0x04
 768:	ad e1       	ldi	r26, 0x1D	; 29
 76a:	b1 e0       	ldi	r27, 0x01	; 1
 76c:	18 96       	adiw	r26, 0x08	; 8
 76e:	8d 91       	ld	r24, X+
 770:	9c 91       	ld	r25, X
 772:	19 97       	sbiw	r26, 0x09	; 9
 774:	01 96       	adiw	r24, 0x01	; 1
 776:	19 96       	adiw	r26, 0x09	; 9
 778:	9c 93       	st	X, r25
 77a:	8e 93       	st	-X, r24
 77c:	18 97       	sbiw	r26, 0x08	; 8
 77e:	bf 01       	movw	r22, r30
 780:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <classifiedList>
 784:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <classifiedList+0x1>
 788:	bb cc       	rjmp	.-1674   	; 0x100 <enqueue>
 78a:	08 95       	ret

0000078c <exit_sensor>:
 78c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <OS3_flag>
 790:	15 b8       	out	0x05, r1	; 5
 792:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <classifiedList>
 796:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <classifiedList+0x1>
 79a:	c3 dc       	rcall	.-1658   	; 0x122 <dequeue>
 79c:	bc 01       	movw	r22, r24
 79e:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <sortedList>
 7a2:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <sortedList+0x1>
 7a6:	ac dc       	rcall	.-1704   	; 0x100 <enqueue>
 7a8:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <sortedList>
 7ac:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <sortedList+0x1>
 7b0:	02 80       	ldd	r0, Z+2	; 0x02
 7b2:	f3 81       	ldd	r31, Z+3	; 0x03
 7b4:	e0 2d       	mov	r30, r0
 7b6:	83 81       	ldd	r24, Z+3	; 0x03
 7b8:	8f 5f       	subi	r24, 0xFF	; 255
 7ba:	d1 de       	rcall	.-606    	; 0x55e <stepper_position>
 7bc:	01 ce       	rjmp	.-1022   	; 0x3c0 <init_motor>
 7be:	08 95       	ret

000007c0 <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 7c0:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 7c2:	8f e8       	ldi	r24, 0x8F	; 143
 7c4:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 7c6:	8f ef       	ldi	r24, 0xFF	; 255
 7c8:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 7ca:	80 ef       	ldi	r24, 0xF0	; 240
 7cc:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 7ce:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 7d0:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 7d2:	18 b8       	out	0x08, r1	; 8
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
	init_motor();
 7d4:	f8 94       	cli
	init_interrupts();
 7d6:	f9 dd       	rcall	.-1038   	; 0x3ca <init_ADC>
 7d8:	cc dd       	rcall	.-1128   	; 0x372 <init_timer0_pwm>
	init_stepper();
 7da:	d4 dd       	rcall	.-1112   	; 0x384 <init_timer3>

	// Calibrate ADC before program starts

	//ADC_calibrate();

	entryList = initQueue();
 7dc:	f1 dd       	rcall	.-1054   	; 0x3c0 <init_motor>
 7de:	bf dd       	rcall	.-1154   	; 0x35e <init_interrupts>
 7e0:	16 de       	rcall	.-980    	; 0x40e <init_stepper>
 7e2:	78 94       	sei
 7e4:	84 dc       	rcall	.-1784   	; 0xee <initQueue>
	reflectiveList = initQueue();
 7e6:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <entryList+0x1>
 7ea:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <entryList>
 7ee:	7f dc       	rcall	.-1794   	; 0xee <initQueue>
	classifiedList = initQueue();
 7f0:	90 93 3a 01 	sts	0x013A, r25	; 0x80013a <reflectiveList+0x1>
 7f4:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <reflectiveList>
 7f8:	7a dc       	rcall	.-1804   	; 0xee <initQueue>
 7fa:	90 93 5e 01 	sts	0x015E, r25	; 0x80015e <classifiedList+0x1>
	sortedList = initQueue();
 7fe:	80 93 5d 01 	sts	0x015D, r24	; 0x80015d <classifiedList>
 802:	75 dc       	rcall	.-1814   	; 0xee <initQueue>
 804:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <sortedList+0x1>

	STATE = OPERATIONAL;
 808:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <sortedList>
 80c:	82 e0       	ldi	r24, 0x02	; 2
	item_waiting = 0;
 80e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
	item_number = 0;
 812:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <item_waiting>
			if (operational_entered) {
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 816:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_number>
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 81a:	c1 e7       	ldi	r28, 0x71	; 113
 81c:	d0 e0       	ldi	r29, 0x00	; 0
		// When we trigger ramp down button stay in OPERATIONAL for time of half conveyor
		if (ramp_down_entered) {
			ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
				STATE = OPERATIONAL;
 81e:	01 e0       	ldi	r16, 0x01	; 1
 820:	10 e0       	ldi	r17, 0x00	; 0
 822:	68 94       	set
 824:	dd 24       	eor	r13, r13
		if (STATE == OPERATIONAL || RAMP_DOWN) {
			
			// Entered OPERATIONAL from PAUSED
			if (operational_entered) {
				// start motor
				PORTB =  CW;
 826:	d1 f8       	bld	r13, 1
 828:	ed 2c       	mov	r14, r13
 82a:	68 94       	set
	{
		// testing
		//PORTC = STATE;
		
		// When we trigger ramp down button stay in OPERATIONAL for time of half conveyor
		if (ramp_down_entered) {
 82c:	ff 24       	eor	r15, r15
 82e:	f2 f8       	bld	r15, 2
 830:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <ramp_down_entered>
			ramp_down_entered = 0;
 834:	88 23       	and	r24, r24
			
			if (STATE == PAUSED) {
 836:	69 f0       	breq	.+26     	; 0x852 <main+0x92>
 838:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <ramp_down_entered>
				STATE = OPERATIONAL;
 83c:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
			}
			
			start_timer3(timer3_1sec);		// Good for MOTOR_SPEED = 0x30
 840:	83 30       	cpi	r24, 0x03	; 3
 842:	11 f4       	brne	.+4      	; 0x848 <main+0x88>
 844:	e0 92 08 01 	sts	0x0108, r14	; 0x800108 <STATE>
 848:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
		}
		
		if (STATE == OPERATIONAL || RAMP_DOWN) {
 84c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
			
			// Entered OPERATIONAL from PAUSED
			if (operational_entered) {
 850:	a8 dd       	rcall	.-1200   	; 0x3a2 <start_timer3>
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 852:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
			}	
			
			// Handle flags from sensors
			if(OS1_flag) 
 856:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <operational_entered>
				entry_sensor();
 85a:	88 23       	and	r24, r24
			if(FER_flag) 
 85c:	21 f0       	breq	.+8      	; 0x866 <main+0xa6>
 85e:	f5 b8       	out	0x05, r15	; 5
				metal_sensor();
 860:	88 81       	ld	r24, Y
			if(OS2_flag) 
 862:	8d 7f       	andi	r24, 0xFD	; 253
 864:	88 83       	st	Y, r24
 866:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <OS1_flag>
				reflective_sensor();
 86a:	81 11       	cpse	r24, r1
			if(item_ready) 
 86c:	af de       	rcall	.-674    	; 0x5cc <entry_sensor>
 86e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <FER_flag>
				classify_item();
 872:	81 11       	cpse	r24, r1
 874:	c0 de       	rcall	.-640    	; 0x5f6 <metal_sensor>
			if(OS3_flag) 
 876:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <OS2_flag>
 87a:	81 11       	cpse	r24, r1
				exit_sensor();
 87c:	c8 de       	rcall	.-624    	; 0x60e <reflective_sensor>
			
		}
		
		if (STATE == PAUSED) {
 87e:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <item_ready>
 882:	81 11       	cpse	r24, r1
 884:	f2 de       	rcall	.-540    	; 0x66a <classify_item>
			
			// Check if just entering PAUSED
			if (pause_entered) {
 886:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <OS3_flag>
 88a:	81 11       	cpse	r24, r1
 88c:	7f df       	rcall	.-258    	; 0x78c <exit_sensor>
				pause_entered = 0;
 88e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				
				// turn off motor
				PORTB =  0;
 892:	83 30       	cpi	r24, 0x03	; 3
				
				// start timer for 1 sec
				start_timer3(timer3_1sec);
 894:	99 f5       	brne	.+102    	; 0x8fc <main+0x13c>
 896:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <pause_entered>
 89a:	88 23       	and	r24, r24
 89c:	41 f0       	breq	.+16     	; 0x8ae <main+0xee>
 89e:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <pause_entered>
			}
			
			// Update display
			if (timer3_flag) {
 8a2:	15 b8       	out	0x05, r1	; 5
 8a4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
				timer3_flag = 0;
 8a8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 8ac:	7a dd       	rcall	.-1292   	; 0x3a2 <start_timer3>
 8ae:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
 8b2:	88 23       	and	r24, r24
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 8b4:	19 f1       	breq	.+70     	; 0x8fc <main+0x13c>
 8b6:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
 8ba:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <display_index>
 8be:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
			// Update display
			if (timer3_flag) {
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 8c2:	98 01       	movw	r18, r16
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <main+0x10a>
 8c6:	22 0f       	add	r18, r18
 8c8:	33 1f       	adc	r19, r19
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 8ca:	8a 95       	dec	r24
 8cc:	e2 f7       	brpl	.-8      	; 0x8c6 <main+0x106>
 8ce:	f0 e0       	ldi	r31, 0x00	; 0
 8d0:	ee 0f       	add	r30, r30
 8d2:	ff 1f       	adc	r31, r31
 8d4:	e3 5e       	subi	r30, 0xE3	; 227
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
				
				if (display_index == 3) {
 8d6:	fe 4f       	sbci	r31, 0xFE	; 254
 8d8:	80 81       	ld	r24, Z
 8da:	90 e1       	ldi	r25, 0x10	; 16
 8dc:	29 9f       	mul	r18, r25
					display_index = 0;
 8de:	80 0d       	add	r24, r0
 8e0:	11 24       	eor	r1, r1
 8e2:	88 b9       	out	0x08, r24	; 8
				} else {
					display_index++;
 8e4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
 8e8:	83 30       	cpi	r24, 0x03	; 3
 8ea:	19 f4       	brne	.+6      	; 0x8f2 <main+0x132>
 8ec:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
				}
			}			
		} 
		
		if (STATE == RAMP_DOWN) {
 8f0:	05 c0       	rjmp	.+10     	; 0x8fc <main+0x13c>
 8f2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
			
			if (timer3_flag) {	
 8f6:	8f 5f       	subi	r24, 0xFF	; 255
 8f8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <display_index>
				timer3_flag = 0;
 8fc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				
				// Disable timer
				TIMSK3 &= 0xFD;
 900:	84 30       	cpi	r24, 0x04	; 4
 902:	09 f0       	breq	.+2      	; 0x906 <main+0x146>
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 904:	95 cf       	rjmp	.-214    	; 0x830 <main+0x70>
 906:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
 90a:	88 23       	and	r24, r24
 90c:	29 f0       	breq	.+10     	; 0x918 <main+0x158>
 90e:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
 912:	88 81       	ld	r24, Y
				isEmpty(reflectiveList) &&
 914:	8d 7f       	andi	r24, 0xFD	; 253
 916:	88 83       	st	Y, r24
 918:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <entryList>
 91c:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <entryList+0x1>
				// Disable timer
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 920:	29 dc       	rcall	.-1966   	; 0x174 <isEmpty>
 922:	89 2b       	or	r24, r25
				isEmpty(reflectiveList) &&
				isEmpty(classifiedList) &&
 924:	09 f4       	brne	.+2      	; 0x928 <main+0x168>
 926:	84 cf       	rjmp	.-248    	; 0x830 <main+0x70>
 928:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <reflectiveList>
 92c:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <reflectiveList+0x1>
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
				isEmpty(reflectiveList) &&
 930:	21 dc       	rcall	.-1982   	; 0x174 <isEmpty>
 932:	89 2b       	or	r24, r25
				isEmpty(classifiedList) &&
				isEmpty(sortedList)) {
 934:	09 f4       	brne	.+2      	; 0x938 <main+0x178>
 936:	7c cf       	rjmp	.-264    	; 0x830 <main+0x70>
 938:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <classifiedList>
 93c:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <classifiedList+0x1>
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
				isEmpty(reflectiveList) &&
				isEmpty(classifiedList) &&
 940:	19 dc       	rcall	.-1998   	; 0x174 <isEmpty>
				
				// Turn off motor
				PORTB = 0;
				
				// Disable ADC
				ADCSRA &= ~_BV(ADEN);
 942:	89 2b       	or	r24, r25
 944:	09 f4       	brne	.+2      	; 0x948 <main+0x188>
 946:	74 cf       	rjmp	.-280    	; 0x830 <main+0x70>
 948:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <sortedList>
				
				// Disable interrupts
				cli();
				
				// Release resources
				clearQueue(entryList);
 94c:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <sortedList+0x1>
 950:	11 dc       	rcall	.-2014   	; 0x174 <isEmpty>
 952:	89 2b       	or	r24, r25
 954:	09 f4       	brne	.+2      	; 0x958 <main+0x198>
 956:	69 cf       	rjmp	.-302    	; 0x82a <main+0x6a>
				clearQueue(reflectiveList);
 958:	15 b8       	out	0x05, r1	; 5
 95a:	ea e7       	ldi	r30, 0x7A	; 122
 95c:	f0 e0       	ldi	r31, 0x00	; 0
 95e:	80 81       	ld	r24, Z
 960:	8f 77       	andi	r24, 0x7F	; 127
 962:	80 83       	st	Z, r24
				clearQueue(classifiedList);
 964:	f8 94       	cli
 966:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <entryList>
 96a:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <entryList+0x1>
 96e:	ec db       	rcall	.-2088   	; 0x148 <clearQueue>
				clearQueue(sortedList);
 970:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <reflectiveList>
 974:	90 91 3a 01 	lds	r25, 0x013A	; 0x80013a <reflectiveList+0x1>
 978:	e7 db       	rcall	.-2098   	; 0x148 <clearQueue>
 97a:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <classifiedList>
 97e:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <classifiedList+0x1>
 982:	e2 db       	rcall	.-2108   	; 0x148 <clearQueue>
 984:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <sortedList>
 988:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <sortedList+0x1>
 98c:	dd db       	rcall	.-2118   	; 0x148 <clearQueue>
 98e:	4c cf       	rjmp	.-360    	; 0x828 <main+0x68>

00000990 <malloc>:
 990:	0f 93       	push	r16
 992:	1f 93       	push	r17
 994:	cf 93       	push	r28
 996:	df 93       	push	r29
 998:	82 30       	cpi	r24, 0x02	; 2
 99a:	91 05       	cpc	r25, r1
 99c:	10 f4       	brcc	.+4      	; 0x9a2 <malloc+0x12>
 99e:	82 e0       	ldi	r24, 0x02	; 2
 9a0:	90 e0       	ldi	r25, 0x00	; 0
 9a2:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <__flp>
 9a6:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <__flp+0x1>
 9aa:	20 e0       	ldi	r18, 0x00	; 0
 9ac:	30 e0       	ldi	r19, 0x00	; 0
 9ae:	a0 e0       	ldi	r26, 0x00	; 0
 9b0:	b0 e0       	ldi	r27, 0x00	; 0
 9b2:	30 97       	sbiw	r30, 0x00	; 0
 9b4:	19 f1       	breq	.+70     	; 0x9fc <malloc+0x6c>
 9b6:	40 81       	ld	r20, Z
 9b8:	51 81       	ldd	r21, Z+1	; 0x01
 9ba:	02 81       	ldd	r16, Z+2	; 0x02
 9bc:	13 81       	ldd	r17, Z+3	; 0x03
 9be:	48 17       	cp	r20, r24
 9c0:	59 07       	cpc	r21, r25
 9c2:	c8 f0       	brcs	.+50     	; 0x9f6 <malloc+0x66>
 9c4:	84 17       	cp	r24, r20
 9c6:	95 07       	cpc	r25, r21
 9c8:	69 f4       	brne	.+26     	; 0x9e4 <malloc+0x54>
 9ca:	10 97       	sbiw	r26, 0x00	; 0
 9cc:	31 f0       	breq	.+12     	; 0x9da <malloc+0x4a>
 9ce:	12 96       	adiw	r26, 0x02	; 2
 9d0:	0c 93       	st	X, r16
 9d2:	12 97       	sbiw	r26, 0x02	; 2
 9d4:	13 96       	adiw	r26, 0x03	; 3
 9d6:	1c 93       	st	X, r17
 9d8:	27 c0       	rjmp	.+78     	; 0xa28 <malloc+0x98>
 9da:	00 93 65 01 	sts	0x0165, r16	; 0x800165 <__flp>
 9de:	10 93 66 01 	sts	0x0166, r17	; 0x800166 <__flp+0x1>
 9e2:	22 c0       	rjmp	.+68     	; 0xa28 <malloc+0x98>
 9e4:	21 15       	cp	r18, r1
 9e6:	31 05       	cpc	r19, r1
 9e8:	19 f0       	breq	.+6      	; 0x9f0 <malloc+0x60>
 9ea:	42 17       	cp	r20, r18
 9ec:	53 07       	cpc	r21, r19
 9ee:	18 f4       	brcc	.+6      	; 0x9f6 <malloc+0x66>
 9f0:	9a 01       	movw	r18, r20
 9f2:	bd 01       	movw	r22, r26
 9f4:	ef 01       	movw	r28, r30
 9f6:	df 01       	movw	r26, r30
 9f8:	f8 01       	movw	r30, r16
 9fa:	db cf       	rjmp	.-74     	; 0x9b2 <malloc+0x22>
 9fc:	21 15       	cp	r18, r1
 9fe:	31 05       	cpc	r19, r1
 a00:	f9 f0       	breq	.+62     	; 0xa40 <malloc+0xb0>
 a02:	28 1b       	sub	r18, r24
 a04:	39 0b       	sbc	r19, r25
 a06:	24 30       	cpi	r18, 0x04	; 4
 a08:	31 05       	cpc	r19, r1
 a0a:	80 f4       	brcc	.+32     	; 0xa2c <malloc+0x9c>
 a0c:	8a 81       	ldd	r24, Y+2	; 0x02
 a0e:	9b 81       	ldd	r25, Y+3	; 0x03
 a10:	61 15       	cp	r22, r1
 a12:	71 05       	cpc	r23, r1
 a14:	21 f0       	breq	.+8      	; 0xa1e <malloc+0x8e>
 a16:	fb 01       	movw	r30, r22
 a18:	93 83       	std	Z+3, r25	; 0x03
 a1a:	82 83       	std	Z+2, r24	; 0x02
 a1c:	04 c0       	rjmp	.+8      	; 0xa26 <malloc+0x96>
 a1e:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <__flp+0x1>
 a22:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <__flp>
 a26:	fe 01       	movw	r30, r28
 a28:	32 96       	adiw	r30, 0x02	; 2
 a2a:	44 c0       	rjmp	.+136    	; 0xab4 <malloc+0x124>
 a2c:	fe 01       	movw	r30, r28
 a2e:	e2 0f       	add	r30, r18
 a30:	f3 1f       	adc	r31, r19
 a32:	81 93       	st	Z+, r24
 a34:	91 93       	st	Z+, r25
 a36:	22 50       	subi	r18, 0x02	; 2
 a38:	31 09       	sbc	r19, r1
 a3a:	39 83       	std	Y+1, r19	; 0x01
 a3c:	28 83       	st	Y, r18
 a3e:	3a c0       	rjmp	.+116    	; 0xab4 <malloc+0x124>
 a40:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 a44:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 a48:	23 2b       	or	r18, r19
 a4a:	41 f4       	brne	.+16     	; 0xa5c <malloc+0xcc>
 a4c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 a50:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 a54:	30 93 64 01 	sts	0x0164, r19	; 0x800164 <__brkval+0x1>
 a58:	20 93 63 01 	sts	0x0163, r18	; 0x800163 <__brkval>
 a5c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 a60:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 a64:	21 15       	cp	r18, r1
 a66:	31 05       	cpc	r19, r1
 a68:	41 f4       	brne	.+16     	; 0xa7a <malloc+0xea>
 a6a:	2d b7       	in	r18, 0x3d	; 61
 a6c:	3e b7       	in	r19, 0x3e	; 62
 a6e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 a72:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 a76:	24 1b       	sub	r18, r20
 a78:	35 0b       	sbc	r19, r21
 a7a:	e0 91 63 01 	lds	r30, 0x0163	; 0x800163 <__brkval>
 a7e:	f0 91 64 01 	lds	r31, 0x0164	; 0x800164 <__brkval+0x1>
 a82:	e2 17       	cp	r30, r18
 a84:	f3 07       	cpc	r31, r19
 a86:	a0 f4       	brcc	.+40     	; 0xab0 <malloc+0x120>
 a88:	2e 1b       	sub	r18, r30
 a8a:	3f 0b       	sbc	r19, r31
 a8c:	28 17       	cp	r18, r24
 a8e:	39 07       	cpc	r19, r25
 a90:	78 f0       	brcs	.+30     	; 0xab0 <malloc+0x120>
 a92:	ac 01       	movw	r20, r24
 a94:	4e 5f       	subi	r20, 0xFE	; 254
 a96:	5f 4f       	sbci	r21, 0xFF	; 255
 a98:	24 17       	cp	r18, r20
 a9a:	35 07       	cpc	r19, r21
 a9c:	48 f0       	brcs	.+18     	; 0xab0 <malloc+0x120>
 a9e:	4e 0f       	add	r20, r30
 aa0:	5f 1f       	adc	r21, r31
 aa2:	50 93 64 01 	sts	0x0164, r21	; 0x800164 <__brkval+0x1>
 aa6:	40 93 63 01 	sts	0x0163, r20	; 0x800163 <__brkval>
 aaa:	81 93       	st	Z+, r24
 aac:	91 93       	st	Z+, r25
 aae:	02 c0       	rjmp	.+4      	; 0xab4 <malloc+0x124>
 ab0:	e0 e0       	ldi	r30, 0x00	; 0
 ab2:	f0 e0       	ldi	r31, 0x00	; 0
 ab4:	cf 01       	movw	r24, r30
 ab6:	df 91       	pop	r29
 ab8:	cf 91       	pop	r28
 aba:	1f 91       	pop	r17
 abc:	0f 91       	pop	r16
 abe:	08 95       	ret

00000ac0 <free>:
 ac0:	cf 93       	push	r28
 ac2:	df 93       	push	r29
 ac4:	00 97       	sbiw	r24, 0x00	; 0
 ac6:	09 f4       	brne	.+2      	; 0xaca <free+0xa>
 ac8:	81 c0       	rjmp	.+258    	; 0xbcc <free+0x10c>
 aca:	fc 01       	movw	r30, r24
 acc:	32 97       	sbiw	r30, 0x02	; 2
 ace:	13 82       	std	Z+3, r1	; 0x03
 ad0:	12 82       	std	Z+2, r1	; 0x02
 ad2:	a0 91 65 01 	lds	r26, 0x0165	; 0x800165 <__flp>
 ad6:	b0 91 66 01 	lds	r27, 0x0166	; 0x800166 <__flp+0x1>
 ada:	10 97       	sbiw	r26, 0x00	; 0
 adc:	81 f4       	brne	.+32     	; 0xafe <free+0x3e>
 ade:	20 81       	ld	r18, Z
 ae0:	31 81       	ldd	r19, Z+1	; 0x01
 ae2:	82 0f       	add	r24, r18
 ae4:	93 1f       	adc	r25, r19
 ae6:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 aea:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 aee:	28 17       	cp	r18, r24
 af0:	39 07       	cpc	r19, r25
 af2:	51 f5       	brne	.+84     	; 0xb48 <free+0x88>
 af4:	f0 93 64 01 	sts	0x0164, r31	; 0x800164 <__brkval+0x1>
 af8:	e0 93 63 01 	sts	0x0163, r30	; 0x800163 <__brkval>
 afc:	67 c0       	rjmp	.+206    	; 0xbcc <free+0x10c>
 afe:	ed 01       	movw	r28, r26
 b00:	20 e0       	ldi	r18, 0x00	; 0
 b02:	30 e0       	ldi	r19, 0x00	; 0
 b04:	ce 17       	cp	r28, r30
 b06:	df 07       	cpc	r29, r31
 b08:	40 f4       	brcc	.+16     	; 0xb1a <free+0x5a>
 b0a:	4a 81       	ldd	r20, Y+2	; 0x02
 b0c:	5b 81       	ldd	r21, Y+3	; 0x03
 b0e:	9e 01       	movw	r18, r28
 b10:	41 15       	cp	r20, r1
 b12:	51 05       	cpc	r21, r1
 b14:	f1 f0       	breq	.+60     	; 0xb52 <free+0x92>
 b16:	ea 01       	movw	r28, r20
 b18:	f5 cf       	rjmp	.-22     	; 0xb04 <free+0x44>
 b1a:	d3 83       	std	Z+3, r29	; 0x03
 b1c:	c2 83       	std	Z+2, r28	; 0x02
 b1e:	40 81       	ld	r20, Z
 b20:	51 81       	ldd	r21, Z+1	; 0x01
 b22:	84 0f       	add	r24, r20
 b24:	95 1f       	adc	r25, r21
 b26:	c8 17       	cp	r28, r24
 b28:	d9 07       	cpc	r29, r25
 b2a:	59 f4       	brne	.+22     	; 0xb42 <free+0x82>
 b2c:	88 81       	ld	r24, Y
 b2e:	99 81       	ldd	r25, Y+1	; 0x01
 b30:	84 0f       	add	r24, r20
 b32:	95 1f       	adc	r25, r21
 b34:	02 96       	adiw	r24, 0x02	; 2
 b36:	91 83       	std	Z+1, r25	; 0x01
 b38:	80 83       	st	Z, r24
 b3a:	8a 81       	ldd	r24, Y+2	; 0x02
 b3c:	9b 81       	ldd	r25, Y+3	; 0x03
 b3e:	93 83       	std	Z+3, r25	; 0x03
 b40:	82 83       	std	Z+2, r24	; 0x02
 b42:	21 15       	cp	r18, r1
 b44:	31 05       	cpc	r19, r1
 b46:	29 f4       	brne	.+10     	; 0xb52 <free+0x92>
 b48:	f0 93 66 01 	sts	0x0166, r31	; 0x800166 <__flp+0x1>
 b4c:	e0 93 65 01 	sts	0x0165, r30	; 0x800165 <__flp>
 b50:	3d c0       	rjmp	.+122    	; 0xbcc <free+0x10c>
 b52:	e9 01       	movw	r28, r18
 b54:	fb 83       	std	Y+3, r31	; 0x03
 b56:	ea 83       	std	Y+2, r30	; 0x02
 b58:	49 91       	ld	r20, Y+
 b5a:	59 91       	ld	r21, Y+
 b5c:	c4 0f       	add	r28, r20
 b5e:	d5 1f       	adc	r29, r21
 b60:	ec 17       	cp	r30, r28
 b62:	fd 07       	cpc	r31, r29
 b64:	61 f4       	brne	.+24     	; 0xb7e <free+0xbe>
 b66:	80 81       	ld	r24, Z
 b68:	91 81       	ldd	r25, Z+1	; 0x01
 b6a:	84 0f       	add	r24, r20
 b6c:	95 1f       	adc	r25, r21
 b6e:	02 96       	adiw	r24, 0x02	; 2
 b70:	e9 01       	movw	r28, r18
 b72:	99 83       	std	Y+1, r25	; 0x01
 b74:	88 83       	st	Y, r24
 b76:	82 81       	ldd	r24, Z+2	; 0x02
 b78:	93 81       	ldd	r25, Z+3	; 0x03
 b7a:	9b 83       	std	Y+3, r25	; 0x03
 b7c:	8a 83       	std	Y+2, r24	; 0x02
 b7e:	e0 e0       	ldi	r30, 0x00	; 0
 b80:	f0 e0       	ldi	r31, 0x00	; 0
 b82:	12 96       	adiw	r26, 0x02	; 2
 b84:	8d 91       	ld	r24, X+
 b86:	9c 91       	ld	r25, X
 b88:	13 97       	sbiw	r26, 0x03	; 3
 b8a:	00 97       	sbiw	r24, 0x00	; 0
 b8c:	19 f0       	breq	.+6      	; 0xb94 <free+0xd4>
 b8e:	fd 01       	movw	r30, r26
 b90:	dc 01       	movw	r26, r24
 b92:	f7 cf       	rjmp	.-18     	; 0xb82 <free+0xc2>
 b94:	8d 91       	ld	r24, X+
 b96:	9c 91       	ld	r25, X
 b98:	11 97       	sbiw	r26, 0x01	; 1
 b9a:	9d 01       	movw	r18, r26
 b9c:	2e 5f       	subi	r18, 0xFE	; 254
 b9e:	3f 4f       	sbci	r19, 0xFF	; 255
 ba0:	82 0f       	add	r24, r18
 ba2:	93 1f       	adc	r25, r19
 ba4:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 ba8:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 bac:	28 17       	cp	r18, r24
 bae:	39 07       	cpc	r19, r25
 bb0:	69 f4       	brne	.+26     	; 0xbcc <free+0x10c>
 bb2:	30 97       	sbiw	r30, 0x00	; 0
 bb4:	29 f4       	brne	.+10     	; 0xbc0 <free+0x100>
 bb6:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__flp+0x1>
 bba:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <__flp>
 bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <free+0x104>
 bc0:	13 82       	std	Z+3, r1	; 0x03
 bc2:	12 82       	std	Z+2, r1	; 0x02
 bc4:	b0 93 64 01 	sts	0x0164, r27	; 0x800164 <__brkval+0x1>
 bc8:	a0 93 63 01 	sts	0x0163, r26	; 0x800163 <__brkval>
 bcc:	df 91       	pop	r29
 bce:	cf 91       	pop	r28
 bd0:	08 95       	ret

00000bd2 <_exit>:
 bd2:	f8 94       	cli

00000bd4 <__stop_program>:
 bd4:	ff cf       	rjmp	.-2      	; 0xbd4 <__stop_program>
