
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000c3e  00000cd2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c3e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  00800116  00800116  00000ce8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d78  00000000  00000000  00000ee8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f00  00000000  00000000  00002c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ed5  00000000  00000000  00003b60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004b4  00000000  00000000  00004a38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a9e  00000000  00000000  00004eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dba  00000000  00000000  0000598a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00006744  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	e1 c0       	rjmp	.+450    	; 0x1c8 <__vector_1>
   6:	00 00       	nop
   8:	ee c0       	rjmp	.+476    	; 0x1e6 <__vector_2>
   a:	00 00       	nop
   c:	38 c3       	rjmp	.+1648   	; 0x67e <__vector_3>
   e:	00 00       	nop
  10:	f9 c0       	rjmp	.+498    	; 0x204 <__vector_4>
  12:	00 00       	nop
  14:	06 c1       	rjmp	.+524    	; 0x222 <__vector_5>
  16:	00 00       	nop
  18:	26 c1       	rjmp	.+588    	; 0x266 <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	99 c0       	rjmp	.+306    	; 0x188 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	0a c1       	rjmp	.+532    	; 0x28a <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8d c0       	rjmp	.+282    	; 0x19c <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	ee e3       	ldi	r30, 0x3E	; 62
  ac:	fc e0       	ldi	r31, 0x0C	; 12
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a6 31       	cpi	r26, 0x16	; 22
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a6 e1       	ldi	r26, 0x16	; 22
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a2 36       	cpi	r26, 0x62	; 98
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	bd d3       	rcall	.+1914   	; 0x84a <main>
  d0:	b4 c5       	rjmp	.+2920   	; 0xc3a <_exit>

000000d2 <__bad_interrupt>:
  d2:	1e c1       	rjmp	.+572    	; 0x310 <__vector_default>

000000d4 <initItem>:
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	8f d4       	rcall	.+2334   	; 0x9f8 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	82 d4       	rcall	.+2308   	; 0x9f8 <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <clearQueue>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	99 81       	ldd	r25, Y+1	; 0x01
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	51 f0       	breq	.+20     	; 0x16a <clearQueue+0x22>
 156:	fc 01       	movw	r30, r24
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	37 81       	ldd	r19, Z+7	; 0x07
 15c:	39 83       	std	Y+1, r19	; 0x01
 15e:	28 83       	st	Y, r18
 160:	e3 d4       	rcall	.+2502   	; 0xb28 <free>
 162:	88 81       	ld	r24, Y
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	b1 f7       	brne	.-20     	; 0x156 <clearQueue+0xe>
 16a:	1b 82       	std	Y+3, r1	; 0x03
 16c:	1a 82       	std	Y+2, r1	; 0x02
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <isEmpty>:
 174:	fc 01       	movw	r30, r24
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	23 2b       	or	r18, r19
 180:	11 f0       	breq	.+4      	; 0x186 <isEmpty+0x12>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	08 95       	ret

00000188 <__vector_21>:
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	0f 90       	pop	r0
 194:	0f be       	out	0x3f, r0	; 63
 196:	0f 90       	pop	r0
 198:	1f 90       	pop	r1
 19a:	18 95       	reti

0000019c <__vector_32>:
 19c:	1f 92       	push	r1
 19e:	0f 92       	push	r0
 1a0:	0f b6       	in	r0, 0x3f	; 63
 1a2:	0f 92       	push	r0
 1a4:	11 24       	eor	r1, r1
 1a6:	8f 93       	push	r24
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <timer3_flag>
 1ae:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <processing_for_ramp_down>
 1b2:	88 23       	and	r24, r24
 1b4:	19 f0       	breq	.+6      	; 0x1bc <__vector_32+0x20>
 1b6:	84 e0       	ldi	r24, 0x04	; 4
 1b8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <STATE>
 1bc:	8f 91       	pop	r24
 1be:	0f 90       	pop	r0
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	0f 90       	pop	r0
 1c4:	1f 90       	pop	r1
 1c6:	18 95       	reti

000001c8 <__vector_1>:
 1c8:	1f 92       	push	r1
 1ca:	0f 92       	push	r0
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	0f 92       	push	r0
 1d0:	11 24       	eor	r1, r1
 1d2:	8f 93       	push	r24
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <OS1_flag>
 1da:	8f 91       	pop	r24
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <__vector_2>:
 1e6:	1f 92       	push	r1
 1e8:	0f 92       	push	r0
 1ea:	0f b6       	in	r0, 0x3f	; 63
 1ec:	0f 92       	push	r0
 1ee:	11 24       	eor	r1, r1
 1f0:	8f 93       	push	r24
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <FER_flag>
 1f8:	8f 91       	pop	r24
 1fa:	0f 90       	pop	r0
 1fc:	0f be       	out	0x3f, r0	; 63
 1fe:	0f 90       	pop	r0
 200:	1f 90       	pop	r1
 202:	18 95       	reti

00000204 <__vector_4>:
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	8f 93       	push	r24
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <OS3_flag>
 216:	8f 91       	pop	r24
 218:	0f 90       	pop	r0
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	0f 90       	pop	r0
 21e:	1f 90       	pop	r1
 220:	18 95       	reti

00000222 <__vector_5>:
 222:	1f 92       	push	r1
 224:	0f 92       	push	r0
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	0f 92       	push	r0
 22a:	11 24       	eor	r1, r1
 22c:	8f 93       	push	r24
 22e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
 232:	82 30       	cpi	r24, 0x02	; 2
 234:	49 f4       	brne	.+18     	; 0x248 <__vector_5+0x26>
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <STATE_TRANSITION>
 23c:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <display_index>
 240:	83 e0       	ldi	r24, 0x03	; 3
 242:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <STATE>
 246:	09 c0       	rjmp	.+18     	; 0x25a <__vector_5+0x38>
 248:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
 24c:	83 30       	cpi	r24, 0x03	; 3
 24e:	29 f4       	brne	.+10     	; 0x25a <__vector_5+0x38>
 250:	82 e0       	ldi	r24, 0x02	; 2
 252:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <STATE_TRANSITION>
 256:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <STATE>
 25a:	8f 91       	pop	r24
 25c:	0f 90       	pop	r0
 25e:	0f be       	out	0x3f, r0	; 63
 260:	0f 90       	pop	r0
 262:	1f 90       	pop	r1
 264:	18 95       	reti

00000266 <__vector_6>:
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	8f 93       	push	r24
 272:	83 e0       	ldi	r24, 0x03	; 3
 274:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <STATE_TRANSITION>
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <processing_for_ramp_down>
 27e:	8f 91       	pop	r24
 280:	0f 90       	pop	r0
 282:	0f be       	out	0x3f, r0	; 63
 284:	0f 90       	pop	r0
 286:	1f 90       	pop	r1
 288:	18 95       	reti

0000028a <__vector_29>:
 28a:	1f 92       	push	r1
 28c:	0f 92       	push	r0
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	0f 92       	push	r0
 292:	11 24       	eor	r1, r1
 294:	0b b6       	in	r0, 0x3b	; 59
 296:	0f 92       	push	r0
 298:	2f 93       	push	r18
 29a:	3f 93       	push	r19
 29c:	8f 93       	push	r24
 29e:	9f 93       	push	r25
 2a0:	ef 93       	push	r30
 2a2:	ff 93       	push	r31
 2a4:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <reflective_present>
 2a8:	88 23       	and	r24, r24
 2aa:	29 f1       	breq	.+74     	; 0x2f6 <__vector_29+0x6c>
 2ac:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b0:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	98 2f       	mov	r25, r24
 2b8:	88 27       	eor	r24, r24
 2ba:	82 0f       	add	r24, r18
 2bc:	91 1d       	adc	r25, r1
 2be:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <ADC_result+0x1>
 2c2:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <ADC_result>
 2c6:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <ADC_result>
 2ca:	30 91 2e 01 	lds	r19, 0x012E	; 0x80012e <ADC_result+0x1>
 2ce:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <ADC_lowest_val>
 2d2:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <ADC_lowest_val+0x1>
 2d6:	28 17       	cp	r18, r24
 2d8:	39 07       	cpc	r19, r25
 2da:	40 f4       	brcc	.+16     	; 0x2ec <__vector_29+0x62>
 2dc:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <ADC_result>
 2e0:	90 91 2e 01 	lds	r25, 0x012E	; 0x80012e <ADC_result+0x1>
 2e4:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <ADC_lowest_val+0x1>
 2e8:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <ADC_lowest_val>
 2ec:	ea e7       	ldi	r30, 0x7A	; 122
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	80 64       	ori	r24, 0x40	; 64
 2f4:	80 83       	st	Z, r24
 2f6:	ff 91       	pop	r31
 2f8:	ef 91       	pop	r30
 2fa:	9f 91       	pop	r25
 2fc:	8f 91       	pop	r24
 2fe:	3f 91       	pop	r19
 300:	2f 91       	pop	r18
 302:	0f 90       	pop	r0
 304:	0b be       	out	0x3b, r0	; 59
 306:	0f 90       	pop	r0
 308:	0f be       	out	0x3f, r0	; 63
 30a:	0f 90       	pop	r0
 30c:	1f 90       	pop	r1
 30e:	18 95       	reti

00000310 <__vector_default>:
 310:	1f 92       	push	r1
 312:	0f 92       	push	r0
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	0f 92       	push	r0
 318:	11 24       	eor	r1, r1
 31a:	0f 90       	pop	r0
 31c:	0f be       	out	0x3f, r0	; 63
 31e:	0f 90       	pop	r0
 320:	1f 90       	pop	r1
 322:	18 95       	reti

00000324 <init_interrupts>:
 324:	8a e9       	ldi	r24, 0x9A	; 154
 326:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 32a:	8a e0       	ldi	r24, 0x0A	; 10
 32c:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 330:	8d b3       	in	r24, 0x1d	; 29
 332:	8f 63       	ori	r24, 0x3F	; 63
 334:	8d bb       	out	0x1d, r24	; 29
 336:	08 95       	ret

00000338 <init_timer0_pwm>:
 338:	84 b5       	in	r24, 0x24	; 36
 33a:	83 68       	ori	r24, 0x83	; 131
 33c:	84 bd       	out	0x24, r24	; 36
 33e:	85 b5       	in	r24, 0x25	; 37
 340:	82 60       	ori	r24, 0x02	; 2
 342:	85 bd       	out	0x25, r24	; 37
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	87 bd       	out	0x27, r24	; 39
 348:	08 95       	ret

0000034a <init_timer3>:
 34a:	e1 e9       	ldi	r30, 0x91	; 145
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	8b 60       	ori	r24, 0x0B	; 11
 352:	80 83       	st	Z, r24
 354:	e1 e7       	ldi	r30, 0x71	; 113
 356:	f0 e0       	ldi	r31, 0x00	; 0
 358:	80 81       	ld	r24, Z
 35a:	82 60       	ori	r24, 0x02	; 2
 35c:	80 83       	st	Z, r24
 35e:	c1 9a       	sbi	0x18, 1	; 24
 360:	80 81       	ld	r24, Z
 362:	8d 7f       	andi	r24, 0xFD	; 253
 364:	80 83       	st	Z, r24
 366:	08 95       	ret

00000368 <start_timer3>:
 368:	9c 01       	movw	r18, r24
 36a:	e1 e7       	ldi	r30, 0x71	; 113
 36c:	f0 e0       	ldi	r31, 0x00	; 0
 36e:	90 81       	ld	r25, Z
 370:	92 60       	ori	r25, 0x02	; 2
 372:	90 83       	st	Z, r25
 374:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 378:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 37c:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 380:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 384:	08 95       	ret

00000386 <init_motor>:
 386:	84 e0       	ldi	r24, 0x04	; 4
 388:	85 b9       	out	0x05, r24	; 5
 38a:	80 e6       	ldi	r24, 0x60	; 96
 38c:	87 bd       	out	0x27, r24	; 39
 38e:	08 95       	ret

00000390 <init_ADC>:
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	93 e0       	ldi	r25, 0x03	; 3
 394:	90 93 2e 01 	sts	0x012E, r25	; 0x80012e <ADC_result+0x1>
 398:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <ADC_result>
 39c:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <ADC_lowest_val+0x1>
 3a0:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <ADC_lowest_val>
 3a4:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <reflective_present>
 3a8:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <item_ready>
 3ac:	ec e7       	ldi	r30, 0x7C	; 124
 3ae:	f0 e0       	ldi	r31, 0x00	; 0
 3b0:	80 81       	ld	r24, Z
 3b2:	80 64       	ori	r24, 0x40	; 64
 3b4:	80 83       	st	Z, r24
 3b6:	ea e7       	ldi	r30, 0x7A	; 122
 3b8:	f0 e0       	ldi	r31, 0x00	; 0
 3ba:	80 81       	ld	r24, Z
 3bc:	82 60       	ori	r24, 0x02	; 2
 3be:	80 83       	st	Z, r24
 3c0:	80 81       	ld	r24, Z
 3c2:	81 60       	ori	r24, 0x01	; 1
 3c4:	80 83       	st	Z, r24
 3c6:	80 81       	ld	r24, Z
 3c8:	88 60       	ori	r24, 0x08	; 8
 3ca:	80 83       	st	Z, r24
 3cc:	80 81       	ld	r24, Z
 3ce:	80 68       	ori	r24, 0x80	; 128
 3d0:	80 83       	st	Z, r24
 3d2:	08 95       	ret

000003d4 <init_stepper>:
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	81 b9       	out	0x01, r24	; 1
 3d8:	85 e3       	ldi	r24, 0x35	; 53
 3da:	82 b9       	out	0x02, r24	; 2
 3dc:	81 e0       	ldi	r24, 0x01	; 1
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <motor_position+0x1>
 3e4:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <motor_position>
 3e8:	10 92 57 01 	sts	0x0157, r1	; 0x800157 <stepper_on+0x1>
 3ec:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <stepper_on>
 3f0:	08 95       	ret

000003f2 <mTimer>:
 3f2:	ac 01       	movw	r20, r24
 3f4:	e1 e8       	ldi	r30, 0x81	; 129
 3f6:	f0 e0       	ldi	r31, 0x00	; 0
 3f8:	90 81       	ld	r25, Z
 3fa:	91 60       	ori	r25, 0x01	; 1
 3fc:	90 83       	st	Z, r25
 3fe:	90 81       	ld	r25, Z
 400:	98 60       	ori	r25, 0x08	; 8
 402:	90 83       	st	Z, r25
 404:	88 ee       	ldi	r24, 0xE8	; 232
 406:	93 e0       	ldi	r25, 0x03	; 3
 408:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 40c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 410:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 414:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 418:	b1 9a       	sbi	0x16, 1	; 22
 41a:	20 e0       	ldi	r18, 0x00	; 0
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	05 c0       	rjmp	.+10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 420:	b1 9b       	sbis	0x16, 1	; 22
 422:	fe cf       	rjmp	.-4      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 424:	b1 9a       	sbi	0x16, 1	; 22
 426:	2f 5f       	subi	r18, 0xFF	; 255
 428:	3f 4f       	sbci	r19, 0xFF	; 255
 42a:	24 17       	cp	r18, r20
 42c:	35 07       	cpc	r19, r21
 42e:	1c f4       	brge	.+6      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 430:	b1 9b       	sbis	0x16, 1	; 22
 432:	f6 cf       	rjmp	.-20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 434:	f7 cf       	rjmp	.-18     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 436:	08 95       	ret

00000438 <stepper_rotate>:
 438:	8f 92       	push	r8
 43a:	9f 92       	push	r9
 43c:	af 92       	push	r10
 43e:	bf 92       	push	r11
 440:	cf 92       	push	r12
 442:	df 92       	push	r13
 444:	ef 92       	push	r14
 446:	ff 92       	push	r15
 448:	0f 93       	push	r16
 44a:	1f 93       	push	r17
 44c:	cf 93       	push	r28
 44e:	df 93       	push	r29
 450:	18 16       	cp	r1, r24
 452:	19 06       	cpc	r1, r25
 454:	0c f0       	brlt	.+2      	; 0x458 <stepper_rotate+0x20>
 456:	80 c0       	rjmp	.+256    	; 0x558 <stepper_rotate+0x120>
 458:	7b 01       	movw	r14, r22
 45a:	8c 01       	movw	r16, r24
 45c:	c0 e0       	ldi	r28, 0x00	; 0
 45e:	d0 e0       	ldi	r29, 0x00	; 0
 460:	0f 2e       	mov	r0, r31
 462:	fe e0       	ldi	r31, 0x0E	; 14
 464:	cf 2e       	mov	r12, r31
 466:	d1 2c       	mov	r13, r1
 468:	f0 2d       	mov	r31, r0
 46a:	0f 2e       	mov	r0, r31
 46c:	f6 e3       	ldi	r31, 0x36	; 54
 46e:	8f 2e       	mov	r8, r31
 470:	f0 2d       	mov	r31, r0
 472:	0f 2e       	mov	r0, r31
 474:	fe e2       	ldi	r31, 0x2E	; 46
 476:	9f 2e       	mov	r9, r31
 478:	f0 2d       	mov	r31, r0
 47a:	0f 2e       	mov	r0, r31
 47c:	fd e2       	ldi	r31, 0x2D	; 45
 47e:	af 2e       	mov	r10, r31
 480:	f0 2d       	mov	r31, r0
 482:	0f 2e       	mov	r0, r31
 484:	f5 e3       	ldi	r31, 0x35	; 53
 486:	bf 2e       	mov	r11, r31
 488:	f0 2d       	mov	r31, r0
 48a:	84 e0       	ldi	r24, 0x04	; 4
 48c:	e8 16       	cp	r14, r24
 48e:	f1 04       	cpc	r15, r1
 490:	91 f4       	brne	.+36     	; 0x4b6 <stepper_rotate+0x7e>
 492:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 496:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 49a:	01 96       	adiw	r24, 0x01	; 1
 49c:	83 70       	andi	r24, 0x03	; 3
 49e:	90 78       	andi	r25, 0x80	; 128
 4a0:	99 23       	and	r25, r25
 4a2:	24 f4       	brge	.+8      	; 0x4ac <stepper_rotate+0x74>
 4a4:	01 97       	sbiw	r24, 0x01	; 1
 4a6:	8c 6f       	ori	r24, 0xFC	; 252
 4a8:	9f 6f       	ori	r25, 0xFF	; 255
 4aa:	01 96       	adiw	r24, 0x01	; 1
 4ac:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 4b0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 4b4:	15 c0       	rjmp	.+42     	; 0x4e0 <stepper_rotate+0xa8>
 4b6:	88 e0       	ldi	r24, 0x08	; 8
 4b8:	e8 16       	cp	r14, r24
 4ba:	f1 04       	cpc	r15, r1
 4bc:	89 f4       	brne	.+34     	; 0x4e0 <stepper_rotate+0xa8>
 4be:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 4c2:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 4c6:	01 97       	sbiw	r24, 0x01	; 1
 4c8:	83 70       	andi	r24, 0x03	; 3
 4ca:	90 78       	andi	r25, 0x80	; 128
 4cc:	99 23       	and	r25, r25
 4ce:	24 f4       	brge	.+8      	; 0x4d8 <stepper_rotate+0xa0>
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	8c 6f       	ori	r24, 0xFC	; 252
 4d4:	9f 6f       	ori	r25, 0xFF	; 255
 4d6:	01 96       	adiw	r24, 0x01	; 1
 4d8:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 4dc:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 4e0:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <__data_end>
 4e4:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <__data_end+0x1>
 4e8:	21 30       	cpi	r18, 0x01	; 1
 4ea:	31 05       	cpc	r19, r1
 4ec:	79 f0       	breq	.+30     	; 0x50c <stepper_rotate+0xd4>
 4ee:	1c f4       	brge	.+6      	; 0x4f6 <stepper_rotate+0xbe>
 4f0:	23 2b       	or	r18, r19
 4f2:	41 f0       	breq	.+16     	; 0x504 <stepper_rotate+0xcc>
 4f4:	16 c0       	rjmp	.+44     	; 0x522 <stepper_rotate+0xea>
 4f6:	22 30       	cpi	r18, 0x02	; 2
 4f8:	31 05       	cpc	r19, r1
 4fa:	61 f0       	breq	.+24     	; 0x514 <stepper_rotate+0xdc>
 4fc:	23 30       	cpi	r18, 0x03	; 3
 4fe:	31 05       	cpc	r19, r1
 500:	69 f0       	breq	.+26     	; 0x51c <stepper_rotate+0xe4>
 502:	0f c0       	rjmp	.+30     	; 0x522 <stepper_rotate+0xea>
 504:	b2 b8       	out	0x02, r11	; 2
 506:	c6 01       	movw	r24, r12
 508:	74 df       	rcall	.-280    	; 0x3f2 <mTimer>
 50a:	0b c0       	rjmp	.+22     	; 0x522 <stepper_rotate+0xea>
 50c:	82 b8       	out	0x02, r8	; 2
 50e:	c6 01       	movw	r24, r12
 510:	70 df       	rcall	.-288    	; 0x3f2 <mTimer>
 512:	07 c0       	rjmp	.+14     	; 0x522 <stepper_rotate+0xea>
 514:	92 b8       	out	0x02, r9	; 2
 516:	c6 01       	movw	r24, r12
 518:	6c df       	rcall	.-296    	; 0x3f2 <mTimer>
 51a:	03 c0       	rjmp	.+6      	; 0x522 <stepper_rotate+0xea>
 51c:	a2 b8       	out	0x02, r10	; 2
 51e:	c6 01       	movw	r24, r12
 520:	68 df       	rcall	.-304    	; 0x3f2 <mTimer>
 522:	c8 30       	cpi	r28, 0x08	; 8
 524:	d1 05       	cpc	r29, r1
 526:	3c f4       	brge	.+14     	; 0x536 <stepper_rotate+0xfe>
 528:	86 e0       	ldi	r24, 0x06	; 6
 52a:	c8 16       	cp	r12, r24
 52c:	d1 04       	cpc	r13, r1
 52e:	1c f0       	brlt	.+6      	; 0x536 <stepper_rotate+0xfe>
 530:	81 e0       	ldi	r24, 0x01	; 1
 532:	c8 1a       	sub	r12, r24
 534:	d1 08       	sbc	r13, r1
 536:	c8 01       	movw	r24, r16
 538:	8c 1b       	sub	r24, r28
 53a:	9d 0b       	sbc	r25, r29
 53c:	09 97       	sbiw	r24, 0x09	; 9
 53e:	3c f4       	brge	.+14     	; 0x54e <stepper_rotate+0x116>
 540:	8f e0       	ldi	r24, 0x0F	; 15
 542:	c8 16       	cp	r12, r24
 544:	d1 04       	cpc	r13, r1
 546:	1c f4       	brge	.+6      	; 0x54e <stepper_rotate+0x116>
 548:	8f ef       	ldi	r24, 0xFF	; 255
 54a:	c8 1a       	sub	r12, r24
 54c:	d8 0a       	sbc	r13, r24
 54e:	21 96       	adiw	r28, 0x01	; 1
 550:	0c 17       	cp	r16, r28
 552:	1d 07       	cpc	r17, r29
 554:	09 f0       	breq	.+2      	; 0x558 <stepper_rotate+0x120>
 556:	99 cf       	rjmp	.-206    	; 0x48a <stepper_rotate+0x52>
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	1f 91       	pop	r17
 55e:	0f 91       	pop	r16
 560:	ff 90       	pop	r15
 562:	ef 90       	pop	r14
 564:	df 90       	pop	r13
 566:	cf 90       	pop	r12
 568:	bf 90       	pop	r11
 56a:	af 90       	pop	r10
 56c:	9f 90       	pop	r9
 56e:	8f 90       	pop	r8
 570:	08 95       	ret

00000572 <stepper_position>:
 572:	cf 93       	push	r28
 574:	df 93       	push	r29
 576:	c8 2f       	mov	r28, r24
 578:	d0 e0       	ldi	r29, 0x00	; 0
 57a:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <motor_position>
 57e:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <motor_position+0x1>
 582:	9e 01       	movw	r18, r28
 584:	28 1b       	sub	r18, r24
 586:	39 0b       	sbc	r19, r25
 588:	21 30       	cpi	r18, 0x01	; 1
 58a:	31 05       	cpc	r19, r1
 58c:	21 f0       	breq	.+8      	; 0x596 <stepper_position+0x24>
 58e:	2d 3f       	cpi	r18, 0xFD	; 253
 590:	8f ef       	ldi	r24, 0xFF	; 255
 592:	38 07       	cpc	r19, r24
 594:	31 f4       	brne	.+12     	; 0x5a2 <stepper_position+0x30>
 596:	64 e0       	ldi	r22, 0x04	; 4
 598:	70 e0       	ldi	r23, 0x00	; 0
 59a:	82 e3       	ldi	r24, 0x32	; 50
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	4c df       	rcall	.-360    	; 0x438 <stepper_rotate>
 5a0:	18 c0       	rjmp	.+48     	; 0x5d2 <stepper_position+0x60>
 5a2:	2f 3f       	cpi	r18, 0xFF	; 255
 5a4:	8f ef       	ldi	r24, 0xFF	; 255
 5a6:	38 07       	cpc	r19, r24
 5a8:	19 f0       	breq	.+6      	; 0x5b0 <stepper_position+0x3e>
 5aa:	23 30       	cpi	r18, 0x03	; 3
 5ac:	31 05       	cpc	r19, r1
 5ae:	31 f4       	brne	.+12     	; 0x5bc <stepper_position+0x4a>
 5b0:	68 e0       	ldi	r22, 0x08	; 8
 5b2:	70 e0       	ldi	r23, 0x00	; 0
 5b4:	82 e3       	ldi	r24, 0x32	; 50
 5b6:	90 e0       	ldi	r25, 0x00	; 0
 5b8:	3f df       	rcall	.-386    	; 0x438 <stepper_rotate>
 5ba:	0b c0       	rjmp	.+22     	; 0x5d2 <stepper_position+0x60>
 5bc:	22 30       	cpi	r18, 0x02	; 2
 5be:	31 05       	cpc	r19, r1
 5c0:	19 f0       	breq	.+6      	; 0x5c8 <stepper_position+0x56>
 5c2:	2e 3f       	cpi	r18, 0xFE	; 254
 5c4:	3f 4f       	sbci	r19, 0xFF	; 255
 5c6:	29 f4       	brne	.+10     	; 0x5d2 <stepper_position+0x60>
 5c8:	64 e0       	ldi	r22, 0x04	; 4
 5ca:	70 e0       	ldi	r23, 0x00	; 0
 5cc:	84 e6       	ldi	r24, 0x64	; 100
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	33 df       	rcall	.-410    	; 0x438 <stepper_rotate>
 5d2:	d0 93 30 01 	sts	0x0130, r29	; 0x800130 <motor_position+0x1>
 5d6:	c0 93 2f 01 	sts	0x012F, r28	; 0x80012f <motor_position>
 5da:	df 91       	pop	r29
 5dc:	cf 91       	pop	r28
 5de:	08 95       	ret

000005e0 <entry_sensor>:
 5e0:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <OS1_flag>
 5e4:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <item_number>
 5e8:	8f 5f       	subi	r24, 0xFF	; 255
 5ea:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <item_number>
 5ee:	72 dd       	rcall	.-1308   	; 0xd4 <initItem>
 5f0:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <item_number>
 5f4:	fc 01       	movw	r30, r24
 5f6:	25 83       	std	Z+5, r18	; 0x05
 5f8:	21 e0       	ldi	r18, 0x01	; 1
 5fa:	24 83       	std	Z+4, r18	; 0x04
 5fc:	bc 01       	movw	r22, r24
 5fe:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <entryList>
 602:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <entryList+0x1>
 606:	7c cd       	rjmp	.-1288   	; 0x100 <enqueue>
 608:	08 95       	ret

0000060a <metal_sensor>:
 60a:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <FER_flag>
 60e:	e0 91 5a 01 	lds	r30, 0x015A	; 0x80015a <entryList>
 612:	f0 91 5b 01 	lds	r31, 0x015B	; 0x80015b <entryList+0x1>
 616:	02 80       	ldd	r0, Z+2	; 0x02
 618:	f3 81       	ldd	r31, Z+3	; 0x03
 61a:	e0 2d       	mov	r30, r0
 61c:	81 e0       	ldi	r24, 0x01	; 1
 61e:	80 83       	st	Z, r24
 620:	08 95       	ret

00000622 <reflective_sensor>:
 622:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <OS2_flag>
 626:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <reflective_present>
 62a:	88 23       	and	r24, r24
 62c:	31 f0       	breq	.+12     	; 0x63a <reflective_sensor+0x18>
 62e:	ea e7       	ldi	r30, 0x7A	; 122
 630:	f0 e0       	ldi	r31, 0x00	; 0
 632:	80 81       	ld	r24, Z
 634:	80 64       	ori	r24, 0x40	; 64
 636:	80 83       	st	Z, r24
 638:	08 95       	ret
 63a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
 63e:	82 30       	cpi	r24, 0x02	; 2
 640:	d1 f4       	brne	.+52     	; 0x676 <reflective_sensor+0x54>
 642:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <entryList>
 646:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <entryList+0x1>
 64a:	6b dd       	rcall	.-1322   	; 0x122 <dequeue>
 64c:	20 91 5c 01 	lds	r18, 0x015C	; 0x80015c <ADC_lowest_val>
 650:	30 91 5d 01 	lds	r19, 0x015D	; 0x80015d <ADC_lowest_val+0x1>
 654:	fc 01       	movw	r30, r24
 656:	32 83       	std	Z+2, r19	; 0x02
 658:	21 83       	std	Z+1, r18	; 0x01
 65a:	22 e0       	ldi	r18, 0x02	; 2
 65c:	24 83       	std	Z+4, r18	; 0x04
 65e:	bc 01       	movw	r22, r24
 660:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <reflectiveList>
 664:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <reflectiveList+0x1>
 668:	4b dd       	rcall	.-1386   	; 0x100 <enqueue>
 66a:	8f ef       	ldi	r24, 0xFF	; 255
 66c:	93 e0       	ldi	r25, 0x03	; 3
 66e:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <ADC_lowest_val+0x1>
 672:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <ADC_lowest_val>
 676:	81 e0       	ldi	r24, 0x01	; 1
 678:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <item_ready>
 67c:	08 95       	ret

0000067e <__vector_3>:
 67e:	1f 92       	push	r1
 680:	0f 92       	push	r0
 682:	0f b6       	in	r0, 0x3f	; 63
 684:	0f 92       	push	r0
 686:	11 24       	eor	r1, r1
 688:	0b b6       	in	r0, 0x3b	; 59
 68a:	0f 92       	push	r0
 68c:	2f 93       	push	r18
 68e:	3f 93       	push	r19
 690:	4f 93       	push	r20
 692:	5f 93       	push	r21
 694:	6f 93       	push	r22
 696:	7f 93       	push	r23
 698:	8f 93       	push	r24
 69a:	9f 93       	push	r25
 69c:	af 93       	push	r26
 69e:	bf 93       	push	r27
 6a0:	ef 93       	push	r30
 6a2:	ff 93       	push	r31
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <OS2_flag>
 6aa:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <reflective_present>
 6ae:	88 23       	and	r24, r24
 6b0:	19 f0       	breq	.+6      	; 0x6b8 <__vector_3+0x3a>
 6b2:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <reflective_present>
 6b6:	03 c0       	rjmp	.+6      	; 0x6be <__vector_3+0x40>
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <reflective_present>
 6be:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
 6c2:	81 30       	cpi	r24, 0x01	; 1
 6c4:	09 f4       	brne	.+2      	; 0x6c8 <__vector_3+0x4a>
 6c6:	ad df       	rcall	.-166    	; 0x622 <reflective_sensor>
 6c8:	ff 91       	pop	r31
 6ca:	ef 91       	pop	r30
 6cc:	bf 91       	pop	r27
 6ce:	af 91       	pop	r26
 6d0:	9f 91       	pop	r25
 6d2:	8f 91       	pop	r24
 6d4:	7f 91       	pop	r23
 6d6:	6f 91       	pop	r22
 6d8:	5f 91       	pop	r21
 6da:	4f 91       	pop	r20
 6dc:	3f 91       	pop	r19
 6de:	2f 91       	pop	r18
 6e0:	0f 90       	pop	r0
 6e2:	0b be       	out	0x3b, r0	; 59
 6e4:	0f 90       	pop	r0
 6e6:	0f be       	out	0x3f, r0	; 63
 6e8:	0f 90       	pop	r0
 6ea:	1f 90       	pop	r1
 6ec:	18 95       	reti

000006ee <classify_item>:
 6ee:	cf 93       	push	r28
 6f0:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <item_ready>
 6f4:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <reflectiveList>
 6f8:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <reflectiveList+0x1>
 6fc:	12 dd       	rcall	.-1500   	; 0x122 <dequeue>
 6fe:	fc 01       	movw	r30, r24
 700:	81 81       	ldd	r24, Z+1	; 0x01
 702:	92 81       	ldd	r25, Z+2	; 0x02
 704:	20 81       	ld	r18, Z
 706:	21 11       	cpse	r18, r1
 708:	34 c0       	rjmp	.+104    	; 0x772 <classify_item+0x84>
 70a:	ad e0       	ldi	r26, 0x0D	; 13
 70c:	b1 e0       	ldi	r27, 0x01	; 1
 70e:	4d 91       	ld	r20, X+
 710:	5c 91       	ld	r21, X
 712:	11 97       	sbiw	r26, 0x01	; 1
 714:	12 96       	adiw	r26, 0x02	; 2
 716:	2d 91       	ld	r18, X+
 718:	3c 91       	ld	r19, X
 71a:	13 97       	sbiw	r26, 0x03	; 3
 71c:	48 1b       	sub	r20, r24
 71e:	59 0b       	sbc	r21, r25
 720:	ba 01       	movw	r22, r20
 722:	22 f4       	brpl	.+8      	; 0x72c <classify_item+0x3e>
 724:	66 27       	eor	r22, r22
 726:	77 27       	eor	r23, r23
 728:	64 1b       	sub	r22, r20
 72a:	75 0b       	sbc	r23, r21
 72c:	a9 01       	movw	r20, r18
 72e:	48 1b       	sub	r20, r24
 730:	59 0b       	sbc	r21, r25
 732:	9a 01       	movw	r18, r20
 734:	22 f4       	brpl	.+8      	; 0x73e <classify_item+0x50>
 736:	22 27       	eor	r18, r18
 738:	33 27       	eor	r19, r19
 73a:	24 1b       	sub	r18, r20
 73c:	35 0b       	sbc	r19, r21
 73e:	62 17       	cp	r22, r18
 740:	73 07       	cpc	r23, r19
 742:	50 f4       	brcc	.+20     	; 0x758 <classify_item+0x6a>
 744:	a9 e1       	ldi	r26, 0x19	; 25
 746:	b1 e0       	ldi	r27, 0x01	; 1
 748:	8d 91       	ld	r24, X+
 74a:	9c 91       	ld	r25, X
 74c:	11 97       	sbiw	r26, 0x01	; 1
 74e:	01 96       	adiw	r24, 0x01	; 1
 750:	8d 93       	st	X+, r24
 752:	9c 93       	st	X, r25
 754:	c0 e0       	ldi	r28, 0x00	; 0
 756:	48 c0       	rjmp	.+144    	; 0x7e8 <classify_item+0xfa>
 758:	a9 e1       	ldi	r26, 0x19	; 25
 75a:	b1 e0       	ldi	r27, 0x01	; 1
 75c:	14 96       	adiw	r26, 0x04	; 4
 75e:	8d 91       	ld	r24, X+
 760:	9c 91       	ld	r25, X
 762:	15 97       	sbiw	r26, 0x05	; 5
 764:	01 96       	adiw	r24, 0x01	; 1
 766:	15 96       	adiw	r26, 0x05	; 5
 768:	9c 93       	st	X, r25
 76a:	8e 93       	st	-X, r24
 76c:	14 97       	sbiw	r26, 0x04	; 4
 76e:	c2 e0       	ldi	r28, 0x02	; 2
 770:	3b c0       	rjmp	.+118    	; 0x7e8 <classify_item+0xfa>
 772:	21 30       	cpi	r18, 0x01	; 1
 774:	c1 f5       	brne	.+112    	; 0x7e6 <classify_item+0xf8>
 776:	ad e0       	ldi	r26, 0x0D	; 13
 778:	b1 e0       	ldi	r27, 0x01	; 1
 77a:	14 96       	adiw	r26, 0x04	; 4
 77c:	4d 91       	ld	r20, X+
 77e:	5c 91       	ld	r21, X
 780:	15 97       	sbiw	r26, 0x05	; 5
 782:	16 96       	adiw	r26, 0x06	; 6
 784:	2d 91       	ld	r18, X+
 786:	3c 91       	ld	r19, X
 788:	17 97       	sbiw	r26, 0x07	; 7
 78a:	48 1b       	sub	r20, r24
 78c:	59 0b       	sbc	r21, r25
 78e:	ba 01       	movw	r22, r20
 790:	22 f4       	brpl	.+8      	; 0x79a <classify_item+0xac>
 792:	66 27       	eor	r22, r22
 794:	77 27       	eor	r23, r23
 796:	64 1b       	sub	r22, r20
 798:	75 0b       	sbc	r23, r21
 79a:	a9 01       	movw	r20, r18
 79c:	48 1b       	sub	r20, r24
 79e:	59 0b       	sbc	r21, r25
 7a0:	9a 01       	movw	r18, r20
 7a2:	22 f4       	brpl	.+8      	; 0x7ac <classify_item+0xbe>
 7a4:	22 27       	eor	r18, r18
 7a6:	33 27       	eor	r19, r19
 7a8:	24 1b       	sub	r18, r20
 7aa:	35 0b       	sbc	r19, r21
 7ac:	62 17       	cp	r22, r18
 7ae:	73 07       	cpc	r23, r19
 7b0:	68 f4       	brcc	.+26     	; 0x7cc <classify_item+0xde>
 7b2:	a9 e1       	ldi	r26, 0x19	; 25
 7b4:	b1 e0       	ldi	r27, 0x01	; 1
 7b6:	16 96       	adiw	r26, 0x06	; 6
 7b8:	8d 91       	ld	r24, X+
 7ba:	9c 91       	ld	r25, X
 7bc:	17 97       	sbiw	r26, 0x07	; 7
 7be:	01 96       	adiw	r24, 0x01	; 1
 7c0:	17 96       	adiw	r26, 0x07	; 7
 7c2:	9c 93       	st	X, r25
 7c4:	8e 93       	st	-X, r24
 7c6:	16 97       	sbiw	r26, 0x06	; 6
 7c8:	c3 e0       	ldi	r28, 0x03	; 3
 7ca:	0e c0       	rjmp	.+28     	; 0x7e8 <classify_item+0xfa>
 7cc:	a9 e1       	ldi	r26, 0x19	; 25
 7ce:	b1 e0       	ldi	r27, 0x01	; 1
 7d0:	12 96       	adiw	r26, 0x02	; 2
 7d2:	8d 91       	ld	r24, X+
 7d4:	9c 91       	ld	r25, X
 7d6:	13 97       	sbiw	r26, 0x03	; 3
 7d8:	01 96       	adiw	r24, 0x01	; 1
 7da:	13 96       	adiw	r26, 0x03	; 3
 7dc:	9c 93       	st	X, r25
 7de:	8e 93       	st	-X, r24
 7e0:	12 97       	sbiw	r26, 0x02	; 2
 7e2:	c1 e0       	ldi	r28, 0x01	; 1
 7e4:	01 c0       	rjmp	.+2      	; 0x7e8 <classify_item+0xfa>
 7e6:	c0 e0       	ldi	r28, 0x00	; 0
 7e8:	c3 83       	std	Z+3, r28	; 0x03
 7ea:	83 e0       	ldi	r24, 0x03	; 3
 7ec:	84 83       	std	Z+4, r24	; 0x04
 7ee:	a9 e1       	ldi	r26, 0x19	; 25
 7f0:	b1 e0       	ldi	r27, 0x01	; 1
 7f2:	18 96       	adiw	r26, 0x08	; 8
 7f4:	8d 91       	ld	r24, X+
 7f6:	9c 91       	ld	r25, X
 7f8:	19 97       	sbiw	r26, 0x09	; 9
 7fa:	01 96       	adiw	r24, 0x01	; 1
 7fc:	19 96       	adiw	r26, 0x09	; 9
 7fe:	9c 93       	st	X, r25
 800:	8e 93       	st	-X, r24
 802:	18 97       	sbiw	r26, 0x08	; 8
 804:	bf 01       	movw	r22, r30
 806:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <classifiedList>
 80a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <classifiedList+0x1>
 80e:	78 dc       	rcall	.-1808   	; 0x100 <enqueue>
 810:	c8 b9       	out	0x08, r28	; 8
 812:	cf 91       	pop	r28
 814:	08 95       	ret

00000816 <exit_sensor>:
 816:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <OS3_flag>
 81a:	15 b8       	out	0x05, r1	; 5
 81c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <classifiedList>
 820:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <classifiedList+0x1>
 824:	7e dc       	rcall	.-1796   	; 0x122 <dequeue>
 826:	bc 01       	movw	r22, r24
 828:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <sortedList>
 82c:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <sortedList+0x1>
 830:	67 dc       	rcall	.-1842   	; 0x100 <enqueue>
 832:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <sortedList>
 836:	f0 91 32 01 	lds	r31, 0x0132	; 0x800132 <sortedList+0x1>
 83a:	02 80       	ldd	r0, Z+2	; 0x02
 83c:	f3 81       	ldd	r31, Z+3	; 0x03
 83e:	e0 2d       	mov	r30, r0
 840:	83 81       	ldd	r24, Z+3	; 0x03
 842:	8f 5f       	subi	r24, 0xFF	; 255
 844:	96 de       	rcall	.-724    	; 0x572 <stepper_position>
 846:	9f cd       	rjmp	.-1218   	; 0x386 <init_motor>
 848:	08 95       	ret

0000084a <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 84a:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 84c:	8f e8       	ldi	r24, 0x8F	; 143
 84e:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 850:	8f ef       	ldi	r24, 0xFF	; 255
 852:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 854:	80 ef       	ldi	r24, 0xF0	; 240
 856:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 858:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 85a:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 85c:	18 b8       	out	0x08, r1	; 8
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
	init_motor();
 85e:	f8 94       	cli
	init_interrupts();
 860:	97 dd       	rcall	.-1234   	; 0x390 <init_ADC>
 862:	6a dd       	rcall	.-1324   	; 0x338 <init_timer0_pwm>
	init_stepper();
 864:	72 dd       	rcall	.-1308   	; 0x34a <init_timer3>

	// Calibrate ADC before program starts

	//ADC_calibrate();

	entryList = initQueue();
 866:	8f dd       	rcall	.-1250   	; 0x386 <init_motor>
 868:	5d dd       	rcall	.-1350   	; 0x324 <init_interrupts>
 86a:	b4 dd       	rcall	.-1176   	; 0x3d4 <init_stepper>
 86c:	78 94       	sei
 86e:	3f dc       	rcall	.-1922   	; 0xee <initQueue>
	reflectiveList = initQueue();
 870:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <entryList+0x1>
 874:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <entryList>
 878:	3a dc       	rcall	.-1932   	; 0xee <initQueue>
	classifiedList = initQueue();
 87a:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <reflectiveList+0x1>
 87e:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <reflectiveList>
 882:	35 dc       	rcall	.-1942   	; 0xee <initQueue>
 884:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <classifiedList+0x1>
	sortedList = initQueue();
 888:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <classifiedList>
 88c:	30 dc       	rcall	.-1952   	; 0xee <initQueue>
 88e:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <sortedList+0x1>

	STATE = OPERATIONAL;
 892:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <sortedList>
 896:	82 e0       	ldi	r24, 0x02	; 2
	item_waiting = 0;
 898:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <STATE>
	item_number = 0;
 89c:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <item_waiting>
		if (STATE == OPERATIONAL || RAMP_DOWN) {
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
				// start motor
				PORTB =  CW;
 8a0:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <item_number>
				
				// Disable timer
				TIMSK3 &= 0xFD;
 8a4:	14 e0       	ldi	r17, 0x04	; 4
			
			STATE_TRANSITION = NONE;
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
				STATE = OPERATIONAL;
 8a6:	c1 e7       	ldi	r28, 0x71	; 113
	// Main Program
	while (1)
	{
				
		// When we trigger ramp down button stay in OPERATIONAL for time of half conveyor
		if (STATE_TRANSITION == RAMP_DOWN_ENTERED) {
 8a8:	d0 e0       	ldi	r29, 0x00	; 0
 8aa:	02 e0       	ldi	r16, 0x02	; 2
 8ac:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <STATE_TRANSITION>
			// testing
			//PORTC |= 0x02;
			
			STATE_TRANSITION = NONE;
 8b0:	83 30       	cpi	r24, 0x03	; 3
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
 8b2:	69 f4       	brne	.+26     	; 0x8ce <main+0x84>
 8b4:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <STATE_TRANSITION>
				STATE = OPERATIONAL;
 8b8:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
			}
			
			start_timer3(timer3_1sec);		// Good for MOTOR_SPEED = 0x30
 8bc:	83 30       	cpi	r24, 0x03	; 3
 8be:	11 f4       	brne	.+4      	; 0x8c4 <main+0x7a>
 8c0:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <STATE>
 8c4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <timer3_1sec>
		}
		
		if (STATE == OPERATIONAL || RAMP_DOWN) {
 8c8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <timer3_1sec+0x1>
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
 8cc:	4d dd       	rcall	.-1382   	; 0x368 <start_timer3>
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 8ce:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
			}	
			
			// Handle flags from sensors
			if(OS1_flag) 
 8d2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <STATE_TRANSITION>
				entry_sensor();
 8d6:	82 30       	cpi	r24, 0x02	; 2
			if(FER_flag) 
 8d8:	21 f4       	brne	.+8      	; 0x8e2 <main+0x98>
 8da:	15 b9       	out	0x05, r17	; 5
				metal_sensor();
 8dc:	88 81       	ld	r24, Y
			if(OS2_flag) 
 8de:	8d 7f       	andi	r24, 0xFD	; 253
 8e0:	88 83       	st	Y, r24
 8e2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <OS1_flag>
				reflective_sensor();
 8e6:	81 11       	cpse	r24, r1
			if(item_ready) 
 8e8:	7b de       	rcall	.-778    	; 0x5e0 <entry_sensor>
 8ea:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <FER_flag>
				classify_item();
 8ee:	81 11       	cpse	r24, r1
 8f0:	8c de       	rcall	.-744    	; 0x60a <metal_sensor>
			if(OS3_flag) 
 8f2:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <OS2_flag>
 8f6:	81 11       	cpse	r24, r1
				exit_sensor();	
 8f8:	94 de       	rcall	.-728    	; 0x622 <reflective_sensor>
			
		}
		
		if (STATE == PAUSED) {
 8fa:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <item_ready>
 8fe:	81 11       	cpse	r24, r1
 900:	f6 de       	rcall	.-532    	; 0x6ee <classify_item>
			
			// Check if just entering PAUSED
			if (STATE_TRANSITION == PAUSE_ENTERED) {
 902:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <OS3_flag>
 906:	81 11       	cpse	r24, r1
 908:	86 df       	rcall	.-244    	; 0x816 <exit_sensor>
				//pause_entered = 0;
				STATE_TRANSITION = NONE;
 90a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
				
				// turn off motor
				PORTB =  0;
 90e:	83 30       	cpi	r24, 0x03	; 3
				
				// start timer for 1 sec
				start_timer3(timer3_1sec);
 910:	89 f5       	brne	.+98     	; 0x974 <main+0x12a>
 912:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <STATE_TRANSITION>
 916:	81 30       	cpi	r24, 0x01	; 1
 918:	41 f4       	brne	.+16     	; 0x92a <main+0xe0>
 91a:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <STATE_TRANSITION>
			}
			
			// Update display
			if (timer3_flag) {
 91e:	15 b8       	out	0x05, r1	; 5
 920:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <timer3_1sec>
				timer3_flag = 0;
 924:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <timer3_1sec+0x1>
				
				// Display: | Al Bl St Wh x x x x |
				//display_pieces((1 << display_index), sorted_items_array[display_index]);
				display_pieces(display_type[display_index], sorted_items_array[display_index]);
 928:	1f dd       	rcall	.-1474   	; 0x368 <start_timer3>
 92a:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <timer3_flag>
 92e:	88 23       	and	r24, r24
 930:	09 f1       	breq	.+66     	; 0x974 <main+0x12a>
 932:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <timer3_flag>
 936:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <display_index>
 93a:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <display_index>
 93e:	b0 e0       	ldi	r27, 0x00	; 0
 940:	aa 5f       	subi	r26, 0xFA	; 250
	//PORTC = size(sortedList);
	//PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 942:	be 4f       	sbci	r27, 0xFE	; 254
 944:	9c 91       	ld	r25, X
 946:	f0 e0       	ldi	r31, 0x00	; 0
 948:	ee 0f       	add	r30, r30
 94a:	ff 1f       	adc	r31, r31
 94c:	e7 5e       	subi	r30, 0xE7	; 231
				
				// Display: | Al Bl St Wh x x x x |
				//display_pieces((1 << display_index), sorted_items_array[display_index]);
				display_pieces(display_type[display_index], sorted_items_array[display_index]);
				
				if (display_index == 3) {
 94e:	fe 4f       	sbci	r31, 0xFE	; 254
 950:	80 81       	ld	r24, Z
 952:	20 e1       	ldi	r18, 0x10	; 16
 954:	92 9f       	mul	r25, r18
					display_index = 0;
 956:	80 0d       	add	r24, r0
 958:	11 24       	eor	r1, r1
 95a:	88 b9       	out	0x08, r24	; 8
				} else {
					display_index++;
 95c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <display_index>
 960:	83 30       	cpi	r24, 0x03	; 3
 962:	19 f4       	brne	.+6      	; 0x96a <main+0x120>
 964:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <display_index>
				}
			}			
		} 
		
		if (STATE == RAMP_DOWN) {
 968:	05 c0       	rjmp	.+10     	; 0x974 <main+0x12a>
 96a:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <display_index>
			// testing
			//PORTC |= 0x08;
			
			if (timer3_flag) {	
 96e:	8f 5f       	subi	r24, 0xFF	; 255
 970:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <display_index>
				timer3_flag = 0;
 974:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <STATE>
				
				// Disable timer
				TIMSK3 &= 0xFD;
 978:	84 30       	cpi	r24, 0x04	; 4
 97a:	09 f0       	breq	.+2      	; 0x97e <main+0x134>
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 97c:	97 cf       	rjmp	.-210    	; 0x8ac <main+0x62>
 97e:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <timer3_flag>
 982:	88 23       	and	r24, r24
 984:	29 f0       	breq	.+10     	; 0x990 <main+0x146>
 986:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <timer3_flag>
 98a:	88 81       	ld	r24, Y
				isEmpty(reflectiveList) &&
 98c:	8d 7f       	andi	r24, 0xFD	; 253
 98e:	88 83       	st	Y, r24
 990:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <entryList>
 994:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <entryList+0x1>
				// Disable timer
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 998:	ed db       	rcall	.-2086   	; 0x174 <isEmpty>
 99a:	89 2b       	or	r24, r25
				isEmpty(reflectiveList) &&
				isEmpty(classifiedList)) {
 99c:	09 f4       	brne	.+2      	; 0x9a0 <main+0x156>
 99e:	86 cf       	rjmp	.-244    	; 0x8ac <main+0x62>
 9a0:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <reflectiveList>
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
				isEmpty(reflectiveList) &&
 9a4:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <reflectiveList+0x1>
 9a8:	e5 db       	rcall	.-2102   	; 0x174 <isEmpty>
				
				// Turn off motor
				PORTB = 0;
				
				// Disable ADC
				ADCSRA &= ~_BV(ADEN);
 9aa:	89 2b       	or	r24, r25
 9ac:	09 f4       	brne	.+2      	; 0x9b0 <main+0x166>
 9ae:	7e cf       	rjmp	.-260    	; 0x8ac <main+0x62>
				
				// Disable interrupts
				cli();
				
				// Release resources
				clearQueue(entryList);
 9b0:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <classifiedList>
 9b4:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <classifiedList+0x1>
 9b8:	dd db       	rcall	.-2118   	; 0x174 <isEmpty>
 9ba:	89 2b       	or	r24, r25
				clearQueue(reflectiveList);
 9bc:	09 f4       	brne	.+2      	; 0x9c0 <main+0x176>
 9be:	76 cf       	rjmp	.-276    	; 0x8ac <main+0x62>
 9c0:	15 b8       	out	0x05, r1	; 5
 9c2:	ea e7       	ldi	r30, 0x7A	; 122
 9c4:	f0 e0       	ldi	r31, 0x00	; 0
 9c6:	80 81       	ld	r24, Z
				clearQueue(classifiedList);
 9c8:	8f 77       	andi	r24, 0x7F	; 127
 9ca:	80 83       	st	Z, r24
 9cc:	f8 94       	cli
 9ce:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <entryList>
 9d2:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <entryList+0x1>
				clearQueue(sortedList);
 9d6:	b8 db       	rcall	.-2192   	; 0x148 <clearQueue>
 9d8:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <reflectiveList>
 9dc:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <reflectiveList+0x1>
 9e0:	b3 db       	rcall	.-2202   	; 0x148 <clearQueue>
 9e2:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <classifiedList>
 9e6:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <classifiedList+0x1>
 9ea:	ae db       	rcall	.-2212   	; 0x148 <clearQueue>
 9ec:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <sortedList>
 9f0:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <sortedList+0x1>
 9f4:	a9 db       	rcall	.-2222   	; 0x148 <clearQueue>
 9f6:	5a cf       	rjmp	.-332    	; 0x8ac <main+0x62>

000009f8 <malloc>:
 9f8:	0f 93       	push	r16
 9fa:	1f 93       	push	r17
 9fc:	cf 93       	push	r28
 9fe:	df 93       	push	r29
 a00:	82 30       	cpi	r24, 0x02	; 2
 a02:	91 05       	cpc	r25, r1
 a04:	10 f4       	brcc	.+4      	; 0xa0a <malloc+0x12>
 a06:	82 e0       	ldi	r24, 0x02	; 2
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	e0 91 60 01 	lds	r30, 0x0160	; 0x800160 <__flp>
 a0e:	f0 91 61 01 	lds	r31, 0x0161	; 0x800161 <__flp+0x1>
 a12:	20 e0       	ldi	r18, 0x00	; 0
 a14:	30 e0       	ldi	r19, 0x00	; 0
 a16:	a0 e0       	ldi	r26, 0x00	; 0
 a18:	b0 e0       	ldi	r27, 0x00	; 0
 a1a:	30 97       	sbiw	r30, 0x00	; 0
 a1c:	19 f1       	breq	.+70     	; 0xa64 <malloc+0x6c>
 a1e:	40 81       	ld	r20, Z
 a20:	51 81       	ldd	r21, Z+1	; 0x01
 a22:	02 81       	ldd	r16, Z+2	; 0x02
 a24:	13 81       	ldd	r17, Z+3	; 0x03
 a26:	48 17       	cp	r20, r24
 a28:	59 07       	cpc	r21, r25
 a2a:	c8 f0       	brcs	.+50     	; 0xa5e <malloc+0x66>
 a2c:	84 17       	cp	r24, r20
 a2e:	95 07       	cpc	r25, r21
 a30:	69 f4       	brne	.+26     	; 0xa4c <malloc+0x54>
 a32:	10 97       	sbiw	r26, 0x00	; 0
 a34:	31 f0       	breq	.+12     	; 0xa42 <malloc+0x4a>
 a36:	12 96       	adiw	r26, 0x02	; 2
 a38:	0c 93       	st	X, r16
 a3a:	12 97       	sbiw	r26, 0x02	; 2
 a3c:	13 96       	adiw	r26, 0x03	; 3
 a3e:	1c 93       	st	X, r17
 a40:	27 c0       	rjmp	.+78     	; 0xa90 <malloc+0x98>
 a42:	00 93 60 01 	sts	0x0160, r16	; 0x800160 <__flp>
 a46:	10 93 61 01 	sts	0x0161, r17	; 0x800161 <__flp+0x1>
 a4a:	22 c0       	rjmp	.+68     	; 0xa90 <malloc+0x98>
 a4c:	21 15       	cp	r18, r1
 a4e:	31 05       	cpc	r19, r1
 a50:	19 f0       	breq	.+6      	; 0xa58 <malloc+0x60>
 a52:	42 17       	cp	r20, r18
 a54:	53 07       	cpc	r21, r19
 a56:	18 f4       	brcc	.+6      	; 0xa5e <malloc+0x66>
 a58:	9a 01       	movw	r18, r20
 a5a:	bd 01       	movw	r22, r26
 a5c:	ef 01       	movw	r28, r30
 a5e:	df 01       	movw	r26, r30
 a60:	f8 01       	movw	r30, r16
 a62:	db cf       	rjmp	.-74     	; 0xa1a <malloc+0x22>
 a64:	21 15       	cp	r18, r1
 a66:	31 05       	cpc	r19, r1
 a68:	f9 f0       	breq	.+62     	; 0xaa8 <malloc+0xb0>
 a6a:	28 1b       	sub	r18, r24
 a6c:	39 0b       	sbc	r19, r25
 a6e:	24 30       	cpi	r18, 0x04	; 4
 a70:	31 05       	cpc	r19, r1
 a72:	80 f4       	brcc	.+32     	; 0xa94 <malloc+0x9c>
 a74:	8a 81       	ldd	r24, Y+2	; 0x02
 a76:	9b 81       	ldd	r25, Y+3	; 0x03
 a78:	61 15       	cp	r22, r1
 a7a:	71 05       	cpc	r23, r1
 a7c:	21 f0       	breq	.+8      	; 0xa86 <malloc+0x8e>
 a7e:	fb 01       	movw	r30, r22
 a80:	93 83       	std	Z+3, r25	; 0x03
 a82:	82 83       	std	Z+2, r24	; 0x02
 a84:	04 c0       	rjmp	.+8      	; 0xa8e <malloc+0x96>
 a86:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <__flp+0x1>
 a8a:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <__flp>
 a8e:	fe 01       	movw	r30, r28
 a90:	32 96       	adiw	r30, 0x02	; 2
 a92:	44 c0       	rjmp	.+136    	; 0xb1c <malloc+0x124>
 a94:	fe 01       	movw	r30, r28
 a96:	e2 0f       	add	r30, r18
 a98:	f3 1f       	adc	r31, r19
 a9a:	81 93       	st	Z+, r24
 a9c:	91 93       	st	Z+, r25
 a9e:	22 50       	subi	r18, 0x02	; 2
 aa0:	31 09       	sbc	r19, r1
 aa2:	39 83       	std	Y+1, r19	; 0x01
 aa4:	28 83       	st	Y, r18
 aa6:	3a c0       	rjmp	.+116    	; 0xb1c <malloc+0x124>
 aa8:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <__brkval>
 aac:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <__brkval+0x1>
 ab0:	23 2b       	or	r18, r19
 ab2:	41 f4       	brne	.+16     	; 0xac4 <malloc+0xcc>
 ab4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 ab8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 abc:	30 93 5f 01 	sts	0x015F, r19	; 0x80015f <__brkval+0x1>
 ac0:	20 93 5e 01 	sts	0x015E, r18	; 0x80015e <__brkval>
 ac4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 ac8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 acc:	21 15       	cp	r18, r1
 ace:	31 05       	cpc	r19, r1
 ad0:	41 f4       	brne	.+16     	; 0xae2 <malloc+0xea>
 ad2:	2d b7       	in	r18, 0x3d	; 61
 ad4:	3e b7       	in	r19, 0x3e	; 62
 ad6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 ada:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 ade:	24 1b       	sub	r18, r20
 ae0:	35 0b       	sbc	r19, r21
 ae2:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <__brkval>
 ae6:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <__brkval+0x1>
 aea:	e2 17       	cp	r30, r18
 aec:	f3 07       	cpc	r31, r19
 aee:	a0 f4       	brcc	.+40     	; 0xb18 <malloc+0x120>
 af0:	2e 1b       	sub	r18, r30
 af2:	3f 0b       	sbc	r19, r31
 af4:	28 17       	cp	r18, r24
 af6:	39 07       	cpc	r19, r25
 af8:	78 f0       	brcs	.+30     	; 0xb18 <malloc+0x120>
 afa:	ac 01       	movw	r20, r24
 afc:	4e 5f       	subi	r20, 0xFE	; 254
 afe:	5f 4f       	sbci	r21, 0xFF	; 255
 b00:	24 17       	cp	r18, r20
 b02:	35 07       	cpc	r19, r21
 b04:	48 f0       	brcs	.+18     	; 0xb18 <malloc+0x120>
 b06:	4e 0f       	add	r20, r30
 b08:	5f 1f       	adc	r21, r31
 b0a:	50 93 5f 01 	sts	0x015F, r21	; 0x80015f <__brkval+0x1>
 b0e:	40 93 5e 01 	sts	0x015E, r20	; 0x80015e <__brkval>
 b12:	81 93       	st	Z+, r24
 b14:	91 93       	st	Z+, r25
 b16:	02 c0       	rjmp	.+4      	; 0xb1c <malloc+0x124>
 b18:	e0 e0       	ldi	r30, 0x00	; 0
 b1a:	f0 e0       	ldi	r31, 0x00	; 0
 b1c:	cf 01       	movw	r24, r30
 b1e:	df 91       	pop	r29
 b20:	cf 91       	pop	r28
 b22:	1f 91       	pop	r17
 b24:	0f 91       	pop	r16
 b26:	08 95       	ret

00000b28 <free>:
 b28:	cf 93       	push	r28
 b2a:	df 93       	push	r29
 b2c:	00 97       	sbiw	r24, 0x00	; 0
 b2e:	09 f4       	brne	.+2      	; 0xb32 <free+0xa>
 b30:	81 c0       	rjmp	.+258    	; 0xc34 <free+0x10c>
 b32:	fc 01       	movw	r30, r24
 b34:	32 97       	sbiw	r30, 0x02	; 2
 b36:	13 82       	std	Z+3, r1	; 0x03
 b38:	12 82       	std	Z+2, r1	; 0x02
 b3a:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <__flp>
 b3e:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <__flp+0x1>
 b42:	10 97       	sbiw	r26, 0x00	; 0
 b44:	81 f4       	brne	.+32     	; 0xb66 <free+0x3e>
 b46:	20 81       	ld	r18, Z
 b48:	31 81       	ldd	r19, Z+1	; 0x01
 b4a:	82 0f       	add	r24, r18
 b4c:	93 1f       	adc	r25, r19
 b4e:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <__brkval>
 b52:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <__brkval+0x1>
 b56:	28 17       	cp	r18, r24
 b58:	39 07       	cpc	r19, r25
 b5a:	51 f5       	brne	.+84     	; 0xbb0 <free+0x88>
 b5c:	f0 93 5f 01 	sts	0x015F, r31	; 0x80015f <__brkval+0x1>
 b60:	e0 93 5e 01 	sts	0x015E, r30	; 0x80015e <__brkval>
 b64:	67 c0       	rjmp	.+206    	; 0xc34 <free+0x10c>
 b66:	ed 01       	movw	r28, r26
 b68:	20 e0       	ldi	r18, 0x00	; 0
 b6a:	30 e0       	ldi	r19, 0x00	; 0
 b6c:	ce 17       	cp	r28, r30
 b6e:	df 07       	cpc	r29, r31
 b70:	40 f4       	brcc	.+16     	; 0xb82 <free+0x5a>
 b72:	4a 81       	ldd	r20, Y+2	; 0x02
 b74:	5b 81       	ldd	r21, Y+3	; 0x03
 b76:	9e 01       	movw	r18, r28
 b78:	41 15       	cp	r20, r1
 b7a:	51 05       	cpc	r21, r1
 b7c:	f1 f0       	breq	.+60     	; 0xbba <free+0x92>
 b7e:	ea 01       	movw	r28, r20
 b80:	f5 cf       	rjmp	.-22     	; 0xb6c <free+0x44>
 b82:	d3 83       	std	Z+3, r29	; 0x03
 b84:	c2 83       	std	Z+2, r28	; 0x02
 b86:	40 81       	ld	r20, Z
 b88:	51 81       	ldd	r21, Z+1	; 0x01
 b8a:	84 0f       	add	r24, r20
 b8c:	95 1f       	adc	r25, r21
 b8e:	c8 17       	cp	r28, r24
 b90:	d9 07       	cpc	r29, r25
 b92:	59 f4       	brne	.+22     	; 0xbaa <free+0x82>
 b94:	88 81       	ld	r24, Y
 b96:	99 81       	ldd	r25, Y+1	; 0x01
 b98:	84 0f       	add	r24, r20
 b9a:	95 1f       	adc	r25, r21
 b9c:	02 96       	adiw	r24, 0x02	; 2
 b9e:	91 83       	std	Z+1, r25	; 0x01
 ba0:	80 83       	st	Z, r24
 ba2:	8a 81       	ldd	r24, Y+2	; 0x02
 ba4:	9b 81       	ldd	r25, Y+3	; 0x03
 ba6:	93 83       	std	Z+3, r25	; 0x03
 ba8:	82 83       	std	Z+2, r24	; 0x02
 baa:	21 15       	cp	r18, r1
 bac:	31 05       	cpc	r19, r1
 bae:	29 f4       	brne	.+10     	; 0xbba <free+0x92>
 bb0:	f0 93 61 01 	sts	0x0161, r31	; 0x800161 <__flp+0x1>
 bb4:	e0 93 60 01 	sts	0x0160, r30	; 0x800160 <__flp>
 bb8:	3d c0       	rjmp	.+122    	; 0xc34 <free+0x10c>
 bba:	e9 01       	movw	r28, r18
 bbc:	fb 83       	std	Y+3, r31	; 0x03
 bbe:	ea 83       	std	Y+2, r30	; 0x02
 bc0:	49 91       	ld	r20, Y+
 bc2:	59 91       	ld	r21, Y+
 bc4:	c4 0f       	add	r28, r20
 bc6:	d5 1f       	adc	r29, r21
 bc8:	ec 17       	cp	r30, r28
 bca:	fd 07       	cpc	r31, r29
 bcc:	61 f4       	brne	.+24     	; 0xbe6 <free+0xbe>
 bce:	80 81       	ld	r24, Z
 bd0:	91 81       	ldd	r25, Z+1	; 0x01
 bd2:	84 0f       	add	r24, r20
 bd4:	95 1f       	adc	r25, r21
 bd6:	02 96       	adiw	r24, 0x02	; 2
 bd8:	e9 01       	movw	r28, r18
 bda:	99 83       	std	Y+1, r25	; 0x01
 bdc:	88 83       	st	Y, r24
 bde:	82 81       	ldd	r24, Z+2	; 0x02
 be0:	93 81       	ldd	r25, Z+3	; 0x03
 be2:	9b 83       	std	Y+3, r25	; 0x03
 be4:	8a 83       	std	Y+2, r24	; 0x02
 be6:	e0 e0       	ldi	r30, 0x00	; 0
 be8:	f0 e0       	ldi	r31, 0x00	; 0
 bea:	12 96       	adiw	r26, 0x02	; 2
 bec:	8d 91       	ld	r24, X+
 bee:	9c 91       	ld	r25, X
 bf0:	13 97       	sbiw	r26, 0x03	; 3
 bf2:	00 97       	sbiw	r24, 0x00	; 0
 bf4:	19 f0       	breq	.+6      	; 0xbfc <free+0xd4>
 bf6:	fd 01       	movw	r30, r26
 bf8:	dc 01       	movw	r26, r24
 bfa:	f7 cf       	rjmp	.-18     	; 0xbea <free+0xc2>
 bfc:	8d 91       	ld	r24, X+
 bfe:	9c 91       	ld	r25, X
 c00:	11 97       	sbiw	r26, 0x01	; 1
 c02:	9d 01       	movw	r18, r26
 c04:	2e 5f       	subi	r18, 0xFE	; 254
 c06:	3f 4f       	sbci	r19, 0xFF	; 255
 c08:	82 0f       	add	r24, r18
 c0a:	93 1f       	adc	r25, r19
 c0c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <__brkval>
 c10:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <__brkval+0x1>
 c14:	28 17       	cp	r18, r24
 c16:	39 07       	cpc	r19, r25
 c18:	69 f4       	brne	.+26     	; 0xc34 <free+0x10c>
 c1a:	30 97       	sbiw	r30, 0x00	; 0
 c1c:	29 f4       	brne	.+10     	; 0xc28 <free+0x100>
 c1e:	10 92 61 01 	sts	0x0161, r1	; 0x800161 <__flp+0x1>
 c22:	10 92 60 01 	sts	0x0160, r1	; 0x800160 <__flp>
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <free+0x104>
 c28:	13 82       	std	Z+3, r1	; 0x03
 c2a:	12 82       	std	Z+2, r1	; 0x02
 c2c:	b0 93 5f 01 	sts	0x015F, r27	; 0x80015f <__brkval+0x1>
 c30:	a0 93 5e 01 	sts	0x015E, r26	; 0x80015e <__brkval>
 c34:	df 91       	pop	r29
 c36:	cf 91       	pop	r28
 c38:	08 95       	ret

00000c3a <_exit>:
 c3a:	f8 94       	cli

00000c3c <__stop_program>:
 c3c:	ff cf       	rjmp	.-2      	; 0xc3c <__stop_program>
