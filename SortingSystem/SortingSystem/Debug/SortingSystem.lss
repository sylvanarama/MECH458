
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  000009e4  00000a78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003e  00800116  00800116  00000a8e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a8e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ac0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000b00  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aea  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f1c  00000000  00000000  00002732  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c6b  00000000  00000000  0000364e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000454  00000000  00000000  000042bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090a  00000000  00000000  00004710  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e17  00000000  00000000  0000501a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00005e31  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	b2 c0       	rjmp	.+356    	; 0x16a <__vector_1>
   6:	00 00       	nop
   8:	eb c0       	rjmp	.+470    	; 0x1e0 <__vector_2>
   a:	00 00       	nop
   c:	f7 c1       	rjmp	.+1006   	; 0x3fc <__vector_3>
   e:	00 00       	nop
  10:	04 c1       	rjmp	.+520    	; 0x21a <__vector_4>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	80 c0       	rjmp	.+256    	; 0x156 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	0d c1       	rjmp	.+538    	; 0x290 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e4 ee       	ldi	r30, 0xE4	; 228
  ac:	f9 e0       	ldi	r31, 0x09	; 9
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a6 31       	cpi	r26, 0x16	; 22
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a6 e1       	ldi	r26, 0x16	; 22
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a4 35       	cpi	r26, 0x54	; 84
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	29 d3       	rcall	.+1618   	; 0x722 <main>
  d0:	87 c4       	rjmp	.+2318   	; 0x9e0 <_exit>

000000d2 <__bad_interrupt>:
  d2:	21 c1       	rjmp	.+578    	; 0x316 <__vector_default>

000000d4 <initItem>:
/**************************************************************************************
* DESC: This initializes a link and returns the pointer to the new link or NULL if error 
* INPUT: the head and tail pointers by reference
*/
item* initItem(){
	item* newItem = malloc(sizeof(item));
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	62 d3       	rcall	.+1732   	; 0x79e <malloc>
  da:	fc 01       	movw	r30, r24
	newItem->next = NULL;
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
	newItem->metal = 0;
  e0:	10 82       	st	Z, r1
	newItem->reflective = 0;
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
	newItem->type = 0;
  e6:	13 82       	std	Z+3, r1	; 0x03
	newItem->stage = 0;
  e8:	14 82       	std	Z+4, r1	; 0x04
	newItem->number = 0;
  ea:	15 82       	std	Z+5, r1	; 0x05
	return newItem;
}//initLink
  ec:	08 95       	ret

000000ee <initQueue>:

queue* initQueue(){
	queue* q = malloc(sizeof(queue));
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	55 d3       	rcall	.+1706   	; 0x79e <malloc>
	q->head = NULL;	
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
	q->tail = NULL;	
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
	return q;
}//initQueue
  fe:	08 95       	ret

00000100 <enqueue>:

/****************************************************************************************
*  DESC: Accepts as input a new link by reference, and assigns the head and tail		
*  of the queue accordingly (Will put an item at the tail of the queue)		
*/
void enqueue(queue* q, item* newItem){
 100:	fc 01       	movw	r30, r24
	if (q->tail != NULL){
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
		/* Not an empty queue */
		q->tail->next = newItem;
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
		q->tail = newItem;
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
	}/*if*/
	else{
		/* It's an empty Queue */
		q->head = newItem;
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
		q->tail = newItem;
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:

/**************************************************************************************
* DESC : Removes the link from the head of the list and assigns it to deQueuedLink
* RETURNS: Pointer to the dequeued link
*/
item* dequeue(queue* q){
 122:	dc 01       	movw	r26, r24
	item* deQueuedItem = q->head;	// Will set to NULL if Head points to NULL
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
	/* Ensure it is not an empty queue */
	if (q->head != NULL){
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	71 f0       	breq	.+28     	; 0x14a <dequeue+0x28>
		q->head = q->head->next;
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
		if(q->head == NULL) q->tail = NULL; // if that was the last element in the queue, set tail to NULL as well
 138:	89 2b       	or	r24, r25
 13a:	51 f4       	brne	.+20     	; 0x150 <dequeue+0x2e>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
		return deQueuedItem;
 144:	8e 2f       	mov	r24, r30
 146:	9f 2f       	mov	r25, r31
 148:	08 95       	ret
	}/*if*/
	else return NULL;
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	08 95       	ret
	item* deQueuedItem = q->head;	// Will set to NULL if Head points to NULL
	/* Ensure it is not an empty queue */
	if (q->head != NULL){
		q->head = q->head->next;
		if(q->head == NULL) q->tail = NULL; // if that was the last element in the queue, set tail to NULL as well
		return deQueuedItem;
 150:	8e 2f       	mov	r24, r30
 152:	9f 2f       	mov	r25, r31
	}/*if*/
	else return NULL;
}/*dequeue*/
 154:	08 95       	ret

00000156 <__vector_21>:
		display_reflective_reading(avg);
		mTimer(7000);
		
		update_motor_speed(MOTOR_SPEED);
	}
}//ADC_calibrate
 156:	1f 92       	push	r1
 158:	0f 92       	push	r0
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	0f 92       	push	r0
 15e:	11 24       	eor	r1, r1
 160:	0f 90       	pop	r0
 162:	0f be       	out	0x3f, r0	; 63
 164:	0f 90       	pop	r0
 166:	1f 90       	pop	r1
 168:	18 95       	reti

0000016a <__vector_1>:
 16a:	1f 92       	push	r1
 16c:	0f 92       	push	r0
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	0f 92       	push	r0
 172:	11 24       	eor	r1, r1
 174:	0b b6       	in	r0, 0x3b	; 59
 176:	0f 92       	push	r0
 178:	2f 93       	push	r18
 17a:	3f 93       	push	r19
 17c:	4f 93       	push	r20
 17e:	5f 93       	push	r21
 180:	6f 93       	push	r22
 182:	7f 93       	push	r23
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	af 93       	push	r26
 18a:	bf 93       	push	r27
 18c:	ef 93       	push	r30
 18e:	ff 93       	push	r31
 190:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <item_number>
 194:	8f 5f       	subi	r24, 0xFF	; 255
 196:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <item_number>
 19a:	9c df       	rcall	.-200    	; 0xd4 <initItem>
 19c:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <item_number>
 1a0:	fc 01       	movw	r30, r24
 1a2:	25 83       	std	Z+5, r18	; 0x05
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	24 83       	std	Z+4, r18	; 0x04
 1a8:	bc 01       	movw	r22, r24
 1aa:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <entryList>
 1ae:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <entryList+0x1>
 1b2:	a6 df       	rcall	.-180    	; 0x100 <enqueue>
 1b4:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <item_number>
 1b8:	88 b9       	out	0x08, r24	; 8
 1ba:	ff 91       	pop	r31
 1bc:	ef 91       	pop	r30
 1be:	bf 91       	pop	r27
 1c0:	af 91       	pop	r26
 1c2:	9f 91       	pop	r25
 1c4:	8f 91       	pop	r24
 1c6:	7f 91       	pop	r23
 1c8:	6f 91       	pop	r22
 1ca:	5f 91       	pop	r21
 1cc:	4f 91       	pop	r20
 1ce:	3f 91       	pop	r19
 1d0:	2f 91       	pop	r18
 1d2:	0f 90       	pop	r0
 1d4:	0b be       	out	0x3b, r0	; 59
 1d6:	0f 90       	pop	r0
 1d8:	0f be       	out	0x3f, r0	; 63
 1da:	0f 90       	pop	r0
 1dc:	1f 90       	pop	r1
 1de:	18 95       	reti

000001e0 <__vector_2>:
 1e0:	1f 92       	push	r1
 1e2:	0f 92       	push	r0
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	0f 92       	push	r0
 1e8:	11 24       	eor	r1, r1
 1ea:	0b b6       	in	r0, 0x3b	; 59
 1ec:	0f 92       	push	r0
 1ee:	8f 93       	push	r24
 1f0:	ef 93       	push	r30
 1f2:	ff 93       	push	r31
 1f4:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <entryList>
 1f8:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <entryList+0x1>
 1fc:	02 80       	ldd	r0, Z+2	; 0x02
 1fe:	f3 81       	ldd	r31, Z+3	; 0x03
 200:	e0 2d       	mov	r30, r0
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	80 83       	st	Z, r24
 206:	ff 91       	pop	r31
 208:	ef 91       	pop	r30
 20a:	8f 91       	pop	r24
 20c:	0f 90       	pop	r0
 20e:	0b be       	out	0x3b, r0	; 59
 210:	0f 90       	pop	r0
 212:	0f be       	out	0x3f, r0	; 63
 214:	0f 90       	pop	r0
 216:	1f 90       	pop	r1
 218:	18 95       	reti

0000021a <__vector_4>:
 21a:	1f 92       	push	r1
 21c:	0f 92       	push	r0
 21e:	0f b6       	in	r0, 0x3f	; 63
 220:	0f 92       	push	r0
 222:	11 24       	eor	r1, r1
 224:	0b b6       	in	r0, 0x3b	; 59
 226:	0f 92       	push	r0
 228:	2f 93       	push	r18
 22a:	3f 93       	push	r19
 22c:	4f 93       	push	r20
 22e:	5f 93       	push	r21
 230:	6f 93       	push	r22
 232:	7f 93       	push	r23
 234:	8f 93       	push	r24
 236:	9f 93       	push	r25
 238:	af 93       	push	r26
 23a:	bf 93       	push	r27
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31
 240:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <stepper_on>
 244:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <stepper_on+0x1>
 248:	89 2b       	or	r24, r25
 24a:	21 f0       	breq	.+8      	; 0x254 <__vector_4+0x3a>
 24c:	17 bc       	out	0x27, r1	; 39
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <item_waiting>
 254:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <classifiedList>
 258:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <classifiedList+0x1>
 25c:	62 df       	rcall	.-316    	; 0x122 <dequeue>
 25e:	bc 01       	movw	r22, r24
 260:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <sortedList>
 264:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <sortedList+0x1>
 268:	4b df       	rcall	.-362    	; 0x100 <enqueue>
 26a:	ff 91       	pop	r31
 26c:	ef 91       	pop	r30
 26e:	bf 91       	pop	r27
 270:	af 91       	pop	r26
 272:	9f 91       	pop	r25
 274:	8f 91       	pop	r24
 276:	7f 91       	pop	r23
 278:	6f 91       	pop	r22
 27a:	5f 91       	pop	r21
 27c:	4f 91       	pop	r20
 27e:	3f 91       	pop	r19
 280:	2f 91       	pop	r18
 282:	0f 90       	pop	r0
 284:	0b be       	out	0x3b, r0	; 59
 286:	0f 90       	pop	r0
 288:	0f be       	out	0x3f, r0	; 63
 28a:	0f 90       	pop	r0
 28c:	1f 90       	pop	r1
 28e:	18 95       	reti

00000290 <__vector_29>:
 290:	1f 92       	push	r1
 292:	0f 92       	push	r0
 294:	0f b6       	in	r0, 0x3f	; 63
 296:	0f 92       	push	r0
 298:	11 24       	eor	r1, r1
 29a:	0b b6       	in	r0, 0x3b	; 59
 29c:	0f 92       	push	r0
 29e:	2f 93       	push	r18
 2a0:	3f 93       	push	r19
 2a2:	8f 93       	push	r24
 2a4:	9f 93       	push	r25
 2a6:	ef 93       	push	r30
 2a8:	ff 93       	push	r31
 2aa:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <reflective_present>
 2ae:	88 23       	and	r24, r24
 2b0:	29 f1       	breq	.+74     	; 0x2fc <__vector_29+0x6c>
 2b2:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	98 2f       	mov	r25, r24
 2be:	88 27       	eor	r24, r24
 2c0:	82 0f       	add	r24, r18
 2c2:	91 1d       	adc	r25, r1
 2c4:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <ADC_result+0x1>
 2c8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <ADC_result>
 2cc:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <ADC_result>
 2d0:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <ADC_result+0x1>
 2d4:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <ADC_lowest_val>
 2d8:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <ADC_lowest_val+0x1>
 2dc:	28 17       	cp	r18, r24
 2de:	39 07       	cpc	r19, r25
 2e0:	40 f4       	brcc	.+16     	; 0x2f2 <__vector_29+0x62>
 2e2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <ADC_result>
 2e6:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <ADC_result+0x1>
 2ea:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <ADC_lowest_val+0x1>
 2ee:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <ADC_lowest_val>
 2f2:	ea e7       	ldi	r30, 0x7A	; 122
 2f4:	f0 e0       	ldi	r31, 0x00	; 0
 2f6:	80 81       	ld	r24, Z
 2f8:	80 64       	ori	r24, 0x40	; 64
 2fa:	80 83       	st	Z, r24
 2fc:	ff 91       	pop	r31
 2fe:	ef 91       	pop	r30
 300:	9f 91       	pop	r25
 302:	8f 91       	pop	r24
 304:	3f 91       	pop	r19
 306:	2f 91       	pop	r18
 308:	0f 90       	pop	r0
 30a:	0b be       	out	0x3b, r0	; 59
 30c:	0f 90       	pop	r0
 30e:	0f be       	out	0x3f, r0	; 63
 310:	0f 90       	pop	r0
 312:	1f 90       	pop	r1
 314:	18 95       	reti

00000316 <__vector_default>:
 316:	1f 92       	push	r1
 318:	0f 92       	push	r0
 31a:	0f b6       	in	r0, 0x3f	; 63
 31c:	0f 92       	push	r0
 31e:	11 24       	eor	r1, r1
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <init_interrupts>:
 32a:	8a e9       	ldi	r24, 0x9A	; 154
 32c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 330:	8d b3       	in	r24, 0x1d	; 29
 332:	8f 60       	ori	r24, 0x0F	; 15
 334:	8d bb       	out	0x1d, r24	; 29
 336:	08 95       	ret

00000338 <init_timer0_pwm>:
 338:	84 b5       	in	r24, 0x24	; 36
 33a:	83 68       	ori	r24, 0x83	; 131
 33c:	84 bd       	out	0x24, r24	; 36
 33e:	85 b5       	in	r24, 0x25	; 37
 340:	82 60       	ori	r24, 0x02	; 2
 342:	85 bd       	out	0x25, r24	; 37
 344:	80 e8       	ldi	r24, 0x80	; 128
 346:	87 bd       	out	0x27, r24	; 39
 348:	08 95       	ret

0000034a <init_motor>:
 34a:	84 e0       	ldi	r24, 0x04	; 4
 34c:	85 b9       	out	0x05, r24	; 5
 34e:	80 e7       	ldi	r24, 0x70	; 112
 350:	87 bd       	out	0x27, r24	; 39
 352:	08 95       	ret

00000354 <init_ADC>:
 354:	8f ef       	ldi	r24, 0xFF	; 255
 356:	93 e0       	ldi	r25, 0x03	; 3
 358:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <ADC_result+0x1>
 35c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <ADC_result>
 360:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <ADC_lowest_val+0x1>
 364:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <ADC_lowest_val>
 368:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <reflective_present>
 36c:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <item_ready>
 370:	ec e7       	ldi	r30, 0x7C	; 124
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	80 81       	ld	r24, Z
 376:	80 64       	ori	r24, 0x40	; 64
 378:	80 83       	st	Z, r24
 37a:	ea e7       	ldi	r30, 0x7A	; 122
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	80 81       	ld	r24, Z
 380:	82 60       	ori	r24, 0x02	; 2
 382:	80 83       	st	Z, r24
 384:	80 81       	ld	r24, Z
 386:	81 60       	ori	r24, 0x01	; 1
 388:	80 83       	st	Z, r24
 38a:	80 81       	ld	r24, Z
 38c:	88 60       	ori	r24, 0x08	; 8
 38e:	80 83       	st	Z, r24
 390:	80 81       	ld	r24, Z
 392:	80 68       	ori	r24, 0x80	; 128
 394:	80 83       	st	Z, r24
 396:	08 95       	ret

00000398 <init_stepper>:
 398:	8f ef       	ldi	r24, 0xFF	; 255
 39a:	81 b9       	out	0x01, r24	; 1
 39c:	85 e3       	ldi	r24, 0x35	; 53
 39e:	82 b9       	out	0x02, r24	; 2
 3a0:	81 e0       	ldi	r24, 0x01	; 1
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <motor_position+0x1>
 3a8:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <motor_position>
 3ac:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <stepper_on+0x1>
 3b0:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <stepper_on>
 3b4:	08 95       	ret

000003b6 <mTimer>:
 3b6:	ac 01       	movw	r20, r24
 3b8:	e1 e8       	ldi	r30, 0x81	; 129
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	90 81       	ld	r25, Z
 3be:	91 60       	ori	r25, 0x01	; 1
 3c0:	90 83       	st	Z, r25
 3c2:	90 81       	ld	r25, Z
 3c4:	98 60       	ori	r25, 0x08	; 8
 3c6:	90 83       	st	Z, r25
 3c8:	88 ee       	ldi	r24, 0xE8	; 232
 3ca:	93 e0       	ldi	r25, 0x03	; 3
 3cc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 3d0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 3d4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 3d8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 3dc:	b1 9a       	sbi	0x16, 1	; 22
 3de:	20 e0       	ldi	r18, 0x00	; 0
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <mTimer+0x38>
 3e4:	b1 9b       	sbis	0x16, 1	; 22
 3e6:	fe cf       	rjmp	.-4      	; 0x3e4 <mTimer+0x2e>
 3e8:	b1 9a       	sbi	0x16, 1	; 22
 3ea:	2f 5f       	subi	r18, 0xFF	; 255
 3ec:	3f 4f       	sbci	r19, 0xFF	; 255
 3ee:	24 17       	cp	r18, r20
 3f0:	35 07       	cpc	r19, r21
 3f2:	1c f4       	brge	.+6      	; 0x3fa <mTimer+0x44>
 3f4:	b1 9b       	sbis	0x16, 1	; 22
 3f6:	f6 cf       	rjmp	.-20     	; 0x3e4 <mTimer+0x2e>
 3f8:	f7 cf       	rjmp	.-18     	; 0x3e8 <mTimer+0x32>
 3fa:	08 95       	ret

000003fc <__vector_3>:
 3fc:	1f 92       	push	r1
 3fe:	0f 92       	push	r0
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	0f 92       	push	r0
 404:	11 24       	eor	r1, r1
 406:	0b b6       	in	r0, 0x3b	; 59
 408:	0f 92       	push	r0
 40a:	2f 93       	push	r18
 40c:	3f 93       	push	r19
 40e:	4f 93       	push	r20
 410:	5f 93       	push	r21
 412:	6f 93       	push	r22
 414:	7f 93       	push	r23
 416:	8f 93       	push	r24
 418:	9f 93       	push	r25
 41a:	af 93       	push	r26
 41c:	bf 93       	push	r27
 41e:	ef 93       	push	r30
 420:	ff 93       	push	r31
 422:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <reflective_present>
 426:	88 23       	and	r24, r24
 428:	09 f4       	brne	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	46 c0       	rjmp	.+140    	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 42c:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <STATE>
 430:	82 30       	cpi	r24, 0x02	; 2
 432:	b1 f5       	brne	.+108    	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 434:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <next_item.1876>
 438:	8f 5f       	subi	r24, 0xFF	; 255
 43a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <next_item.1876>
 43e:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <entryList>
 442:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <entryList+0x1>
 446:	01 90       	ld	r0, Z+
 448:	f0 81       	ld	r31, Z
 44a:	e0 2d       	mov	r30, r0
 44c:	95 81       	ldd	r25, Z+5	; 0x05
 44e:	89 17       	cp	r24, r25
 450:	99 f0       	breq	.+38     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 452:	17 bc       	out	0x27, r1	; 39
 454:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <next_item.1876>
 458:	88 b9       	out	0x08, r24	; 8
 45a:	80 ed       	ldi	r24, 0xD0	; 208
 45c:	97 e0       	ldi	r25, 0x07	; 7
 45e:	ab df       	rcall	.-170    	; 0x3b6 <mTimer>
 460:	e0 91 4c 01 	lds	r30, 0x014C	; 0x80014c <entryList>
 464:	f0 91 4d 01 	lds	r31, 0x014D	; 0x80014d <entryList+0x1>
 468:	01 90       	ld	r0, Z+
 46a:	f0 81       	ld	r31, Z
 46c:	e0 2d       	mov	r30, r0
 46e:	85 81       	ldd	r24, Z+5	; 0x05
 470:	88 b9       	out	0x08, r24	; 8
 472:	80 ed       	ldi	r24, 0xD0	; 208
 474:	97 e0       	ldi	r25, 0x07	; 7
 476:	9f df       	rcall	.-194    	; 0x3b6 <mTimer>
 478:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <entryList>
 47c:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <entryList+0x1>
 480:	50 de       	rcall	.-864    	; 0x122 <dequeue>
 482:	20 91 4e 01 	lds	r18, 0x014E	; 0x80014e <ADC_lowest_val>
 486:	30 91 4f 01 	lds	r19, 0x014F	; 0x80014f <ADC_lowest_val+0x1>
 48a:	fc 01       	movw	r30, r24
 48c:	32 83       	std	Z+2, r19	; 0x02
 48e:	21 83       	std	Z+1, r18	; 0x01
 490:	22 e0       	ldi	r18, 0x02	; 2
 492:	24 83       	std	Z+4, r18	; 0x04
 494:	bc 01       	movw	r22, r24
 496:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <reflectiveList>
 49a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <reflectiveList+0x1>
 49e:	30 de       	rcall	.-928    	; 0x100 <enqueue>
 4a0:	8f ef       	ldi	r24, 0xFF	; 255
 4a2:	93 e0       	ldi	r25, 0x03	; 3
 4a4:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <ADC_lowest_val+0x1>
 4a8:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <ADC_lowest_val>
 4ac:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <reflective_present>
 4b0:	81 e0       	ldi	r24, 0x01	; 1
 4b2:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <item_ready>
 4b6:	08 c0       	rjmp	.+16     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <reflective_present>
 4be:	ea e7       	ldi	r30, 0x7A	; 122
 4c0:	f0 e0       	ldi	r31, 0x00	; 0
 4c2:	80 81       	ld	r24, Z
 4c4:	80 64       	ori	r24, 0x40	; 64
 4c6:	80 83       	st	Z, r24
 4c8:	ff 91       	pop	r31
 4ca:	ef 91       	pop	r30
 4cc:	bf 91       	pop	r27
 4ce:	af 91       	pop	r26
 4d0:	9f 91       	pop	r25
 4d2:	8f 91       	pop	r24
 4d4:	7f 91       	pop	r23
 4d6:	6f 91       	pop	r22
 4d8:	5f 91       	pop	r21
 4da:	4f 91       	pop	r20
 4dc:	3f 91       	pop	r19
 4de:	2f 91       	pop	r18
 4e0:	0f 90       	pop	r0
 4e2:	0b be       	out	0x3b, r0	; 59
 4e4:	0f 90       	pop	r0
 4e6:	0f be       	out	0x3f, r0	; 63
 4e8:	0f 90       	pop	r0
 4ea:	1f 90       	pop	r1
 4ec:	18 95       	reti

000004ee <stepper_rotate>:
 4ee:	cf 92       	push	r12
 4f0:	df 92       	push	r13
 4f2:	ef 92       	push	r14
 4f4:	ff 92       	push	r15
 4f6:	0f 93       	push	r16
 4f8:	1f 93       	push	r17
 4fa:	cf 93       	push	r28
 4fc:	df 93       	push	r29
 4fe:	18 16       	cp	r1, r24
 500:	19 06       	cpc	r1, r25
 502:	0c f0       	brlt	.+2      	; 0x506 <stepper_rotate+0x18>
 504:	61 c0       	rjmp	.+194    	; 0x5c8 <stepper_rotate+0xda>
 506:	6b 01       	movw	r12, r22
 508:	8c 01       	movw	r16, r24
 50a:	c0 e0       	ldi	r28, 0x00	; 0
 50c:	d0 e0       	ldi	r29, 0x00	; 0
 50e:	0f 2e       	mov	r0, r31
 510:	f2 e1       	ldi	r31, 0x12	; 18
 512:	ef 2e       	mov	r14, r31
 514:	f1 2c       	mov	r15, r1
 516:	f0 2d       	mov	r31, r0
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	c8 16       	cp	r12, r24
 51c:	d1 04       	cpc	r13, r1
 51e:	d1 f4       	brne	.+52     	; 0x554 <stepper_rotate+0x66>
 520:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end>
 524:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x1>
 528:	e6 5f       	subi	r30, 0xF6	; 246
 52a:	fe 4f       	sbci	r31, 0xFE	; 254
 52c:	80 81       	ld	r24, Z
 52e:	82 b9       	out	0x02, r24	; 2
 530:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 534:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 538:	01 96       	adiw	r24, 0x01	; 1
 53a:	83 70       	andi	r24, 0x03	; 3
 53c:	90 78       	andi	r25, 0x80	; 128
 53e:	99 23       	and	r25, r25
 540:	24 f4       	brge	.+8      	; 0x54a <stepper_rotate+0x5c>
 542:	01 97       	sbiw	r24, 0x01	; 1
 544:	8c 6f       	ori	r24, 0xFC	; 252
 546:	9f 6f       	ori	r25, 0xFF	; 255
 548:	01 96       	adiw	r24, 0x01	; 1
 54a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 54e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 552:	1d c0       	rjmp	.+58     	; 0x58e <stepper_rotate+0xa0>
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	c8 16       	cp	r12, r24
 558:	d8 06       	cpc	r13, r24
 55a:	c9 f4       	brne	.+50     	; 0x58e <stepper_rotate+0xa0>
 55c:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end>
 560:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x1>
 564:	ea 5f       	subi	r30, 0xFA	; 250
 566:	fe 4f       	sbci	r31, 0xFE	; 254
 568:	80 81       	ld	r24, Z
 56a:	82 b9       	out	0x02, r24	; 2
 56c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 570:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 574:	01 96       	adiw	r24, 0x01	; 1
 576:	83 70       	andi	r24, 0x03	; 3
 578:	90 78       	andi	r25, 0x80	; 128
 57a:	99 23       	and	r25, r25
 57c:	24 f4       	brge	.+8      	; 0x586 <stepper_rotate+0x98>
 57e:	01 97       	sbiw	r24, 0x01	; 1
 580:	8c 6f       	ori	r24, 0xFC	; 252
 582:	9f 6f       	ori	r25, 0xFF	; 255
 584:	01 96       	adiw	r24, 0x01	; 1
 586:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 58a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 58e:	c7 01       	movw	r24, r14
 590:	12 df       	rcall	.-476    	; 0x3b6 <mTimer>
 592:	c5 30       	cpi	r28, 0x05	; 5
 594:	d1 05       	cpc	r29, r1
 596:	3c f4       	brge	.+14     	; 0x5a6 <stepper_rotate+0xb8>
 598:	88 e0       	ldi	r24, 0x08	; 8
 59a:	e8 16       	cp	r14, r24
 59c:	f1 04       	cpc	r15, r1
 59e:	1c f0       	brlt	.+6      	; 0x5a6 <stepper_rotate+0xb8>
 5a0:	82 e0       	ldi	r24, 0x02	; 2
 5a2:	e8 1a       	sub	r14, r24
 5a4:	f1 08       	sbc	r15, r1
 5a6:	c8 01       	movw	r24, r16
 5a8:	8c 1b       	sub	r24, r28
 5aa:	9d 0b       	sbc	r25, r29
 5ac:	06 97       	sbiw	r24, 0x06	; 6
 5ae:	3c f4       	brge	.+14     	; 0x5be <stepper_rotate+0xd0>
 5b0:	83 e1       	ldi	r24, 0x13	; 19
 5b2:	e8 16       	cp	r14, r24
 5b4:	f1 04       	cpc	r15, r1
 5b6:	1c f4       	brge	.+6      	; 0x5be <stepper_rotate+0xd0>
 5b8:	82 e0       	ldi	r24, 0x02	; 2
 5ba:	e8 0e       	add	r14, r24
 5bc:	f1 1c       	adc	r15, r1
 5be:	21 96       	adiw	r28, 0x01	; 1
 5c0:	0c 17       	cp	r16, r28
 5c2:	1d 07       	cpc	r17, r29
 5c4:	09 f0       	breq	.+2      	; 0x5c8 <stepper_rotate+0xda>
 5c6:	a8 cf       	rjmp	.-176    	; 0x518 <stepper_rotate+0x2a>
 5c8:	df 91       	pop	r29
 5ca:	cf 91       	pop	r28
 5cc:	1f 91       	pop	r17
 5ce:	0f 91       	pop	r16
 5d0:	ff 90       	pop	r15
 5d2:	ef 90       	pop	r14
 5d4:	df 90       	pop	r13
 5d6:	cf 90       	pop	r12
 5d8:	08 95       	ret

000005da <stepper_position>:
 5da:	cf 93       	push	r28
 5dc:	df 93       	push	r29
 5de:	21 e0       	ldi	r18, 0x01	; 1
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	30 93 49 01 	sts	0x0149, r19	; 0x800149 <stepper_on+0x1>
 5e6:	20 93 48 01 	sts	0x0148, r18	; 0x800148 <stepper_on>
 5ea:	c8 2f       	mov	r28, r24
 5ec:	d0 e0       	ldi	r29, 0x00	; 0
 5ee:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <motor_position>
 5f2:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <motor_position+0x1>
 5f6:	9e 01       	movw	r18, r28
 5f8:	28 1b       	sub	r18, r24
 5fa:	39 0b       	sbc	r19, r25
 5fc:	c9 01       	movw	r24, r18
 5fe:	21 30       	cpi	r18, 0x01	; 1
 600:	31 05       	cpc	r19, r1
 602:	21 f0       	breq	.+8      	; 0x60c <stepper_position+0x32>
 604:	8d 3f       	cpi	r24, 0xFD	; 253
 606:	3f ef       	ldi	r19, 0xFF	; 255
 608:	93 07       	cpc	r25, r19
 60a:	31 f4       	brne	.+12     	; 0x618 <stepper_position+0x3e>
 60c:	61 e0       	ldi	r22, 0x01	; 1
 60e:	70 e0       	ldi	r23, 0x00	; 0
 610:	82 e3       	ldi	r24, 0x32	; 50
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	6c df       	rcall	.-296    	; 0x4ee <stepper_rotate>
 616:	17 c0       	rjmp	.+46     	; 0x646 <stepper_position+0x6c>
 618:	8f 3f       	cpi	r24, 0xFF	; 255
 61a:	2f ef       	ldi	r18, 0xFF	; 255
 61c:	92 07       	cpc	r25, r18
 61e:	19 f0       	breq	.+6      	; 0x626 <stepper_position+0x4c>
 620:	83 30       	cpi	r24, 0x03	; 3
 622:	91 05       	cpc	r25, r1
 624:	31 f4       	brne	.+12     	; 0x632 <stepper_position+0x58>
 626:	6f ef       	ldi	r22, 0xFF	; 255
 628:	7f ef       	ldi	r23, 0xFF	; 255
 62a:	82 e3       	ldi	r24, 0x32	; 50
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	5f df       	rcall	.-322    	; 0x4ee <stepper_rotate>
 630:	0a c0       	rjmp	.+20     	; 0x646 <stepper_position+0x6c>
 632:	82 30       	cpi	r24, 0x02	; 2
 634:	91 05       	cpc	r25, r1
 636:	11 f0       	breq	.+4      	; 0x63c <stepper_position+0x62>
 638:	02 96       	adiw	r24, 0x02	; 2
 63a:	29 f4       	brne	.+10     	; 0x646 <stepper_position+0x6c>
 63c:	61 e0       	ldi	r22, 0x01	; 1
 63e:	70 e0       	ldi	r23, 0x00	; 0
 640:	84 e6       	ldi	r24, 0x64	; 100
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	54 df       	rcall	.-344    	; 0x4ee <stepper_rotate>
 646:	d0 93 1f 01 	sts	0x011F, r29	; 0x80011f <motor_position+0x1>
 64a:	c0 93 1e 01 	sts	0x011E, r28	; 0x80011e <motor_position>
 64e:	10 92 49 01 	sts	0x0149, r1	; 0x800149 <stepper_on+0x1>
 652:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <stepper_on>
 656:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <item_waiting>
 65a:	88 23       	and	r24, r24
 65c:	21 f0       	breq	.+8      	; 0x666 <stepper_position+0x8c>
 65e:	80 e7       	ldi	r24, 0x70	; 112
 660:	87 bd       	out	0x27, r24	; 39
 662:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <item_waiting>
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	08 95       	ret

0000066c <classify_item>:
 66c:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <reflectiveList>
 670:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <reflectiveList+0x1>
 674:	56 dd       	rcall	.-1364   	; 0x122 <dequeue>
 676:	fc 01       	movw	r30, r24
 678:	81 81       	ldd	r24, Z+1	; 0x01
 67a:	92 81       	ldd	r25, Z+2	; 0x02
 67c:	20 81       	ld	r18, Z
 67e:	21 11       	cpse	r18, r1
 680:	1f c0       	rjmp	.+62     	; 0x6c0 <classify_item+0x54>
 682:	ae e0       	ldi	r26, 0x0E	; 14
 684:	b1 e0       	ldi	r27, 0x01	; 1
 686:	4d 91       	ld	r20, X+
 688:	5c 91       	ld	r21, X
 68a:	11 97       	sbiw	r26, 0x01	; 1
 68c:	12 96       	adiw	r26, 0x02	; 2
 68e:	2d 91       	ld	r18, X+
 690:	3c 91       	ld	r19, X
 692:	13 97       	sbiw	r26, 0x03	; 3
 694:	48 1b       	sub	r20, r24
 696:	59 0b       	sbc	r21, r25
 698:	ba 01       	movw	r22, r20
 69a:	22 f4       	brpl	.+8      	; 0x6a4 <classify_item+0x38>
 69c:	66 27       	eor	r22, r22
 69e:	77 27       	eor	r23, r23
 6a0:	64 1b       	sub	r22, r20
 6a2:	75 0b       	sbc	r23, r21
 6a4:	a9 01       	movw	r20, r18
 6a6:	48 1b       	sub	r20, r24
 6a8:	59 0b       	sbc	r21, r25
 6aa:	9a 01       	movw	r18, r20
 6ac:	22 f4       	brpl	.+8      	; 0x6b6 <classify_item+0x4a>
 6ae:	22 27       	eor	r18, r18
 6b0:	33 27       	eor	r19, r19
 6b2:	24 1b       	sub	r18, r20
 6b4:	35 0b       	sbc	r19, r21
 6b6:	62 17       	cp	r22, r18
 6b8:	73 07       	cpc	r23, r19
 6ba:	88 f1       	brcs	.+98     	; 0x71e <classify_item+0xb2>
 6bc:	82 e0       	ldi	r24, 0x02	; 2
 6be:	25 c0       	rjmp	.+74     	; 0x70a <classify_item+0x9e>
 6c0:	21 30       	cpi	r18, 0x01	; 1
 6c2:	01 f5       	brne	.+64     	; 0x704 <classify_item+0x98>
 6c4:	ae e0       	ldi	r26, 0x0E	; 14
 6c6:	b1 e0       	ldi	r27, 0x01	; 1
 6c8:	14 96       	adiw	r26, 0x04	; 4
 6ca:	4d 91       	ld	r20, X+
 6cc:	5c 91       	ld	r21, X
 6ce:	15 97       	sbiw	r26, 0x05	; 5
 6d0:	16 96       	adiw	r26, 0x06	; 6
 6d2:	2d 91       	ld	r18, X+
 6d4:	3c 91       	ld	r19, X
 6d6:	17 97       	sbiw	r26, 0x07	; 7
 6d8:	48 1b       	sub	r20, r24
 6da:	59 0b       	sbc	r21, r25
 6dc:	ba 01       	movw	r22, r20
 6de:	22 f4       	brpl	.+8      	; 0x6e8 <classify_item+0x7c>
 6e0:	66 27       	eor	r22, r22
 6e2:	77 27       	eor	r23, r23
 6e4:	64 1b       	sub	r22, r20
 6e6:	75 0b       	sbc	r23, r21
 6e8:	a9 01       	movw	r20, r18
 6ea:	48 1b       	sub	r20, r24
 6ec:	59 0b       	sbc	r21, r25
 6ee:	9a 01       	movw	r18, r20
 6f0:	22 f4       	brpl	.+8      	; 0x6fa <classify_item+0x8e>
 6f2:	22 27       	eor	r18, r18
 6f4:	33 27       	eor	r19, r19
 6f6:	24 1b       	sub	r18, r20
 6f8:	35 0b       	sbc	r19, r21
 6fa:	62 17       	cp	r22, r18
 6fc:	73 07       	cpc	r23, r19
 6fe:	20 f0       	brcs	.+8      	; 0x708 <classify_item+0x9c>
 700:	81 e0       	ldi	r24, 0x01	; 1
 702:	03 c0       	rjmp	.+6      	; 0x70a <classify_item+0x9e>
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	01 c0       	rjmp	.+2      	; 0x70a <classify_item+0x9e>
 708:	83 e0       	ldi	r24, 0x03	; 3
 70a:	83 83       	std	Z+3, r24	; 0x03
 70c:	83 e0       	ldi	r24, 0x03	; 3
 70e:	84 83       	std	Z+4, r24	; 0x04
 710:	bf 01       	movw	r22, r30
 712:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <classifiedList>
 716:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <classifiedList+0x1>
 71a:	f2 cc       	rjmp	.-1564   	; 0x100 <enqueue>
 71c:	08 95       	ret
 71e:	80 e0       	ldi	r24, 0x00	; 0
 720:	f4 cf       	rjmp	.-24     	; 0x70a <classify_item+0x9e>

00000722 <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 722:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal
 724:	8f e8       	ldi	r24, 0x8F	; 143
 726:	84 b9       	out	0x04, r24	; 4
						// PB3:0 = output for motor
	DDRC = 0xFF;		// Port C all output (LEDs)
 728:	8f ef       	ldi	r24, 0xFF	; 255
 72a:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 72c:	80 ef       	ldi	r24, 0xF0	; 240
 72e:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 730:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 732:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 734:	18 b8       	out	0x08, r1	; 8
	
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
 736:	f8 94       	cli
 738:	0d de       	rcall	.-998    	; 0x354 <init_ADC>
 73a:	fe dd       	rcall	.-1028   	; 0x338 <init_timer0_pwm>
 73c:	06 de       	rcall	.-1012   	; 0x34a <init_motor>
 73e:	f5 dd       	rcall	.-1046   	; 0x32a <init_interrupts>
 740:	2b de       	rcall	.-938    	; 0x398 <init_stepper>
 742:	78 94       	sei
 744:	d4 dc       	rcall	.-1624   	; 0xee <initQueue>
 746:	90 93 4d 01 	sts	0x014D, r25	; 0x80014d <entryList+0x1>
 74a:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <entryList>
 74e:	cf dc       	rcall	.-1634   	; 0xee <initQueue>
 750:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <reflectiveList+0x1>
 754:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <reflectiveList>
 758:	ca dc       	rcall	.-1644   	; 0xee <initQueue>
 75a:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <classifiedList+0x1>
 75e:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <classifiedList>
 762:	c5 dc       	rcall	.-1654   	; 0xee <initQueue>
 764:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <sortedList+0x1>
 768:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <sortedList>
 76c:	82 e0       	ldi	r24, 0x02	; 2
 76e:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <STATE>
 772:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <item_waiting>
 776:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <item_number>
 77a:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <item_ready>
 77e:	88 23       	and	r24, r24
 780:	e1 f3       	breq	.-8      	; 0x77a <main+0x58>
 782:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <item_ready>
 786:	72 df       	rcall	.-284    	; 0x66c <classify_item>
 788:	e0 91 4a 01 	lds	r30, 0x014A	; 0x80014a <classifiedList>
 78c:	f0 91 4b 01 	lds	r31, 0x014B	; 0x80014b <classifiedList+0x1>
 790:	01 90       	ld	r0, Z+
 792:	f0 81       	ld	r31, Z
 794:	e0 2d       	mov	r30, r0
 796:	83 81       	ldd	r24, Z+3	; 0x03
 798:	8f 5f       	subi	r24, 0xFF	; 255
 79a:	1f df       	rcall	.-450    	; 0x5da <stepper_position>
 79c:	ee cf       	rjmp	.-36     	; 0x77a <main+0x58>

0000079e <malloc>:
 79e:	0f 93       	push	r16
 7a0:	1f 93       	push	r17
 7a2:	cf 93       	push	r28
 7a4:	df 93       	push	r29
 7a6:	82 30       	cpi	r24, 0x02	; 2
 7a8:	91 05       	cpc	r25, r1
 7aa:	10 f4       	brcc	.+4      	; 0x7b0 <malloc+0x12>
 7ac:	82 e0       	ldi	r24, 0x02	; 2
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	e0 91 52 01 	lds	r30, 0x0152	; 0x800152 <__flp>
 7b4:	f0 91 53 01 	lds	r31, 0x0153	; 0x800153 <__flp+0x1>
 7b8:	20 e0       	ldi	r18, 0x00	; 0
 7ba:	30 e0       	ldi	r19, 0x00	; 0
 7bc:	a0 e0       	ldi	r26, 0x00	; 0
 7be:	b0 e0       	ldi	r27, 0x00	; 0
 7c0:	30 97       	sbiw	r30, 0x00	; 0
 7c2:	19 f1       	breq	.+70     	; 0x80a <malloc+0x6c>
 7c4:	40 81       	ld	r20, Z
 7c6:	51 81       	ldd	r21, Z+1	; 0x01
 7c8:	02 81       	ldd	r16, Z+2	; 0x02
 7ca:	13 81       	ldd	r17, Z+3	; 0x03
 7cc:	48 17       	cp	r20, r24
 7ce:	59 07       	cpc	r21, r25
 7d0:	c8 f0       	brcs	.+50     	; 0x804 <malloc+0x66>
 7d2:	84 17       	cp	r24, r20
 7d4:	95 07       	cpc	r25, r21
 7d6:	69 f4       	brne	.+26     	; 0x7f2 <malloc+0x54>
 7d8:	10 97       	sbiw	r26, 0x00	; 0
 7da:	31 f0       	breq	.+12     	; 0x7e8 <malloc+0x4a>
 7dc:	12 96       	adiw	r26, 0x02	; 2
 7de:	0c 93       	st	X, r16
 7e0:	12 97       	sbiw	r26, 0x02	; 2
 7e2:	13 96       	adiw	r26, 0x03	; 3
 7e4:	1c 93       	st	X, r17
 7e6:	27 c0       	rjmp	.+78     	; 0x836 <malloc+0x98>
 7e8:	00 93 52 01 	sts	0x0152, r16	; 0x800152 <__flp>
 7ec:	10 93 53 01 	sts	0x0153, r17	; 0x800153 <__flp+0x1>
 7f0:	22 c0       	rjmp	.+68     	; 0x836 <malloc+0x98>
 7f2:	21 15       	cp	r18, r1
 7f4:	31 05       	cpc	r19, r1
 7f6:	19 f0       	breq	.+6      	; 0x7fe <malloc+0x60>
 7f8:	42 17       	cp	r20, r18
 7fa:	53 07       	cpc	r21, r19
 7fc:	18 f4       	brcc	.+6      	; 0x804 <malloc+0x66>
 7fe:	9a 01       	movw	r18, r20
 800:	bd 01       	movw	r22, r26
 802:	ef 01       	movw	r28, r30
 804:	df 01       	movw	r26, r30
 806:	f8 01       	movw	r30, r16
 808:	db cf       	rjmp	.-74     	; 0x7c0 <malloc+0x22>
 80a:	21 15       	cp	r18, r1
 80c:	31 05       	cpc	r19, r1
 80e:	f9 f0       	breq	.+62     	; 0x84e <malloc+0xb0>
 810:	28 1b       	sub	r18, r24
 812:	39 0b       	sbc	r19, r25
 814:	24 30       	cpi	r18, 0x04	; 4
 816:	31 05       	cpc	r19, r1
 818:	80 f4       	brcc	.+32     	; 0x83a <malloc+0x9c>
 81a:	8a 81       	ldd	r24, Y+2	; 0x02
 81c:	9b 81       	ldd	r25, Y+3	; 0x03
 81e:	61 15       	cp	r22, r1
 820:	71 05       	cpc	r23, r1
 822:	21 f0       	breq	.+8      	; 0x82c <malloc+0x8e>
 824:	fb 01       	movw	r30, r22
 826:	93 83       	std	Z+3, r25	; 0x03
 828:	82 83       	std	Z+2, r24	; 0x02
 82a:	04 c0       	rjmp	.+8      	; 0x834 <malloc+0x96>
 82c:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__flp+0x1>
 830:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__flp>
 834:	fe 01       	movw	r30, r28
 836:	32 96       	adiw	r30, 0x02	; 2
 838:	44 c0       	rjmp	.+136    	; 0x8c2 <malloc+0x124>
 83a:	fe 01       	movw	r30, r28
 83c:	e2 0f       	add	r30, r18
 83e:	f3 1f       	adc	r31, r19
 840:	81 93       	st	Z+, r24
 842:	91 93       	st	Z+, r25
 844:	22 50       	subi	r18, 0x02	; 2
 846:	31 09       	sbc	r19, r1
 848:	39 83       	std	Y+1, r19	; 0x01
 84a:	28 83       	st	Y, r18
 84c:	3a c0       	rjmp	.+116    	; 0x8c2 <malloc+0x124>
 84e:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 852:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 856:	23 2b       	or	r18, r19
 858:	41 f4       	brne	.+16     	; 0x86a <malloc+0xcc>
 85a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 85e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 862:	30 93 51 01 	sts	0x0151, r19	; 0x800151 <__brkval+0x1>
 866:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <__brkval>
 86a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 86e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 872:	21 15       	cp	r18, r1
 874:	31 05       	cpc	r19, r1
 876:	41 f4       	brne	.+16     	; 0x888 <malloc+0xea>
 878:	2d b7       	in	r18, 0x3d	; 61
 87a:	3e b7       	in	r19, 0x3e	; 62
 87c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 880:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 884:	24 1b       	sub	r18, r20
 886:	35 0b       	sbc	r19, r21
 888:	e0 91 50 01 	lds	r30, 0x0150	; 0x800150 <__brkval>
 88c:	f0 91 51 01 	lds	r31, 0x0151	; 0x800151 <__brkval+0x1>
 890:	e2 17       	cp	r30, r18
 892:	f3 07       	cpc	r31, r19
 894:	a0 f4       	brcc	.+40     	; 0x8be <malloc+0x120>
 896:	2e 1b       	sub	r18, r30
 898:	3f 0b       	sbc	r19, r31
 89a:	28 17       	cp	r18, r24
 89c:	39 07       	cpc	r19, r25
 89e:	78 f0       	brcs	.+30     	; 0x8be <malloc+0x120>
 8a0:	ac 01       	movw	r20, r24
 8a2:	4e 5f       	subi	r20, 0xFE	; 254
 8a4:	5f 4f       	sbci	r21, 0xFF	; 255
 8a6:	24 17       	cp	r18, r20
 8a8:	35 07       	cpc	r19, r21
 8aa:	48 f0       	brcs	.+18     	; 0x8be <malloc+0x120>
 8ac:	4e 0f       	add	r20, r30
 8ae:	5f 1f       	adc	r21, r31
 8b0:	50 93 51 01 	sts	0x0151, r21	; 0x800151 <__brkval+0x1>
 8b4:	40 93 50 01 	sts	0x0150, r20	; 0x800150 <__brkval>
 8b8:	81 93       	st	Z+, r24
 8ba:	91 93       	st	Z+, r25
 8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <malloc+0x124>
 8be:	e0 e0       	ldi	r30, 0x00	; 0
 8c0:	f0 e0       	ldi	r31, 0x00	; 0
 8c2:	cf 01       	movw	r24, r30
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	1f 91       	pop	r17
 8ca:	0f 91       	pop	r16
 8cc:	08 95       	ret

000008ce <free>:
 8ce:	cf 93       	push	r28
 8d0:	df 93       	push	r29
 8d2:	00 97       	sbiw	r24, 0x00	; 0
 8d4:	09 f4       	brne	.+2      	; 0x8d8 <free+0xa>
 8d6:	81 c0       	rjmp	.+258    	; 0x9da <free+0x10c>
 8d8:	fc 01       	movw	r30, r24
 8da:	32 97       	sbiw	r30, 0x02	; 2
 8dc:	13 82       	std	Z+3, r1	; 0x03
 8de:	12 82       	std	Z+2, r1	; 0x02
 8e0:	a0 91 52 01 	lds	r26, 0x0152	; 0x800152 <__flp>
 8e4:	b0 91 53 01 	lds	r27, 0x0153	; 0x800153 <__flp+0x1>
 8e8:	10 97       	sbiw	r26, 0x00	; 0
 8ea:	81 f4       	brne	.+32     	; 0x90c <free+0x3e>
 8ec:	20 81       	ld	r18, Z
 8ee:	31 81       	ldd	r19, Z+1	; 0x01
 8f0:	82 0f       	add	r24, r18
 8f2:	93 1f       	adc	r25, r19
 8f4:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 8f8:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 8fc:	28 17       	cp	r18, r24
 8fe:	39 07       	cpc	r19, r25
 900:	51 f5       	brne	.+84     	; 0x956 <free+0x88>
 902:	f0 93 51 01 	sts	0x0151, r31	; 0x800151 <__brkval+0x1>
 906:	e0 93 50 01 	sts	0x0150, r30	; 0x800150 <__brkval>
 90a:	67 c0       	rjmp	.+206    	; 0x9da <free+0x10c>
 90c:	ed 01       	movw	r28, r26
 90e:	20 e0       	ldi	r18, 0x00	; 0
 910:	30 e0       	ldi	r19, 0x00	; 0
 912:	ce 17       	cp	r28, r30
 914:	df 07       	cpc	r29, r31
 916:	40 f4       	brcc	.+16     	; 0x928 <free+0x5a>
 918:	4a 81       	ldd	r20, Y+2	; 0x02
 91a:	5b 81       	ldd	r21, Y+3	; 0x03
 91c:	9e 01       	movw	r18, r28
 91e:	41 15       	cp	r20, r1
 920:	51 05       	cpc	r21, r1
 922:	f1 f0       	breq	.+60     	; 0x960 <free+0x92>
 924:	ea 01       	movw	r28, r20
 926:	f5 cf       	rjmp	.-22     	; 0x912 <free+0x44>
 928:	d3 83       	std	Z+3, r29	; 0x03
 92a:	c2 83       	std	Z+2, r28	; 0x02
 92c:	40 81       	ld	r20, Z
 92e:	51 81       	ldd	r21, Z+1	; 0x01
 930:	84 0f       	add	r24, r20
 932:	95 1f       	adc	r25, r21
 934:	c8 17       	cp	r28, r24
 936:	d9 07       	cpc	r29, r25
 938:	59 f4       	brne	.+22     	; 0x950 <free+0x82>
 93a:	88 81       	ld	r24, Y
 93c:	99 81       	ldd	r25, Y+1	; 0x01
 93e:	84 0f       	add	r24, r20
 940:	95 1f       	adc	r25, r21
 942:	02 96       	adiw	r24, 0x02	; 2
 944:	91 83       	std	Z+1, r25	; 0x01
 946:	80 83       	st	Z, r24
 948:	8a 81       	ldd	r24, Y+2	; 0x02
 94a:	9b 81       	ldd	r25, Y+3	; 0x03
 94c:	93 83       	std	Z+3, r25	; 0x03
 94e:	82 83       	std	Z+2, r24	; 0x02
 950:	21 15       	cp	r18, r1
 952:	31 05       	cpc	r19, r1
 954:	29 f4       	brne	.+10     	; 0x960 <free+0x92>
 956:	f0 93 53 01 	sts	0x0153, r31	; 0x800153 <__flp+0x1>
 95a:	e0 93 52 01 	sts	0x0152, r30	; 0x800152 <__flp>
 95e:	3d c0       	rjmp	.+122    	; 0x9da <free+0x10c>
 960:	e9 01       	movw	r28, r18
 962:	fb 83       	std	Y+3, r31	; 0x03
 964:	ea 83       	std	Y+2, r30	; 0x02
 966:	49 91       	ld	r20, Y+
 968:	59 91       	ld	r21, Y+
 96a:	c4 0f       	add	r28, r20
 96c:	d5 1f       	adc	r29, r21
 96e:	ec 17       	cp	r30, r28
 970:	fd 07       	cpc	r31, r29
 972:	61 f4       	brne	.+24     	; 0x98c <free+0xbe>
 974:	80 81       	ld	r24, Z
 976:	91 81       	ldd	r25, Z+1	; 0x01
 978:	84 0f       	add	r24, r20
 97a:	95 1f       	adc	r25, r21
 97c:	02 96       	adiw	r24, 0x02	; 2
 97e:	e9 01       	movw	r28, r18
 980:	99 83       	std	Y+1, r25	; 0x01
 982:	88 83       	st	Y, r24
 984:	82 81       	ldd	r24, Z+2	; 0x02
 986:	93 81       	ldd	r25, Z+3	; 0x03
 988:	9b 83       	std	Y+3, r25	; 0x03
 98a:	8a 83       	std	Y+2, r24	; 0x02
 98c:	e0 e0       	ldi	r30, 0x00	; 0
 98e:	f0 e0       	ldi	r31, 0x00	; 0
 990:	12 96       	adiw	r26, 0x02	; 2
 992:	8d 91       	ld	r24, X+
 994:	9c 91       	ld	r25, X
 996:	13 97       	sbiw	r26, 0x03	; 3
 998:	00 97       	sbiw	r24, 0x00	; 0
 99a:	19 f0       	breq	.+6      	; 0x9a2 <free+0xd4>
 99c:	fd 01       	movw	r30, r26
 99e:	dc 01       	movw	r26, r24
 9a0:	f7 cf       	rjmp	.-18     	; 0x990 <free+0xc2>
 9a2:	8d 91       	ld	r24, X+
 9a4:	9c 91       	ld	r25, X
 9a6:	11 97       	sbiw	r26, 0x01	; 1
 9a8:	9d 01       	movw	r18, r26
 9aa:	2e 5f       	subi	r18, 0xFE	; 254
 9ac:	3f 4f       	sbci	r19, 0xFF	; 255
 9ae:	82 0f       	add	r24, r18
 9b0:	93 1f       	adc	r25, r19
 9b2:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <__brkval>
 9b6:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <__brkval+0x1>
 9ba:	28 17       	cp	r18, r24
 9bc:	39 07       	cpc	r19, r25
 9be:	69 f4       	brne	.+26     	; 0x9da <free+0x10c>
 9c0:	30 97       	sbiw	r30, 0x00	; 0
 9c2:	29 f4       	brne	.+10     	; 0x9ce <free+0x100>
 9c4:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <__flp+0x1>
 9c8:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__flp>
 9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <free+0x104>
 9ce:	13 82       	std	Z+3, r1	; 0x03
 9d0:	12 82       	std	Z+2, r1	; 0x02
 9d2:	b0 93 51 01 	sts	0x0151, r27	; 0x800151 <__brkval+0x1>
 9d6:	a0 93 50 01 	sts	0x0150, r26	; 0x800150 <__brkval>
 9da:	df 91       	pop	r29
 9dc:	cf 91       	pop	r28
 9de:	08 95       	ret

000009e0 <_exit>:
 9e0:	f8 94       	cli

000009e2 <__stop_program>:
 9e2:	ff cf       	rjmp	.-2      	; 0x9e2 <__stop_program>
