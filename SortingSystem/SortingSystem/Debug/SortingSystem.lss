
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  00000b00  00000b94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b00  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000045  00800124  00800124  00000bb8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bb8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000be8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000c28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c37  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee2  00000000  00000000  000029ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df1  00000000  00000000  000038d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  000046c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a66  00000000  00000000  00004b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ca9  00000000  00000000  0000558a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00006233  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	ba c0       	rjmp	.+372    	; 0x17a <__vector_1>
   6:	00 00       	nop
   8:	c7 c0       	rjmp	.+398    	; 0x198 <__vector_2>
   a:	00 00       	nop
   c:	d4 c0       	rjmp	.+424    	; 0x1b6 <__vector_3>
   e:	00 00       	nop
  10:	eb c0       	rjmp	.+470    	; 0x1e8 <__vector_4>
  12:	00 00       	nop
  14:	f8 c0       	rjmp	.+496    	; 0x206 <__vector_5>
  16:	00 00       	nop
  18:	19 c1       	rjmp	.+562    	; 0x24c <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	79 c0       	rjmp	.+242    	; 0x148 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	00 c1       	rjmp	.+512    	; 0x276 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	6d c0       	rjmp	.+218    	; 0x15c <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e0 e0       	ldi	r30, 0x00	; 0
  ac:	fb e0       	ldi	r31, 0x0B	; 11
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a4 32       	cpi	r26, 0x24	; 36
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a4 e2       	ldi	r26, 0x24	; 36
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a9 36       	cpi	r26, 0x69	; 105
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	58 d3       	rcall	.+1712   	; 0x780 <main>
  d0:	15 c5       	rjmp	.+2602   	; 0xafc <_exit>

000000d2 <__bad_interrupt>:
  d2:	1b c1       	rjmp	.+566    	; 0x30a <__vector_default>

000000d4 <initItem>:
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	f0 d3       	rcall	.+2016   	; 0x8ba <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	e3 d3       	rcall	.+1990   	; 0x8ba <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <__vector_21>:
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 148:	1f 92       	push	r1
 14a:	0f 92       	push	r0
 14c:	0f b6       	in	r0, 0x3f	; 63
 14e:	0f 92       	push	r0
 150:	11 24       	eor	r1, r1
 152:	0f 90       	pop	r0
 154:	0f be       	out	0x3f, r0	; 63
 156:	0f 90       	pop	r0
 158:	1f 90       	pop	r1
 15a:	18 95       	reti

0000015c <__vector_32>:
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	8f 93       	push	r24
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <timer3_flag>
 16e:	8f 91       	pop	r24
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <__vector_1>:
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	0f 92       	push	r0
 182:	11 24       	eor	r1, r1
 184:	8f 93       	push	r24
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <OS1_flag>
 18c:	8f 91       	pop	r24
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <__vector_2>:
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	8f 93       	push	r24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <FER_flag>
 1aa:	8f 91       	pop	r24
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <__vector_3>:
 1b6:	1f 92       	push	r1
 1b8:	0f 92       	push	r0
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	0f 92       	push	r0
 1be:	11 24       	eor	r1, r1
 1c0:	8f 93       	push	r24
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <OS2_flag>
 1c8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 1cc:	88 23       	and	r24, r24
 1ce:	19 f0       	breq	.+6      	; 0x1d6 <__vector_3+0x20>
 1d0:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <reflective_present>
 1d4:	03 c0       	rjmp	.+6      	; 0x1dc <__vector_3+0x26>
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <reflective_present>
 1dc:	8f 91       	pop	r24
 1de:	0f 90       	pop	r0
 1e0:	0f be       	out	0x3f, r0	; 63
 1e2:	0f 90       	pop	r0
 1e4:	1f 90       	pop	r1
 1e6:	18 95       	reti

000001e8 <__vector_4>:
 1e8:	1f 92       	push	r1
 1ea:	0f 92       	push	r0
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	0f 92       	push	r0
 1f0:	11 24       	eor	r1, r1
 1f2:	8f 93       	push	r24
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <OS3_flag>
 1fa:	8f 91       	pop	r24
 1fc:	0f 90       	pop	r0
 1fe:	0f be       	out	0x3f, r0	; 63
 200:	0f 90       	pop	r0
 202:	1f 90       	pop	r1
 204:	18 95       	reti

00000206 <__vector_5>:
 206:	1f 92       	push	r1
 208:	0f 92       	push	r0
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	0f 92       	push	r0
 20e:	11 24       	eor	r1, r1
 210:	8f 93       	push	r24
 212:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
 216:	82 30       	cpi	r24, 0x02	; 2
 218:	39 f4       	brne	.+14     	; 0x228 <__vector_5+0x22>
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <pause_entered>
 220:	83 e0       	ldi	r24, 0x03	; 3
 222:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <STATE>
 226:	0c c0       	rjmp	.+24     	; 0x240 <__vector_5+0x3a>
 228:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
 22c:	83 30       	cpi	r24, 0x03	; 3
 22e:	41 f4       	brne	.+16     	; 0x240 <__vector_5+0x3a>
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <operational_entered>
 236:	82 e0       	ldi	r24, 0x02	; 2
 238:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <STATE>
 23c:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <display_index>
 240:	8f 91       	pop	r24
 242:	0f 90       	pop	r0
 244:	0f be       	out	0x3f, r0	; 63
 246:	0f 90       	pop	r0
 248:	1f 90       	pop	r1
 24a:	18 95       	reti

0000024c <__vector_6>:
 24c:	1f 92       	push	r1
 24e:	0f 92       	push	r0
 250:	0f b6       	in	r0, 0x3f	; 63
 252:	0f 92       	push	r0
 254:	11 24       	eor	r1, r1
 256:	8f 93       	push	r24
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <ramp_down_entered>
 25e:	84 e0       	ldi	r24, 0x04	; 4
 260:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <STATE>
 264:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
 268:	88 b9       	out	0x08, r24	; 8
 26a:	8f 91       	pop	r24
 26c:	0f 90       	pop	r0
 26e:	0f be       	out	0x3f, r0	; 63
 270:	0f 90       	pop	r0
 272:	1f 90       	pop	r1
 274:	18 95       	reti

00000276 <__vector_29>:
 276:	1f 92       	push	r1
 278:	0f 92       	push	r0
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	0f 92       	push	r0
 27e:	11 24       	eor	r1, r1
 280:	0b b6       	in	r0, 0x3b	; 59
 282:	0f 92       	push	r0
 284:	2f 93       	push	r18
 286:	3f 93       	push	r19
 288:	8f 93       	push	r24
 28a:	9f 93       	push	r25
 28c:	ef 93       	push	r30
 28e:	ff 93       	push	r31
 290:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 294:	88 23       	and	r24, r24
 296:	61 f1       	breq	.+88     	; 0x2f0 <__vector_29+0x7a>
 298:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <ADC_result+0x1>
 2a2:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <ADC_result>
 2a6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <ADC_result>
 2aa:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <ADC_result+0x1>
 2ae:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b2:	98 2f       	mov	r25, r24
 2b4:	88 27       	eor	r24, r24
 2b6:	82 2b       	or	r24, r18
 2b8:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <ADC_result+0x1>
 2bc:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <ADC_result>
 2c0:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <ADC_result>
 2c4:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <ADC_result+0x1>
 2c8:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <ADC_lowest_val>
 2cc:	90 91 64 01 	lds	r25, 0x0164	; 0x800164 <ADC_lowest_val+0x1>
 2d0:	28 17       	cp	r18, r24
 2d2:	39 07       	cpc	r19, r25
 2d4:	40 f4       	brcc	.+16     	; 0x2e6 <__vector_29+0x70>
 2d6:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <ADC_result>
 2da:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <ADC_result+0x1>
 2de:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <ADC_lowest_val+0x1>
 2e2:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <ADC_lowest_val>
 2e6:	ea e7       	ldi	r30, 0x7A	; 122
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	80 81       	ld	r24, Z
 2ec:	80 64       	ori	r24, 0x40	; 64
 2ee:	80 83       	st	Z, r24
 2f0:	ff 91       	pop	r31
 2f2:	ef 91       	pop	r30
 2f4:	9f 91       	pop	r25
 2f6:	8f 91       	pop	r24
 2f8:	3f 91       	pop	r19
 2fa:	2f 91       	pop	r18
 2fc:	0f 90       	pop	r0
 2fe:	0b be       	out	0x3b, r0	; 59
 300:	0f 90       	pop	r0
 302:	0f be       	out	0x3f, r0	; 63
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <__vector_default>:
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	0f b6       	in	r0, 0x3f	; 63
 310:	0f 92       	push	r0
 312:	11 24       	eor	r1, r1
 314:	0f 90       	pop	r0
 316:	0f be       	out	0x3f, r0	; 63
 318:	0f 90       	pop	r0
 31a:	1f 90       	pop	r1
 31c:	18 95       	reti

0000031e <init_interrupts>:
 31e:	8a e9       	ldi	r24, 0x9A	; 154
 320:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 324:	8a e0       	ldi	r24, 0x0A	; 10
 326:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 32a:	8d b3       	in	r24, 0x1d	; 29
 32c:	8f 63       	ori	r24, 0x3F	; 63
 32e:	8d bb       	out	0x1d, r24	; 29
 330:	08 95       	ret

00000332 <init_timer0_pwm>:
 332:	84 b5       	in	r24, 0x24	; 36
 334:	83 68       	ori	r24, 0x83	; 131
 336:	84 bd       	out	0x24, r24	; 36
 338:	85 b5       	in	r24, 0x25	; 37
 33a:	82 60       	ori	r24, 0x02	; 2
 33c:	85 bd       	out	0x25, r24	; 37
 33e:	80 e8       	ldi	r24, 0x80	; 128
 340:	87 bd       	out	0x27, r24	; 39
 342:	08 95       	ret

00000344 <init_timer3>:
 344:	e1 e9       	ldi	r30, 0x91	; 145
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	8b 60       	ori	r24, 0x0B	; 11
 34c:	80 83       	st	Z, r24
 34e:	e1 e7       	ldi	r30, 0x71	; 113
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	80 81       	ld	r24, Z
 354:	82 60       	ori	r24, 0x02	; 2
 356:	80 83       	st	Z, r24
 358:	c1 9a       	sbi	0x18, 1	; 24
 35a:	80 81       	ld	r24, Z
 35c:	8d 7f       	andi	r24, 0xFD	; 253
 35e:	80 83       	st	Z, r24
 360:	08 95       	ret

00000362 <start_timer3>:
 362:	9c 01       	movw	r18, r24
 364:	e1 e7       	ldi	r30, 0x71	; 113
 366:	f0 e0       	ldi	r31, 0x00	; 0
 368:	90 81       	ld	r25, Z
 36a:	92 60       	ori	r25, 0x02	; 2
 36c:	90 83       	st	Z, r25
 36e:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 372:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 376:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 37a:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 37e:	08 95       	ret

00000380 <init_motor>:
 380:	84 e0       	ldi	r24, 0x04	; 4
 382:	85 b9       	out	0x05, r24	; 5
 384:	80 e7       	ldi	r24, 0x70	; 112
 386:	87 bd       	out	0x27, r24	; 39
 388:	08 95       	ret

0000038a <init_ADC>:
 38a:	8f ef       	ldi	r24, 0xFF	; 255
 38c:	93 e0       	ldi	r25, 0x03	; 3
 38e:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <ADC_result+0x1>
 392:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <ADC_result>
 396:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <ADC_lowest_val+0x1>
 39a:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <ADC_lowest_val>
 39e:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <reflective_present>
 3a2:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <item_ready>
 3a6:	ec e7       	ldi	r30, 0x7C	; 124
 3a8:	f0 e0       	ldi	r31, 0x00	; 0
 3aa:	80 81       	ld	r24, Z
 3ac:	80 64       	ori	r24, 0x40	; 64
 3ae:	80 83       	st	Z, r24
 3b0:	ea e7       	ldi	r30, 0x7A	; 122
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	82 60       	ori	r24, 0x02	; 2
 3b8:	80 83       	st	Z, r24
 3ba:	80 81       	ld	r24, Z
 3bc:	81 60       	ori	r24, 0x01	; 1
 3be:	80 83       	st	Z, r24
 3c0:	80 81       	ld	r24, Z
 3c2:	88 60       	ori	r24, 0x08	; 8
 3c4:	80 83       	st	Z, r24
 3c6:	80 81       	ld	r24, Z
 3c8:	80 68       	ori	r24, 0x80	; 128
 3ca:	80 83       	st	Z, r24
 3cc:	08 95       	ret

000003ce <init_stepper>:
 3ce:	8f ef       	ldi	r24, 0xFF	; 255
 3d0:	81 b9       	out	0x01, r24	; 1
 3d2:	85 e3       	ldi	r24, 0x35	; 53
 3d4:	82 b9       	out	0x02, r24	; 2
 3d6:	81 e0       	ldi	r24, 0x01	; 1
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <motor_position+0x1>
 3de:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <motor_position>
 3e2:	10 92 5e 01 	sts	0x015E, r1	; 0x80015e <stepper_on+0x1>
 3e6:	10 92 5d 01 	sts	0x015D, r1	; 0x80015d <stepper_on>
 3ea:	08 95       	ret

000003ec <mTimer>:
 3ec:	ac 01       	movw	r20, r24
 3ee:	e1 e8       	ldi	r30, 0x81	; 129
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	90 81       	ld	r25, Z
 3f4:	91 60       	ori	r25, 0x01	; 1
 3f6:	90 83       	st	Z, r25
 3f8:	90 81       	ld	r25, Z
 3fa:	98 60       	ori	r25, 0x08	; 8
 3fc:	90 83       	st	Z, r25
 3fe:	88 ee       	ldi	r24, 0xE8	; 232
 400:	93 e0       	ldi	r25, 0x03	; 3
 402:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 406:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 40a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 40e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 412:	b1 9a       	sbi	0x16, 1	; 22
 414:	20 e0       	ldi	r18, 0x00	; 0
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	05 c0       	rjmp	.+10     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 41a:	b1 9b       	sbis	0x16, 1	; 22
 41c:	fe cf       	rjmp	.-4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 41e:	b1 9a       	sbi	0x16, 1	; 22
 420:	2f 5f       	subi	r18, 0xFF	; 255
 422:	3f 4f       	sbci	r19, 0xFF	; 255
 424:	24 17       	cp	r18, r20
 426:	35 07       	cpc	r19, r21
 428:	1c f4       	brge	.+6      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42a:	b1 9b       	sbis	0x16, 1	; 22
 42c:	f6 cf       	rjmp	.-20     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 42e:	f7 cf       	rjmp	.-18     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 430:	08 95       	ret

00000432 <stepper_rotate>:
 432:	cf 92       	push	r12
 434:	df 92       	push	r13
 436:	ef 92       	push	r14
 438:	ff 92       	push	r15
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	18 16       	cp	r1, r24
 444:	19 06       	cpc	r1, r25
 446:	0c f0       	brlt	.+2      	; 0x44a <stepper_rotate+0x18>
 448:	61 c0       	rjmp	.+194    	; 0x50c <stepper_rotate+0xda>
 44a:	6b 01       	movw	r12, r22
 44c:	8c 01       	movw	r16, r24
 44e:	c0 e0       	ldi	r28, 0x00	; 0
 450:	d0 e0       	ldi	r29, 0x00	; 0
 452:	0f 2e       	mov	r0, r31
 454:	fa e0       	ldi	r31, 0x0A	; 10
 456:	ef 2e       	mov	r14, r31
 458:	f1 2c       	mov	r15, r1
 45a:	f0 2d       	mov	r31, r0
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	c8 16       	cp	r12, r24
 460:	d1 04       	cpc	r13, r1
 462:	d1 f4       	brne	.+52     	; 0x498 <stepper_rotate+0x66>
 464:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__data_end>
 468:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__data_end+0x1>
 46c:	e9 5e       	subi	r30, 0xE9	; 233
 46e:	fe 4f       	sbci	r31, 0xFE	; 254
 470:	80 81       	ld	r24, Z
 472:	82 b9       	out	0x02, r24	; 2
 474:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
 478:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x1>
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	83 70       	andi	r24, 0x03	; 3
 480:	90 78       	andi	r25, 0x80	; 128
 482:	99 23       	and	r25, r25
 484:	24 f4       	brge	.+8      	; 0x48e <stepper_rotate+0x5c>
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	8c 6f       	ori	r24, 0xFC	; 252
 48a:	9f 6f       	ori	r25, 0xFF	; 255
 48c:	01 96       	adiw	r24, 0x01	; 1
 48e:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
 492:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
 496:	1d c0       	rjmp	.+58     	; 0x4d2 <stepper_rotate+0xa0>
 498:	8f ef       	ldi	r24, 0xFF	; 255
 49a:	c8 16       	cp	r12, r24
 49c:	d8 06       	cpc	r13, r24
 49e:	c9 f4       	brne	.+50     	; 0x4d2 <stepper_rotate+0xa0>
 4a0:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <__data_end>
 4a4:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <__data_end+0x1>
 4a8:	ed 5e       	subi	r30, 0xED	; 237
 4aa:	fe 4f       	sbci	r31, 0xFE	; 254
 4ac:	80 81       	ld	r24, Z
 4ae:	82 b9       	out	0x02, r24	; 2
 4b0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
 4b4:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x1>
 4b8:	01 96       	adiw	r24, 0x01	; 1
 4ba:	83 70       	andi	r24, 0x03	; 3
 4bc:	90 78       	andi	r25, 0x80	; 128
 4be:	99 23       	and	r25, r25
 4c0:	24 f4       	brge	.+8      	; 0x4ca <stepper_rotate+0x98>
 4c2:	01 97       	sbiw	r24, 0x01	; 1
 4c4:	8c 6f       	ori	r24, 0xFC	; 252
 4c6:	9f 6f       	ori	r25, 0xFF	; 255
 4c8:	01 96       	adiw	r24, 0x01	; 1
 4ca:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__data_end+0x1>
 4ce:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__data_end>
 4d2:	c7 01       	movw	r24, r14
 4d4:	8b df       	rcall	.-234    	; 0x3ec <mTimer>
 4d6:	c4 30       	cpi	r28, 0x04	; 4
 4d8:	d1 05       	cpc	r29, r1
 4da:	3c f4       	brge	.+14     	; 0x4ea <stepper_rotate+0xb8>
 4dc:	86 e0       	ldi	r24, 0x06	; 6
 4de:	e8 16       	cp	r14, r24
 4e0:	f1 04       	cpc	r15, r1
 4e2:	1c f0       	brlt	.+6      	; 0x4ea <stepper_rotate+0xb8>
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	e8 1a       	sub	r14, r24
 4e8:	f1 08       	sbc	r15, r1
 4ea:	c8 01       	movw	r24, r16
 4ec:	8c 1b       	sub	r24, r28
 4ee:	9d 0b       	sbc	r25, r29
 4f0:	05 97       	sbiw	r24, 0x05	; 5
 4f2:	3c f4       	brge	.+14     	; 0x502 <stepper_rotate+0xd0>
 4f4:	8b e0       	ldi	r24, 0x0B	; 11
 4f6:	e8 16       	cp	r14, r24
 4f8:	f1 04       	cpc	r15, r1
 4fa:	1c f4       	brge	.+6      	; 0x502 <stepper_rotate+0xd0>
 4fc:	8f ef       	ldi	r24, 0xFF	; 255
 4fe:	e8 1a       	sub	r14, r24
 500:	f8 0a       	sbc	r15, r24
 502:	21 96       	adiw	r28, 0x01	; 1
 504:	0c 17       	cp	r16, r28
 506:	1d 07       	cpc	r17, r29
 508:	09 f0       	breq	.+2      	; 0x50c <stepper_rotate+0xda>
 50a:	a8 cf       	rjmp	.-176    	; 0x45c <stepper_rotate+0x2a>
 50c:	df 91       	pop	r29
 50e:	cf 91       	pop	r28
 510:	1f 91       	pop	r17
 512:	0f 91       	pop	r16
 514:	ff 90       	pop	r15
 516:	ef 90       	pop	r14
 518:	df 90       	pop	r13
 51a:	cf 90       	pop	r12
 51c:	08 95       	ret

0000051e <stepper_position>:
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	c8 2f       	mov	r28, r24
 524:	d0 e0       	ldi	r29, 0x00	; 0
 526:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <motor_position>
 52a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <motor_position+0x1>
 52e:	9e 01       	movw	r18, r28
 530:	28 1b       	sub	r18, r24
 532:	39 0b       	sbc	r19, r25
 534:	21 30       	cpi	r18, 0x01	; 1
 536:	31 05       	cpc	r19, r1
 538:	21 f0       	breq	.+8      	; 0x542 <stepper_position+0x24>
 53a:	2d 3f       	cpi	r18, 0xFD	; 253
 53c:	8f ef       	ldi	r24, 0xFF	; 255
 53e:	38 07       	cpc	r19, r24
 540:	31 f4       	brne	.+12     	; 0x54e <stepper_position+0x30>
 542:	61 e0       	ldi	r22, 0x01	; 1
 544:	70 e0       	ldi	r23, 0x00	; 0
 546:	82 e3       	ldi	r24, 0x32	; 50
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	73 df       	rcall	.-282    	; 0x432 <stepper_rotate>
 54c:	18 c0       	rjmp	.+48     	; 0x57e <stepper_position+0x60>
 54e:	2f 3f       	cpi	r18, 0xFF	; 255
 550:	8f ef       	ldi	r24, 0xFF	; 255
 552:	38 07       	cpc	r19, r24
 554:	19 f0       	breq	.+6      	; 0x55c <stepper_position+0x3e>
 556:	23 30       	cpi	r18, 0x03	; 3
 558:	31 05       	cpc	r19, r1
 55a:	31 f4       	brne	.+12     	; 0x568 <stepper_position+0x4a>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	82 e3       	ldi	r24, 0x32	; 50
 562:	90 e0       	ldi	r25, 0x00	; 0
 564:	66 df       	rcall	.-308    	; 0x432 <stepper_rotate>
 566:	0b c0       	rjmp	.+22     	; 0x57e <stepper_position+0x60>
 568:	22 30       	cpi	r18, 0x02	; 2
 56a:	31 05       	cpc	r19, r1
 56c:	19 f0       	breq	.+6      	; 0x574 <stepper_position+0x56>
 56e:	2e 3f       	cpi	r18, 0xFE	; 254
 570:	3f 4f       	sbci	r19, 0xFF	; 255
 572:	29 f4       	brne	.+10     	; 0x57e <stepper_position+0x60>
 574:	61 e0       	ldi	r22, 0x01	; 1
 576:	70 e0       	ldi	r23, 0x00	; 0
 578:	84 e6       	ldi	r24, 0x64	; 100
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	5a df       	rcall	.-332    	; 0x432 <stepper_rotate>
 57e:	d0 93 37 01 	sts	0x0137, r29	; 0x800137 <motor_position+0x1>
 582:	c0 93 36 01 	sts	0x0136, r28	; 0x800136 <motor_position>
 586:	df 91       	pop	r29
 588:	cf 91       	pop	r28
 58a:	08 95       	ret

0000058c <entry_sensor>:
 58c:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <OS1_flag>
 590:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <item_number>
 594:	8f 5f       	subi	r24, 0xFF	; 255
 596:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <item_number>
 59a:	9c dd       	rcall	.-1224   	; 0xd4 <initItem>
 59c:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <item_number>
 5a0:	fc 01       	movw	r30, r24
 5a2:	25 83       	std	Z+5, r18	; 0x05
 5a4:	21 e0       	ldi	r18, 0x01	; 1
 5a6:	24 83       	std	Z+4, r18	; 0x04
 5a8:	bc 01       	movw	r22, r24
 5aa:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 5ae:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 5b2:	a6 cd       	rjmp	.-1204   	; 0x100 <enqueue>
 5b4:	08 95       	ret

000005b6 <metal_sensor>:
 5b6:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <FER_flag>
 5ba:	e0 91 61 01 	lds	r30, 0x0161	; 0x800161 <entryList>
 5be:	f0 91 62 01 	lds	r31, 0x0162	; 0x800162 <entryList+0x1>
 5c2:	02 80       	ldd	r0, Z+2	; 0x02
 5c4:	f3 81       	ldd	r31, Z+3	; 0x03
 5c6:	e0 2d       	mov	r30, r0
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	80 83       	st	Z, r24
 5cc:	08 95       	ret

000005ce <reflective_sensor>:
 5ce:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <OS2_flag>
 5d2:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 5d6:	88 23       	and	r24, r24
 5d8:	31 f0       	breq	.+12     	; 0x5e6 <reflective_sensor+0x18>
 5da:	ea e7       	ldi	r30, 0x7A	; 122
 5dc:	f0 e0       	ldi	r31, 0x00	; 0
 5de:	80 81       	ld	r24, Z
 5e0:	80 64       	ori	r24, 0x40	; 64
 5e2:	80 83       	st	Z, r24
 5e4:	08 95       	ret
 5e6:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
 5ea:	82 30       	cpi	r24, 0x02	; 2
 5ec:	a1 f4       	brne	.+40     	; 0x616 <reflective_sensor+0x48>
 5ee:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 5f2:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 5f6:	95 dd       	rcall	.-1238   	; 0x122 <dequeue>
 5f8:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <ADC_lowest_val>
 5fc:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <ADC_lowest_val+0x1>
 600:	fc 01       	movw	r30, r24
 602:	32 83       	std	Z+2, r19	; 0x02
 604:	21 83       	std	Z+1, r18	; 0x01
 606:	22 e0       	ldi	r18, 0x02	; 2
 608:	24 83       	std	Z+4, r18	; 0x04
 60a:	bc 01       	movw	r22, r24
 60c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <reflectiveList>
 610:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <reflectiveList+0x1>
 614:	75 dd       	rcall	.-1302   	; 0x100 <enqueue>
 616:	8f ef       	ldi	r24, 0xFF	; 255
 618:	93 e0       	ldi	r25, 0x03	; 3
 61a:	90 93 64 01 	sts	0x0164, r25	; 0x800164 <ADC_lowest_val+0x1>
 61e:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <ADC_lowest_val>
 622:	81 e0       	ldi	r24, 0x01	; 1
 624:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <item_ready>
 628:	08 95       	ret

0000062a <classify_item>:
 62a:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <item_ready>
 62e:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <reflectiveList>
 632:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <reflectiveList+0x1>
 636:	75 dd       	rcall	.-1302   	; 0x122 <dequeue>
 638:	fc 01       	movw	r30, r24
 63a:	81 81       	ldd	r24, Z+1	; 0x01
 63c:	92 81       	ldd	r25, Z+2	; 0x02
 63e:	20 81       	ld	r18, Z
 640:	21 11       	cpse	r18, r1
 642:	34 c0       	rjmp	.+104    	; 0x6ac <classify_item+0x82>
 644:	ab e1       	ldi	r26, 0x1B	; 27
 646:	b1 e0       	ldi	r27, 0x01	; 1
 648:	4d 91       	ld	r20, X+
 64a:	5c 91       	ld	r21, X
 64c:	11 97       	sbiw	r26, 0x01	; 1
 64e:	12 96       	adiw	r26, 0x02	; 2
 650:	2d 91       	ld	r18, X+
 652:	3c 91       	ld	r19, X
 654:	13 97       	sbiw	r26, 0x03	; 3
 656:	48 1b       	sub	r20, r24
 658:	59 0b       	sbc	r21, r25
 65a:	ba 01       	movw	r22, r20
 65c:	22 f4       	brpl	.+8      	; 0x666 <classify_item+0x3c>
 65e:	66 27       	eor	r22, r22
 660:	77 27       	eor	r23, r23
 662:	64 1b       	sub	r22, r20
 664:	75 0b       	sbc	r23, r21
 666:	a9 01       	movw	r20, r18
 668:	48 1b       	sub	r20, r24
 66a:	59 0b       	sbc	r21, r25
 66c:	9a 01       	movw	r18, r20
 66e:	22 f4       	brpl	.+8      	; 0x678 <classify_item+0x4e>
 670:	22 27       	eor	r18, r18
 672:	33 27       	eor	r19, r19
 674:	24 1b       	sub	r18, r20
 676:	35 0b       	sbc	r19, r21
 678:	62 17       	cp	r22, r18
 67a:	73 07       	cpc	r23, r19
 67c:	50 f4       	brcc	.+20     	; 0x692 <classify_item+0x68>
 67e:	a6 e0       	ldi	r26, 0x06	; 6
 680:	b1 e0       	ldi	r27, 0x01	; 1
 682:	8d 91       	ld	r24, X+
 684:	9c 91       	ld	r25, X
 686:	11 97       	sbiw	r26, 0x01	; 1
 688:	01 96       	adiw	r24, 0x01	; 1
 68a:	8d 93       	st	X+, r24
 68c:	9c 93       	st	X, r25
 68e:	80 e0       	ldi	r24, 0x00	; 0
 690:	48 c0       	rjmp	.+144    	; 0x722 <classify_item+0xf8>
 692:	a6 e0       	ldi	r26, 0x06	; 6
 694:	b1 e0       	ldi	r27, 0x01	; 1
 696:	14 96       	adiw	r26, 0x04	; 4
 698:	8d 91       	ld	r24, X+
 69a:	9c 91       	ld	r25, X
 69c:	15 97       	sbiw	r26, 0x05	; 5
 69e:	01 96       	adiw	r24, 0x01	; 1
 6a0:	15 96       	adiw	r26, 0x05	; 5
 6a2:	9c 93       	st	X, r25
 6a4:	8e 93       	st	-X, r24
 6a6:	14 97       	sbiw	r26, 0x04	; 4
 6a8:	82 e0       	ldi	r24, 0x02	; 2
 6aa:	3b c0       	rjmp	.+118    	; 0x722 <classify_item+0xf8>
 6ac:	21 30       	cpi	r18, 0x01	; 1
 6ae:	c1 f5       	brne	.+112    	; 0x720 <classify_item+0xf6>
 6b0:	ab e1       	ldi	r26, 0x1B	; 27
 6b2:	b1 e0       	ldi	r27, 0x01	; 1
 6b4:	14 96       	adiw	r26, 0x04	; 4
 6b6:	4d 91       	ld	r20, X+
 6b8:	5c 91       	ld	r21, X
 6ba:	15 97       	sbiw	r26, 0x05	; 5
 6bc:	16 96       	adiw	r26, 0x06	; 6
 6be:	2d 91       	ld	r18, X+
 6c0:	3c 91       	ld	r19, X
 6c2:	17 97       	sbiw	r26, 0x07	; 7
 6c4:	48 1b       	sub	r20, r24
 6c6:	59 0b       	sbc	r21, r25
 6c8:	ba 01       	movw	r22, r20
 6ca:	22 f4       	brpl	.+8      	; 0x6d4 <classify_item+0xaa>
 6cc:	66 27       	eor	r22, r22
 6ce:	77 27       	eor	r23, r23
 6d0:	64 1b       	sub	r22, r20
 6d2:	75 0b       	sbc	r23, r21
 6d4:	a9 01       	movw	r20, r18
 6d6:	48 1b       	sub	r20, r24
 6d8:	59 0b       	sbc	r21, r25
 6da:	9a 01       	movw	r18, r20
 6dc:	22 f4       	brpl	.+8      	; 0x6e6 <classify_item+0xbc>
 6de:	22 27       	eor	r18, r18
 6e0:	33 27       	eor	r19, r19
 6e2:	24 1b       	sub	r18, r20
 6e4:	35 0b       	sbc	r19, r21
 6e6:	62 17       	cp	r22, r18
 6e8:	73 07       	cpc	r23, r19
 6ea:	68 f4       	brcc	.+26     	; 0x706 <classify_item+0xdc>
 6ec:	a6 e0       	ldi	r26, 0x06	; 6
 6ee:	b1 e0       	ldi	r27, 0x01	; 1
 6f0:	16 96       	adiw	r26, 0x06	; 6
 6f2:	8d 91       	ld	r24, X+
 6f4:	9c 91       	ld	r25, X
 6f6:	17 97       	sbiw	r26, 0x07	; 7
 6f8:	01 96       	adiw	r24, 0x01	; 1
 6fa:	17 96       	adiw	r26, 0x07	; 7
 6fc:	9c 93       	st	X, r25
 6fe:	8e 93       	st	-X, r24
 700:	16 97       	sbiw	r26, 0x06	; 6
 702:	83 e0       	ldi	r24, 0x03	; 3
 704:	0e c0       	rjmp	.+28     	; 0x722 <classify_item+0xf8>
 706:	a6 e0       	ldi	r26, 0x06	; 6
 708:	b1 e0       	ldi	r27, 0x01	; 1
 70a:	12 96       	adiw	r26, 0x02	; 2
 70c:	8d 91       	ld	r24, X+
 70e:	9c 91       	ld	r25, X
 710:	13 97       	sbiw	r26, 0x03	; 3
 712:	01 96       	adiw	r24, 0x01	; 1
 714:	13 96       	adiw	r26, 0x03	; 3
 716:	9c 93       	st	X, r25
 718:	8e 93       	st	-X, r24
 71a:	12 97       	sbiw	r26, 0x02	; 2
 71c:	81 e0       	ldi	r24, 0x01	; 1
 71e:	01 c0       	rjmp	.+2      	; 0x722 <classify_item+0xf8>
 720:	80 e0       	ldi	r24, 0x00	; 0
 722:	83 83       	std	Z+3, r24	; 0x03
 724:	83 e0       	ldi	r24, 0x03	; 3
 726:	84 83       	std	Z+4, r24	; 0x04
 728:	a6 e0       	ldi	r26, 0x06	; 6
 72a:	b1 e0       	ldi	r27, 0x01	; 1
 72c:	18 96       	adiw	r26, 0x08	; 8
 72e:	8d 91       	ld	r24, X+
 730:	9c 91       	ld	r25, X
 732:	19 97       	sbiw	r26, 0x09	; 9
 734:	01 96       	adiw	r24, 0x01	; 1
 736:	19 96       	adiw	r26, 0x09	; 9
 738:	9c 93       	st	X, r25
 73a:	8e 93       	st	-X, r24
 73c:	18 97       	sbiw	r26, 0x08	; 8
 73e:	bf 01       	movw	r22, r30
 740:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 744:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 748:	db cc       	rjmp	.-1610   	; 0x100 <enqueue>
 74a:	08 95       	ret

0000074c <exit_sensor>:
 74c:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <OS3_flag>
 750:	15 b8       	out	0x05, r1	; 5
 752:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 756:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 75a:	e3 dc       	rcall	.-1594   	; 0x122 <dequeue>
 75c:	bc 01       	movw	r22, r24
 75e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <sortedList>
 762:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <sortedList+0x1>
 766:	cc dc       	rcall	.-1640   	; 0x100 <enqueue>
 768:	e0 91 38 01 	lds	r30, 0x0138	; 0x800138 <sortedList>
 76c:	f0 91 39 01 	lds	r31, 0x0139	; 0x800139 <sortedList+0x1>
 770:	02 80       	ldd	r0, Z+2	; 0x02
 772:	f3 81       	ldd	r31, Z+3	; 0x03
 774:	e0 2d       	mov	r30, r0
 776:	83 81       	ldd	r24, Z+3	; 0x03
 778:	8f 5f       	subi	r24, 0xFF	; 255
 77a:	d1 de       	rcall	.-606    	; 0x51e <stepper_position>
 77c:	01 ce       	rjmp	.-1022   	; 0x380 <init_motor>
 77e:	08 95       	ret

00000780 <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 780:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 782:	8f e8       	ldi	r24, 0x8F	; 143
 784:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 786:	8f ef       	ldi	r24, 0xFF	; 255
 788:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 78a:	80 ef       	ldi	r24, 0xF0	; 240
 78c:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 78e:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 790:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 792:	18 b8       	out	0x08, r1	; 8
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
	init_motor();
 794:	f8 94       	cli
	init_interrupts();
 796:	f9 dd       	rcall	.-1038   	; 0x38a <init_ADC>
 798:	cc dd       	rcall	.-1128   	; 0x332 <init_timer0_pwm>
	init_stepper();
 79a:	d4 dd       	rcall	.-1112   	; 0x344 <init_timer3>

	// Calibrate ADC before program starts

	//ADC_calibrate();

	entryList = initQueue();
 79c:	f1 dd       	rcall	.-1054   	; 0x380 <init_motor>
 79e:	bf dd       	rcall	.-1154   	; 0x31e <init_interrupts>
 7a0:	16 de       	rcall	.-980    	; 0x3ce <init_stepper>
 7a2:	78 94       	sei
 7a4:	a4 dc       	rcall	.-1720   	; 0xee <initQueue>
	reflectiveList = initQueue();
 7a6:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <entryList+0x1>
 7aa:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <entryList>
 7ae:	9f dc       	rcall	.-1730   	; 0xee <initQueue>
	classifiedList = initQueue();
 7b0:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <reflectiveList+0x1>
 7b4:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <reflectiveList>
 7b8:	9a dc       	rcall	.-1740   	; 0xee <initQueue>
 7ba:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <classifiedList+0x1>
	sortedList = initQueue();
 7be:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <classifiedList>
 7c2:	95 dc       	rcall	.-1750   	; 0xee <initQueue>
 7c4:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <sortedList+0x1>

	STATE = OPERATIONAL;
 7c8:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <sortedList>
 7cc:	82 e0       	ldi	r24, 0x02	; 2
	item_waiting = 0;
 7ce:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <STATE>
	item_number = 0;
 7d2:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <item_waiting>
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 7d6:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_number>
		//PORTC = STATE;
		
		if (STATE == OPERATIONAL) {
			if (operational_entered) {
				// start motor
				PORTB =  CW;
 7da:	01 e0       	ldi	r16, 0x01	; 1
 7dc:	10 e0       	ldi	r17, 0x00	; 0
 7de:	68 94       	set
				
				// Disable timer
				//PRR0 |= 0x20;		// PRTIM0 = 1 disables timer module
				TIMSK3 &= 0xFD;
 7e0:	ff 24       	eor	r15, r15
 7e2:	f2 f8       	bld	r15, 2
	while (1)
	{
		// testing
		//PORTC = STATE;
		
		if (STATE == OPERATIONAL) {
 7e4:	c1 e7       	ldi	r28, 0x71	; 113
 7e6:	d0 e0       	ldi	r29, 0x00	; 0
 7e8:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
			if (operational_entered) {
 7ec:	82 30       	cpi	r24, 0x02	; 2
 7ee:	f9 f4       	brne	.+62     	; 0x82e <main+0xae>
 7f0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <operational_entered>
				// start motor
				PORTB =  CW;
				
				// Disable timer
				//PRR0 |= 0x20;		// PRTIM0 = 1 disables timer module
				TIMSK3 &= 0xFD;
 7f4:	88 23       	and	r24, r24
 7f6:	29 f0       	breq	.+10     	; 0x802 <main+0x82>
				
				// testing
				PORTC |= 0x80;
 7f8:	f5 b8       	out	0x05, r15	; 5
			}	
			
			if(OS1_flag) 
 7fa:	88 81       	ld	r24, Y
 7fc:	8d 7f       	andi	r24, 0xFD	; 253
				entry_sensor();
 7fe:	88 83       	st	Y, r24
			if(FER_flag) 
 800:	47 9a       	sbi	0x08, 7	; 8
 802:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <OS1_flag>
				metal_sensor();
			if(OS2_flag) 
 806:	81 11       	cpse	r24, r1
 808:	c1 de       	rcall	.-638    	; 0x58c <entry_sensor>
				reflective_sensor();
 80a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <FER_flag>
			if(item_ready) 
 80e:	81 11       	cpse	r24, r1
 810:	d2 de       	rcall	.-604    	; 0x5b6 <metal_sensor>
 812:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <OS2_flag>
				classify_item();
 816:	81 11       	cpse	r24, r1
			if(OS3_flag) 
 818:	da de       	rcall	.-588    	; 0x5ce <reflective_sensor>
 81a:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <item_ready>
 81e:	81 11       	cpse	r24, r1
			{
				exit_sensor();
 820:	04 df       	rcall	.-504    	; 0x62a <classify_item>
 822:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <OS3_flag>
			}
			
		} else if (STATE == PAUSED) {
 826:	88 23       	and	r24, r24
 828:	f9 f2       	breq	.-66     	; 0x7e8 <main+0x68>
			// Check if just entering PAUSED
			if (pause_entered) {
 82a:	90 df       	rcall	.-224    	; 0x74c <exit_sensor>
 82c:	dd cf       	rjmp	.-70     	; 0x7e8 <main+0x68>
 82e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
				pause_entered = 0;
 832:	83 30       	cpi	r24, 0x03	; 3
 834:	a9 f5       	brne	.+106    	; 0x8a0 <main+0x120>
				
				// turn off motor
				PORTB =  0;
 836:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <pause_entered>
				
				// start timer for 1 sec
				start_timer3(timer3_1sec);
 83a:	88 23       	and	r24, r24
 83c:	41 f0       	breq	.+16     	; 0x84e <main+0xce>
 83e:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <pause_entered>
 842:	15 b8       	out	0x05, r1	; 5
			}
			
			// Update display
			if (timer3_flag) {
 844:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <timer3_1sec>
 848:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <timer3_1sec+0x1>
 84c:	8a dd       	rcall	.-1260   	; 0x362 <start_timer3>
				timer3_flag = 0;
 84e:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 852:	88 23       	and	r24, r24
 854:	09 f4       	brne	.+2      	; 0x858 <main+0xd8>
 856:	c8 cf       	rjmp	.-112    	; 0x7e8 <main+0x68>
 858:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 85c:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <display_index>
 860:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <display_index>
 864:	98 01       	movw	r18, r16
			
			// Update display
			if (timer3_flag) {
				timer3_flag = 0;
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 866:	02 c0       	rjmp	.+4      	; 0x86c <main+0xec>
 868:	22 0f       	add	r18, r18
 86a:	33 1f       	adc	r19, r19
 86c:	8a 95       	dec	r24
 86e:	e2 f7       	brpl	.-8      	; 0x868 <main+0xe8>
	// start motor again
	init_motor();
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 870:	f0 e0       	ldi	r31, 0x00	; 0
 872:	ee 0f       	add	r30, r30
 874:	ff 1f       	adc	r31, r31
 876:	ea 5f       	subi	r30, 0xFA	; 250
 878:	fe 4f       	sbci	r31, 0xFE	; 254
 87a:	80 81       	ld	r24, Z
			if (timer3_flag) {
				timer3_flag = 0;
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
				
				if (display_index == 3) {
 87c:	90 e1       	ldi	r25, 0x10	; 16
 87e:	29 9f       	mul	r18, r25
 880:	80 0d       	add	r24, r0
 882:	11 24       	eor	r1, r1
					display_index = 0;
 884:	88 b9       	out	0x08, r24	; 8
 886:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <display_index>
				} else {
					display_index++;
 88a:	83 30       	cpi	r24, 0x03	; 3
 88c:	19 f4       	brne	.+6      	; 0x894 <main+0x114>
 88e:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <display_index>
 892:	aa cf       	rjmp	.-172    	; 0x7e8 <main+0x68>
 894:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <display_index>
				}
			}
			
			
		} else if (STATE == RAMP_DOWN) {
 898:	8f 5f       	subi	r24, 0xFF	; 255
 89a:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <display_index>
 89e:	a4 cf       	rjmp	.-184    	; 0x7e8 <main+0x68>
			// Check if RAMP_DOWN just entered
			if (ramp_down_entered) {
 8a0:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <STATE>
 8a4:	84 30       	cpi	r24, 0x04	; 4
				ramp_down_entered = 0;
 8a6:	09 f0       	breq	.+2      	; 0x8aa <main+0x12a>
 8a8:	9f cf       	rjmp	.-194    	; 0x7e8 <main+0x68>
				
				
			}
			
			
			if (timer3_flag) {	// Dont reset this flag here! 
 8aa:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <ramp_down_entered>
 8ae:	81 11       	cpse	r24, r1
 8b0:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <ramp_down_entered>
 8b4:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
 8b8:	97 cf       	rjmp	.-210    	; 0x7e8 <main+0x68>

000008ba <malloc>:
 8ba:	0f 93       	push	r16
 8bc:	1f 93       	push	r17
 8be:	cf 93       	push	r28
 8c0:	df 93       	push	r29
 8c2:	82 30       	cpi	r24, 0x02	; 2
 8c4:	91 05       	cpc	r25, r1
 8c6:	10 f4       	brcc	.+4      	; 0x8cc <malloc+0x12>
 8c8:	82 e0       	ldi	r24, 0x02	; 2
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	e0 91 67 01 	lds	r30, 0x0167	; 0x800167 <__flp>
 8d0:	f0 91 68 01 	lds	r31, 0x0168	; 0x800168 <__flp+0x1>
 8d4:	20 e0       	ldi	r18, 0x00	; 0
 8d6:	30 e0       	ldi	r19, 0x00	; 0
 8d8:	a0 e0       	ldi	r26, 0x00	; 0
 8da:	b0 e0       	ldi	r27, 0x00	; 0
 8dc:	30 97       	sbiw	r30, 0x00	; 0
 8de:	19 f1       	breq	.+70     	; 0x926 <malloc+0x6c>
 8e0:	40 81       	ld	r20, Z
 8e2:	51 81       	ldd	r21, Z+1	; 0x01
 8e4:	02 81       	ldd	r16, Z+2	; 0x02
 8e6:	13 81       	ldd	r17, Z+3	; 0x03
 8e8:	48 17       	cp	r20, r24
 8ea:	59 07       	cpc	r21, r25
 8ec:	c8 f0       	brcs	.+50     	; 0x920 <malloc+0x66>
 8ee:	84 17       	cp	r24, r20
 8f0:	95 07       	cpc	r25, r21
 8f2:	69 f4       	brne	.+26     	; 0x90e <malloc+0x54>
 8f4:	10 97       	sbiw	r26, 0x00	; 0
 8f6:	31 f0       	breq	.+12     	; 0x904 <malloc+0x4a>
 8f8:	12 96       	adiw	r26, 0x02	; 2
 8fa:	0c 93       	st	X, r16
 8fc:	12 97       	sbiw	r26, 0x02	; 2
 8fe:	13 96       	adiw	r26, 0x03	; 3
 900:	1c 93       	st	X, r17
 902:	27 c0       	rjmp	.+78     	; 0x952 <malloc+0x98>
 904:	00 93 67 01 	sts	0x0167, r16	; 0x800167 <__flp>
 908:	10 93 68 01 	sts	0x0168, r17	; 0x800168 <__flp+0x1>
 90c:	22 c0       	rjmp	.+68     	; 0x952 <malloc+0x98>
 90e:	21 15       	cp	r18, r1
 910:	31 05       	cpc	r19, r1
 912:	19 f0       	breq	.+6      	; 0x91a <malloc+0x60>
 914:	42 17       	cp	r20, r18
 916:	53 07       	cpc	r21, r19
 918:	18 f4       	brcc	.+6      	; 0x920 <malloc+0x66>
 91a:	9a 01       	movw	r18, r20
 91c:	bd 01       	movw	r22, r26
 91e:	ef 01       	movw	r28, r30
 920:	df 01       	movw	r26, r30
 922:	f8 01       	movw	r30, r16
 924:	db cf       	rjmp	.-74     	; 0x8dc <malloc+0x22>
 926:	21 15       	cp	r18, r1
 928:	31 05       	cpc	r19, r1
 92a:	f9 f0       	breq	.+62     	; 0x96a <malloc+0xb0>
 92c:	28 1b       	sub	r18, r24
 92e:	39 0b       	sbc	r19, r25
 930:	24 30       	cpi	r18, 0x04	; 4
 932:	31 05       	cpc	r19, r1
 934:	80 f4       	brcc	.+32     	; 0x956 <malloc+0x9c>
 936:	8a 81       	ldd	r24, Y+2	; 0x02
 938:	9b 81       	ldd	r25, Y+3	; 0x03
 93a:	61 15       	cp	r22, r1
 93c:	71 05       	cpc	r23, r1
 93e:	21 f0       	breq	.+8      	; 0x948 <malloc+0x8e>
 940:	fb 01       	movw	r30, r22
 942:	93 83       	std	Z+3, r25	; 0x03
 944:	82 83       	std	Z+2, r24	; 0x02
 946:	04 c0       	rjmp	.+8      	; 0x950 <malloc+0x96>
 948:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <__flp+0x1>
 94c:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <__flp>
 950:	fe 01       	movw	r30, r28
 952:	32 96       	adiw	r30, 0x02	; 2
 954:	44 c0       	rjmp	.+136    	; 0x9de <malloc+0x124>
 956:	fe 01       	movw	r30, r28
 958:	e2 0f       	add	r30, r18
 95a:	f3 1f       	adc	r31, r19
 95c:	81 93       	st	Z+, r24
 95e:	91 93       	st	Z+, r25
 960:	22 50       	subi	r18, 0x02	; 2
 962:	31 09       	sbc	r19, r1
 964:	39 83       	std	Y+1, r19	; 0x01
 966:	28 83       	st	Y, r18
 968:	3a c0       	rjmp	.+116    	; 0x9de <malloc+0x124>
 96a:	20 91 65 01 	lds	r18, 0x0165	; 0x800165 <__brkval>
 96e:	30 91 66 01 	lds	r19, 0x0166	; 0x800166 <__brkval+0x1>
 972:	23 2b       	or	r18, r19
 974:	41 f4       	brne	.+16     	; 0x986 <malloc+0xcc>
 976:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 97a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 97e:	30 93 66 01 	sts	0x0166, r19	; 0x800166 <__brkval+0x1>
 982:	20 93 65 01 	sts	0x0165, r18	; 0x800165 <__brkval>
 986:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 98a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 98e:	21 15       	cp	r18, r1
 990:	31 05       	cpc	r19, r1
 992:	41 f4       	brne	.+16     	; 0x9a4 <malloc+0xea>
 994:	2d b7       	in	r18, 0x3d	; 61
 996:	3e b7       	in	r19, 0x3e	; 62
 998:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 99c:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 9a0:	24 1b       	sub	r18, r20
 9a2:	35 0b       	sbc	r19, r21
 9a4:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <__brkval>
 9a8:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <__brkval+0x1>
 9ac:	e2 17       	cp	r30, r18
 9ae:	f3 07       	cpc	r31, r19
 9b0:	a0 f4       	brcc	.+40     	; 0x9da <malloc+0x120>
 9b2:	2e 1b       	sub	r18, r30
 9b4:	3f 0b       	sbc	r19, r31
 9b6:	28 17       	cp	r18, r24
 9b8:	39 07       	cpc	r19, r25
 9ba:	78 f0       	brcs	.+30     	; 0x9da <malloc+0x120>
 9bc:	ac 01       	movw	r20, r24
 9be:	4e 5f       	subi	r20, 0xFE	; 254
 9c0:	5f 4f       	sbci	r21, 0xFF	; 255
 9c2:	24 17       	cp	r18, r20
 9c4:	35 07       	cpc	r19, r21
 9c6:	48 f0       	brcs	.+18     	; 0x9da <malloc+0x120>
 9c8:	4e 0f       	add	r20, r30
 9ca:	5f 1f       	adc	r21, r31
 9cc:	50 93 66 01 	sts	0x0166, r21	; 0x800166 <__brkval+0x1>
 9d0:	40 93 65 01 	sts	0x0165, r20	; 0x800165 <__brkval>
 9d4:	81 93       	st	Z+, r24
 9d6:	91 93       	st	Z+, r25
 9d8:	02 c0       	rjmp	.+4      	; 0x9de <malloc+0x124>
 9da:	e0 e0       	ldi	r30, 0x00	; 0
 9dc:	f0 e0       	ldi	r31, 0x00	; 0
 9de:	cf 01       	movw	r24, r30
 9e0:	df 91       	pop	r29
 9e2:	cf 91       	pop	r28
 9e4:	1f 91       	pop	r17
 9e6:	0f 91       	pop	r16
 9e8:	08 95       	ret

000009ea <free>:
 9ea:	cf 93       	push	r28
 9ec:	df 93       	push	r29
 9ee:	00 97       	sbiw	r24, 0x00	; 0
 9f0:	09 f4       	brne	.+2      	; 0x9f4 <free+0xa>
 9f2:	81 c0       	rjmp	.+258    	; 0xaf6 <free+0x10c>
 9f4:	fc 01       	movw	r30, r24
 9f6:	32 97       	sbiw	r30, 0x02	; 2
 9f8:	13 82       	std	Z+3, r1	; 0x03
 9fa:	12 82       	std	Z+2, r1	; 0x02
 9fc:	a0 91 67 01 	lds	r26, 0x0167	; 0x800167 <__flp>
 a00:	b0 91 68 01 	lds	r27, 0x0168	; 0x800168 <__flp+0x1>
 a04:	10 97       	sbiw	r26, 0x00	; 0
 a06:	81 f4       	brne	.+32     	; 0xa28 <free+0x3e>
 a08:	20 81       	ld	r18, Z
 a0a:	31 81       	ldd	r19, Z+1	; 0x01
 a0c:	82 0f       	add	r24, r18
 a0e:	93 1f       	adc	r25, r19
 a10:	20 91 65 01 	lds	r18, 0x0165	; 0x800165 <__brkval>
 a14:	30 91 66 01 	lds	r19, 0x0166	; 0x800166 <__brkval+0x1>
 a18:	28 17       	cp	r18, r24
 a1a:	39 07       	cpc	r19, r25
 a1c:	51 f5       	brne	.+84     	; 0xa72 <free+0x88>
 a1e:	f0 93 66 01 	sts	0x0166, r31	; 0x800166 <__brkval+0x1>
 a22:	e0 93 65 01 	sts	0x0165, r30	; 0x800165 <__brkval>
 a26:	67 c0       	rjmp	.+206    	; 0xaf6 <free+0x10c>
 a28:	ed 01       	movw	r28, r26
 a2a:	20 e0       	ldi	r18, 0x00	; 0
 a2c:	30 e0       	ldi	r19, 0x00	; 0
 a2e:	ce 17       	cp	r28, r30
 a30:	df 07       	cpc	r29, r31
 a32:	40 f4       	brcc	.+16     	; 0xa44 <free+0x5a>
 a34:	4a 81       	ldd	r20, Y+2	; 0x02
 a36:	5b 81       	ldd	r21, Y+3	; 0x03
 a38:	9e 01       	movw	r18, r28
 a3a:	41 15       	cp	r20, r1
 a3c:	51 05       	cpc	r21, r1
 a3e:	f1 f0       	breq	.+60     	; 0xa7c <free+0x92>
 a40:	ea 01       	movw	r28, r20
 a42:	f5 cf       	rjmp	.-22     	; 0xa2e <free+0x44>
 a44:	d3 83       	std	Z+3, r29	; 0x03
 a46:	c2 83       	std	Z+2, r28	; 0x02
 a48:	40 81       	ld	r20, Z
 a4a:	51 81       	ldd	r21, Z+1	; 0x01
 a4c:	84 0f       	add	r24, r20
 a4e:	95 1f       	adc	r25, r21
 a50:	c8 17       	cp	r28, r24
 a52:	d9 07       	cpc	r29, r25
 a54:	59 f4       	brne	.+22     	; 0xa6c <free+0x82>
 a56:	88 81       	ld	r24, Y
 a58:	99 81       	ldd	r25, Y+1	; 0x01
 a5a:	84 0f       	add	r24, r20
 a5c:	95 1f       	adc	r25, r21
 a5e:	02 96       	adiw	r24, 0x02	; 2
 a60:	91 83       	std	Z+1, r25	; 0x01
 a62:	80 83       	st	Z, r24
 a64:	8a 81       	ldd	r24, Y+2	; 0x02
 a66:	9b 81       	ldd	r25, Y+3	; 0x03
 a68:	93 83       	std	Z+3, r25	; 0x03
 a6a:	82 83       	std	Z+2, r24	; 0x02
 a6c:	21 15       	cp	r18, r1
 a6e:	31 05       	cpc	r19, r1
 a70:	29 f4       	brne	.+10     	; 0xa7c <free+0x92>
 a72:	f0 93 68 01 	sts	0x0168, r31	; 0x800168 <__flp+0x1>
 a76:	e0 93 67 01 	sts	0x0167, r30	; 0x800167 <__flp>
 a7a:	3d c0       	rjmp	.+122    	; 0xaf6 <free+0x10c>
 a7c:	e9 01       	movw	r28, r18
 a7e:	fb 83       	std	Y+3, r31	; 0x03
 a80:	ea 83       	std	Y+2, r30	; 0x02
 a82:	49 91       	ld	r20, Y+
 a84:	59 91       	ld	r21, Y+
 a86:	c4 0f       	add	r28, r20
 a88:	d5 1f       	adc	r29, r21
 a8a:	ec 17       	cp	r30, r28
 a8c:	fd 07       	cpc	r31, r29
 a8e:	61 f4       	brne	.+24     	; 0xaa8 <free+0xbe>
 a90:	80 81       	ld	r24, Z
 a92:	91 81       	ldd	r25, Z+1	; 0x01
 a94:	84 0f       	add	r24, r20
 a96:	95 1f       	adc	r25, r21
 a98:	02 96       	adiw	r24, 0x02	; 2
 a9a:	e9 01       	movw	r28, r18
 a9c:	99 83       	std	Y+1, r25	; 0x01
 a9e:	88 83       	st	Y, r24
 aa0:	82 81       	ldd	r24, Z+2	; 0x02
 aa2:	93 81       	ldd	r25, Z+3	; 0x03
 aa4:	9b 83       	std	Y+3, r25	; 0x03
 aa6:	8a 83       	std	Y+2, r24	; 0x02
 aa8:	e0 e0       	ldi	r30, 0x00	; 0
 aaa:	f0 e0       	ldi	r31, 0x00	; 0
 aac:	12 96       	adiw	r26, 0x02	; 2
 aae:	8d 91       	ld	r24, X+
 ab0:	9c 91       	ld	r25, X
 ab2:	13 97       	sbiw	r26, 0x03	; 3
 ab4:	00 97       	sbiw	r24, 0x00	; 0
 ab6:	19 f0       	breq	.+6      	; 0xabe <free+0xd4>
 ab8:	fd 01       	movw	r30, r26
 aba:	dc 01       	movw	r26, r24
 abc:	f7 cf       	rjmp	.-18     	; 0xaac <free+0xc2>
 abe:	8d 91       	ld	r24, X+
 ac0:	9c 91       	ld	r25, X
 ac2:	11 97       	sbiw	r26, 0x01	; 1
 ac4:	9d 01       	movw	r18, r26
 ac6:	2e 5f       	subi	r18, 0xFE	; 254
 ac8:	3f 4f       	sbci	r19, 0xFF	; 255
 aca:	82 0f       	add	r24, r18
 acc:	93 1f       	adc	r25, r19
 ace:	20 91 65 01 	lds	r18, 0x0165	; 0x800165 <__brkval>
 ad2:	30 91 66 01 	lds	r19, 0x0166	; 0x800166 <__brkval+0x1>
 ad6:	28 17       	cp	r18, r24
 ad8:	39 07       	cpc	r19, r25
 ada:	69 f4       	brne	.+26     	; 0xaf6 <free+0x10c>
 adc:	30 97       	sbiw	r30, 0x00	; 0
 ade:	29 f4       	brne	.+10     	; 0xaea <free+0x100>
 ae0:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <__flp+0x1>
 ae4:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <__flp>
 ae8:	02 c0       	rjmp	.+4      	; 0xaee <free+0x104>
 aea:	13 82       	std	Z+3, r1	; 0x03
 aec:	12 82       	std	Z+2, r1	; 0x02
 aee:	b0 93 66 01 	sts	0x0166, r27	; 0x800166 <__brkval+0x1>
 af2:	a0 93 65 01 	sts	0x0165, r26	; 0x800165 <__brkval>
 af6:	df 91       	pop	r29
 af8:	cf 91       	pop	r28
 afa:	08 95       	ret

00000afc <_exit>:
 afc:	f8 94       	cli

00000afe <__stop_program>:
 afe:	ff cf       	rjmp	.-2      	; 0xafe <__stop_program>
