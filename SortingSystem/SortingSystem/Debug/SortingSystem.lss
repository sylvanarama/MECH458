
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00000c48  00000cdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004c  0080011a  0080011a  00000cf6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000cf6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00000d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cac  00000000  00000000  00000ef8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eca  00000000  00000000  00002ba4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea2  00000000  00000000  00003a6e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000470  00000000  00000000  00004910  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a53  00000000  00000000  00004d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cd0  00000000  00000000  000057d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  000064a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	f2 c0       	rjmp	.+484    	; 0x1ea <__vector_1>
   6:	00 00       	nop
   8:	ff c0       	rjmp	.+510    	; 0x208 <__vector_2>
   a:	00 00       	nop
   c:	0c c1       	rjmp	.+536    	; 0x226 <__vector_3>
   e:	00 00       	nop
  10:	23 c1       	rjmp	.+582    	; 0x258 <__vector_4>
  12:	00 00       	nop
  14:	30 c1       	rjmp	.+608    	; 0x276 <__vector_5>
  16:	00 00       	nop
  18:	62 c1       	rjmp	.+708    	; 0x2de <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	aa c0       	rjmp	.+340    	; 0x1aa <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	46 c1       	rjmp	.+652    	; 0x302 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	9e c0       	rjmp	.+316    	; 0x1be <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e8 e4       	ldi	r30, 0x48	; 72
  ac:	fc e0       	ldi	r31, 0x0C	; 12
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	aa 31       	cpi	r26, 0x1A	; 26
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	aa e1       	ldi	r26, 0x1A	; 26
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a6 36       	cpi	r26, 0x66	; 102
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	ba d3       	rcall	.+1908   	; 0x844 <main>
  d0:	b9 c5       	rjmp	.+2930   	; 0xc44 <_exit>

000000d2 <__bad_interrupt>:
  d2:	61 c1       	rjmp	.+706    	; 0x396 <__vector_default>

000000d4 <initItem>:
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	94 d4       	rcall	.+2344   	; 0xa02 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	87 d4       	rcall	.+2318   	; 0xa02 <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <clearQueue>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	99 81       	ldd	r25, Y+1	; 0x01
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	51 f0       	breq	.+20     	; 0x16a <clearQueue+0x22>
 156:	fc 01       	movw	r30, r24
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	37 81       	ldd	r19, Z+7	; 0x07
 15c:	39 83       	std	Y+1, r19	; 0x01
 15e:	28 83       	st	Y, r18
 160:	e8 d4       	rcall	.+2512   	; 0xb32 <free>
 162:	88 81       	ld	r24, Y
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	b1 f7       	brne	.-20     	; 0x156 <clearQueue+0xe>
 16a:	1b 82       	std	Y+3, r1	; 0x03
 16c:	1a 82       	std	Y+2, r1	; 0x02
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <isEmpty>:
 174:	fc 01       	movw	r30, r24
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	23 2b       	or	r18, r19
 180:	11 f0       	breq	.+4      	; 0x186 <isEmpty+0x12>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	08 95       	ret

00000188 <size>:
 188:	dc 01       	movw	r26, r24
 18a:	ed 91       	ld	r30, X+
 18c:	fc 91       	ld	r31, X
 18e:	30 97       	sbiw	r30, 0x00	; 0
 190:	49 f0       	breq	.+18     	; 0x1a4 <size+0x1c>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	01 96       	adiw	r24, 0x01	; 1
 198:	06 80       	ldd	r0, Z+6	; 0x06
 19a:	f7 81       	ldd	r31, Z+7	; 0x07
 19c:	e0 2d       	mov	r30, r0
 19e:	30 97       	sbiw	r30, 0x00	; 0
 1a0:	d1 f7       	brne	.-12     	; 0x196 <size+0xe>
 1a2:	08 95       	ret
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	08 95       	ret

000001aa <__vector_21>:
	PORTC = size(sortedList);
	PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <__vector_32>:
 1be:	1f 92       	push	r1
 1c0:	0f 92       	push	r0
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	0f 92       	push	r0
 1c6:	11 24       	eor	r1, r1
 1c8:	8f 93       	push	r24
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <timer3_flag>
 1d0:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <processing_for_ramp_down>
 1d4:	88 23       	and	r24, r24
 1d6:	19 f0       	breq	.+6      	; 0x1de <__vector_32+0x20>
 1d8:	84 e0       	ldi	r24, 0x04	; 4
 1da:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <__vector_1>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	8f 93       	push	r24
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <OS1_flag>
 1fc:	8f 91       	pop	r24
 1fe:	0f 90       	pop	r0
 200:	0f be       	out	0x3f, r0	; 63
 202:	0f 90       	pop	r0
 204:	1f 90       	pop	r1
 206:	18 95       	reti

00000208 <__vector_2>:
 208:	1f 92       	push	r1
 20a:	0f 92       	push	r0
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	8f 93       	push	r24
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <FER_flag>
 21a:	8f 91       	pop	r24
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <__vector_3>:
 226:	1f 92       	push	r1
 228:	0f 92       	push	r0
 22a:	0f b6       	in	r0, 0x3f	; 63
 22c:	0f 92       	push	r0
 22e:	11 24       	eor	r1, r1
 230:	8f 93       	push	r24
 232:	81 e0       	ldi	r24, 0x01	; 1
 234:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <OS2_flag>
 238:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 23c:	88 23       	and	r24, r24
 23e:	19 f0       	breq	.+6      	; 0x246 <__vector_3+0x20>
 240:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <reflective_present>
 244:	03 c0       	rjmp	.+6      	; 0x24c <__vector_3+0x26>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <reflective_present>
 24c:	8f 91       	pop	r24
 24e:	0f 90       	pop	r0
 250:	0f be       	out	0x3f, r0	; 63
 252:	0f 90       	pop	r0
 254:	1f 90       	pop	r1
 256:	18 95       	reti

00000258 <__vector_4>:
 258:	1f 92       	push	r1
 25a:	0f 92       	push	r0
 25c:	0f b6       	in	r0, 0x3f	; 63
 25e:	0f 92       	push	r0
 260:	11 24       	eor	r1, r1
 262:	8f 93       	push	r24
 264:	81 e0       	ldi	r24, 0x01	; 1
 266:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <OS3_flag>
 26a:	8f 91       	pop	r24
 26c:	0f 90       	pop	r0
 26e:	0f be       	out	0x3f, r0	; 63
 270:	0f 90       	pop	r0
 272:	1f 90       	pop	r1
 274:	18 95       	reti

00000276 <__vector_5>:
 276:	1f 92       	push	r1
 278:	0f 92       	push	r0
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	0f 92       	push	r0
 27e:	11 24       	eor	r1, r1
 280:	2f 93       	push	r18
 282:	3f 93       	push	r19
 284:	8f 93       	push	r24
 286:	9f 93       	push	r25
 288:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 28c:	82 30       	cpi	r24, 0x02	; 2
 28e:	39 f4       	brne	.+14     	; 0x29e <__vector_5+0x28>
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 296:	83 e0       	ldi	r24, 0x03	; 3
 298:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 29c:	0b c0       	rjmp	.+22     	; 0x2b4 <__vector_5+0x3e>
 29e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 2a2:	83 30       	cpi	r24, 0x03	; 3
 2a4:	39 f4       	brne	.+14     	; 0x2b4 <__vector_5+0x3e>
 2a6:	82 e0       	ldi	r24, 0x02	; 2
 2a8:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 2ac:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 2b0:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
 2b4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
 2b8:	88 b9       	out	0x08, r24	; 8
 2ba:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <STATE>
 2be:	28 b1       	in	r18, 0x08	; 8
 2c0:	30 e4       	ldi	r19, 0x40	; 64
 2c2:	93 9f       	mul	r25, r19
 2c4:	c0 01       	movw	r24, r0
 2c6:	11 24       	eor	r1, r1
 2c8:	82 2b       	or	r24, r18
 2ca:	88 b9       	out	0x08, r24	; 8
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	3f 91       	pop	r19
 2d2:	2f 91       	pop	r18
 2d4:	0f 90       	pop	r0
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	0f 90       	pop	r0
 2da:	1f 90       	pop	r1
 2dc:	18 95       	reti

000002de <__vector_6>:
 2de:	1f 92       	push	r1
 2e0:	0f 92       	push	r0
 2e2:	0f b6       	in	r0, 0x3f	; 63
 2e4:	0f 92       	push	r0
 2e6:	11 24       	eor	r1, r1
 2e8:	8f 93       	push	r24
 2ea:	83 e0       	ldi	r24, 0x03	; 3
 2ec:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <STATE_TRANSITION>
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <processing_for_ramp_down>
 2f6:	8f 91       	pop	r24
 2f8:	0f 90       	pop	r0
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	0f 90       	pop	r0
 2fe:	1f 90       	pop	r1
 300:	18 95       	reti

00000302 <__vector_29>:
 302:	1f 92       	push	r1
 304:	0f 92       	push	r0
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	0f 92       	push	r0
 30a:	11 24       	eor	r1, r1
 30c:	0b b6       	in	r0, 0x3b	; 59
 30e:	0f 92       	push	r0
 310:	2f 93       	push	r18
 312:	3f 93       	push	r19
 314:	8f 93       	push	r24
 316:	9f 93       	push	r25
 318:	ef 93       	push	r30
 31a:	ff 93       	push	r31
 31c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 320:	88 23       	and	r24, r24
 322:	61 f1       	breq	.+88     	; 0x37c <__vector_29+0x7a>
 324:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_result+0x1>
 32e:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_result>
 332:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <ADC_result>
 336:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <ADC_result+0x1>
 33a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 33e:	98 2f       	mov	r25, r24
 340:	88 27       	eor	r24, r24
 342:	82 2b       	or	r24, r18
 344:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_result+0x1>
 348:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_result>
 34c:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <ADC_result>
 350:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <ADC_result+0x1>
 354:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <ADC_lowest_val>
 358:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <ADC_lowest_val+0x1>
 35c:	28 17       	cp	r18, r24
 35e:	39 07       	cpc	r19, r25
 360:	40 f4       	brcc	.+16     	; 0x372 <__vector_29+0x70>
 362:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <ADC_result>
 366:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <ADC_result+0x1>
 36a:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 36e:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 372:	ea e7       	ldi	r30, 0x7A	; 122
 374:	f0 e0       	ldi	r31, 0x00	; 0
 376:	80 81       	ld	r24, Z
 378:	80 64       	ori	r24, 0x40	; 64
 37a:	80 83       	st	Z, r24
 37c:	ff 91       	pop	r31
 37e:	ef 91       	pop	r30
 380:	9f 91       	pop	r25
 382:	8f 91       	pop	r24
 384:	3f 91       	pop	r19
 386:	2f 91       	pop	r18
 388:	0f 90       	pop	r0
 38a:	0b be       	out	0x3b, r0	; 59
 38c:	0f 90       	pop	r0
 38e:	0f be       	out	0x3f, r0	; 63
 390:	0f 90       	pop	r0
 392:	1f 90       	pop	r1
 394:	18 95       	reti

00000396 <__vector_default>:
 396:	1f 92       	push	r1
 398:	0f 92       	push	r0
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	0f 92       	push	r0
 39e:	11 24       	eor	r1, r1
 3a0:	0f 90       	pop	r0
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	0f 90       	pop	r0
 3a6:	1f 90       	pop	r1
 3a8:	18 95       	reti

000003aa <init_interrupts>:
 3aa:	8a e9       	ldi	r24, 0x9A	; 154
 3ac:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 3b0:	8a e0       	ldi	r24, 0x0A	; 10
 3b2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 3b6:	8d b3       	in	r24, 0x1d	; 29
 3b8:	8f 63       	ori	r24, 0x3F	; 63
 3ba:	8d bb       	out	0x1d, r24	; 29
 3bc:	08 95       	ret

000003be <init_timer0_pwm>:
 3be:	84 b5       	in	r24, 0x24	; 36
 3c0:	83 68       	ori	r24, 0x83	; 131
 3c2:	84 bd       	out	0x24, r24	; 36
 3c4:	85 b5       	in	r24, 0x25	; 37
 3c6:	82 60       	ori	r24, 0x02	; 2
 3c8:	85 bd       	out	0x25, r24	; 37
 3ca:	80 e8       	ldi	r24, 0x80	; 128
 3cc:	87 bd       	out	0x27, r24	; 39
 3ce:	08 95       	ret

000003d0 <init_timer3>:
 3d0:	e1 e9       	ldi	r30, 0x91	; 145
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	8b 60       	ori	r24, 0x0B	; 11
 3d8:	80 83       	st	Z, r24
 3da:	e1 e7       	ldi	r30, 0x71	; 113
 3dc:	f0 e0       	ldi	r31, 0x00	; 0
 3de:	80 81       	ld	r24, Z
 3e0:	82 60       	ori	r24, 0x02	; 2
 3e2:	80 83       	st	Z, r24
 3e4:	c1 9a       	sbi	0x18, 1	; 24
 3e6:	80 81       	ld	r24, Z
 3e8:	8d 7f       	andi	r24, 0xFD	; 253
 3ea:	80 83       	st	Z, r24
 3ec:	08 95       	ret

000003ee <start_timer3>:
 3ee:	9c 01       	movw	r18, r24
 3f0:	e1 e7       	ldi	r30, 0x71	; 113
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	90 81       	ld	r25, Z
 3f6:	92 60       	ori	r25, 0x02	; 2
 3f8:	90 83       	st	Z, r25
 3fa:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 3fe:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 402:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 406:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 40a:	08 95       	ret

0000040c <init_motor>:
 40c:	84 e0       	ldi	r24, 0x04	; 4
 40e:	85 b9       	out	0x05, r24	; 5
 410:	80 e5       	ldi	r24, 0x50	; 80
 412:	87 bd       	out	0x27, r24	; 39
 414:	08 95       	ret

00000416 <init_ADC>:
 416:	8f ef       	ldi	r24, 0xFF	; 255
 418:	93 e0       	ldi	r25, 0x03	; 3
 41a:	90 93 32 01 	sts	0x0132, r25	; 0x800132 <ADC_result+0x1>
 41e:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <ADC_result>
 422:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 426:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 42a:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <reflective_present>
 42e:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_ready>
 432:	ec e7       	ldi	r30, 0x7C	; 124
 434:	f0 e0       	ldi	r31, 0x00	; 0
 436:	80 81       	ld	r24, Z
 438:	80 64       	ori	r24, 0x40	; 64
 43a:	80 83       	st	Z, r24
 43c:	ea e7       	ldi	r30, 0x7A	; 122
 43e:	f0 e0       	ldi	r31, 0x00	; 0
 440:	80 81       	ld	r24, Z
 442:	82 60       	ori	r24, 0x02	; 2
 444:	80 83       	st	Z, r24
 446:	80 81       	ld	r24, Z
 448:	81 60       	ori	r24, 0x01	; 1
 44a:	80 83       	st	Z, r24
 44c:	80 81       	ld	r24, Z
 44e:	88 60       	ori	r24, 0x08	; 8
 450:	80 83       	st	Z, r24
 452:	80 81       	ld	r24, Z
 454:	80 68       	ori	r24, 0x80	; 128
 456:	80 83       	st	Z, r24
 458:	08 95       	ret

0000045a <init_stepper>:
 45a:	8f ef       	ldi	r24, 0xFF	; 255
 45c:	81 b9       	out	0x01, r24	; 1
 45e:	85 e3       	ldi	r24, 0x35	; 53
 460:	82 b9       	out	0x02, r24	; 2
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <motor_position+0x1>
 46a:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <motor_position>
 46e:	10 92 5b 01 	sts	0x015B, r1	; 0x80015b <stepper_on+0x1>
 472:	10 92 5a 01 	sts	0x015A, r1	; 0x80015a <stepper_on>
 476:	08 95       	ret

00000478 <mTimer>:
 478:	ac 01       	movw	r20, r24
 47a:	e1 e8       	ldi	r30, 0x81	; 129
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	90 81       	ld	r25, Z
 480:	91 60       	ori	r25, 0x01	; 1
 482:	90 83       	st	Z, r25
 484:	90 81       	ld	r25, Z
 486:	98 60       	ori	r25, 0x08	; 8
 488:	90 83       	st	Z, r25
 48a:	88 ee       	ldi	r24, 0xE8	; 232
 48c:	93 e0       	ldi	r25, 0x03	; 3
 48e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 492:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 496:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 49a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 49e:	b1 9a       	sbi	0x16, 1	; 22
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <mTimer+0x38>
 4a6:	b1 9b       	sbis	0x16, 1	; 22
 4a8:	fe cf       	rjmp	.-4      	; 0x4a6 <mTimer+0x2e>
 4aa:	b1 9a       	sbi	0x16, 1	; 22
 4ac:	2f 5f       	subi	r18, 0xFF	; 255
 4ae:	3f 4f       	sbci	r19, 0xFF	; 255
 4b0:	24 17       	cp	r18, r20
 4b2:	35 07       	cpc	r19, r21
 4b4:	1c f4       	brge	.+6      	; 0x4bc <mTimer+0x44>
 4b6:	b1 9b       	sbis	0x16, 1	; 22
 4b8:	f6 cf       	rjmp	.-20     	; 0x4a6 <mTimer+0x2e>
 4ba:	f7 cf       	rjmp	.-18     	; 0x4aa <mTimer+0x32>
 4bc:	08 95       	ret

000004be <stepper_rotate>:
 4be:	cf 92       	push	r12
 4c0:	df 92       	push	r13
 4c2:	ef 92       	push	r14
 4c4:	ff 92       	push	r15
 4c6:	0f 93       	push	r16
 4c8:	1f 93       	push	r17
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	18 16       	cp	r1, r24
 4d0:	19 06       	cpc	r1, r25
 4d2:	0c f0       	brlt	.+2      	; 0x4d6 <stepper_rotate+0x18>
 4d4:	61 c0       	rjmp	.+194    	; 0x598 <stepper_rotate+0xda>
 4d6:	6b 01       	movw	r12, r22
 4d8:	8c 01       	movw	r16, r24
 4da:	c0 e0       	ldi	r28, 0x00	; 0
 4dc:	d0 e0       	ldi	r29, 0x00	; 0
 4de:	0f 2e       	mov	r0, r31
 4e0:	fa e0       	ldi	r31, 0x0A	; 10
 4e2:	ef 2e       	mov	r14, r31
 4e4:	f1 2c       	mov	r15, r1
 4e6:	f0 2d       	mov	r31, r0
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	c8 16       	cp	r12, r24
 4ec:	d1 04       	cpc	r13, r1
 4ee:	d1 f4       	brne	.+52     	; 0x524 <stepper_rotate+0x66>
 4f0:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 4f4:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 4f8:	e3 5f       	subi	r30, 0xF3	; 243
 4fa:	fe 4f       	sbci	r31, 0xFE	; 254
 4fc:	80 81       	ld	r24, Z
 4fe:	82 b9       	out	0x02, r24	; 2
 500:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 504:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 508:	01 96       	adiw	r24, 0x01	; 1
 50a:	83 70       	andi	r24, 0x03	; 3
 50c:	90 78       	andi	r25, 0x80	; 128
 50e:	99 23       	and	r25, r25
 510:	24 f4       	brge	.+8      	; 0x51a <stepper_rotate+0x5c>
 512:	01 97       	sbiw	r24, 0x01	; 1
 514:	8c 6f       	ori	r24, 0xFC	; 252
 516:	9f 6f       	ori	r25, 0xFF	; 255
 518:	01 96       	adiw	r24, 0x01	; 1
 51a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 51e:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 522:	1d c0       	rjmp	.+58     	; 0x55e <stepper_rotate+0xa0>
 524:	8f ef       	ldi	r24, 0xFF	; 255
 526:	c8 16       	cp	r12, r24
 528:	d8 06       	cpc	r13, r24
 52a:	c9 f4       	brne	.+50     	; 0x55e <stepper_rotate+0xa0>
 52c:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <__data_end>
 530:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <__data_end+0x1>
 534:	e7 5f       	subi	r30, 0xF7	; 247
 536:	fe 4f       	sbci	r31, 0xFE	; 254
 538:	80 81       	ld	r24, Z
 53a:	82 b9       	out	0x02, r24	; 2
 53c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
 540:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
 544:	01 96       	adiw	r24, 0x01	; 1
 546:	83 70       	andi	r24, 0x03	; 3
 548:	90 78       	andi	r25, 0x80	; 128
 54a:	99 23       	and	r25, r25
 54c:	24 f4       	brge	.+8      	; 0x556 <stepper_rotate+0x98>
 54e:	01 97       	sbiw	r24, 0x01	; 1
 550:	8c 6f       	ori	r24, 0xFC	; 252
 552:	9f 6f       	ori	r25, 0xFF	; 255
 554:	01 96       	adiw	r24, 0x01	; 1
 556:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
 55a:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
 55e:	c7 01       	movw	r24, r14
 560:	8b df       	rcall	.-234    	; 0x478 <mTimer>
 562:	c4 30       	cpi	r28, 0x04	; 4
 564:	d1 05       	cpc	r29, r1
 566:	3c f4       	brge	.+14     	; 0x576 <stepper_rotate+0xb8>
 568:	86 e0       	ldi	r24, 0x06	; 6
 56a:	e8 16       	cp	r14, r24
 56c:	f1 04       	cpc	r15, r1
 56e:	1c f0       	brlt	.+6      	; 0x576 <stepper_rotate+0xb8>
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	e8 1a       	sub	r14, r24
 574:	f1 08       	sbc	r15, r1
 576:	c8 01       	movw	r24, r16
 578:	8c 1b       	sub	r24, r28
 57a:	9d 0b       	sbc	r25, r29
 57c:	05 97       	sbiw	r24, 0x05	; 5
 57e:	3c f4       	brge	.+14     	; 0x58e <stepper_rotate+0xd0>
 580:	8b e0       	ldi	r24, 0x0B	; 11
 582:	e8 16       	cp	r14, r24
 584:	f1 04       	cpc	r15, r1
 586:	1c f4       	brge	.+6      	; 0x58e <stepper_rotate+0xd0>
 588:	8f ef       	ldi	r24, 0xFF	; 255
 58a:	e8 1a       	sub	r14, r24
 58c:	f8 0a       	sbc	r15, r24
 58e:	21 96       	adiw	r28, 0x01	; 1
 590:	0c 17       	cp	r16, r28
 592:	1d 07       	cpc	r17, r29
 594:	09 f0       	breq	.+2      	; 0x598 <stepper_rotate+0xda>
 596:	a8 cf       	rjmp	.-176    	; 0x4e8 <stepper_rotate+0x2a>
 598:	df 91       	pop	r29
 59a:	cf 91       	pop	r28
 59c:	1f 91       	pop	r17
 59e:	0f 91       	pop	r16
 5a0:	ff 90       	pop	r15
 5a2:	ef 90       	pop	r14
 5a4:	df 90       	pop	r13
 5a6:	cf 90       	pop	r12
 5a8:	08 95       	ret

000005aa <stepper_position>:
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	c8 2f       	mov	r28, r24
 5b0:	d0 e0       	ldi	r29, 0x00	; 0
 5b2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <motor_position>
 5b6:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <motor_position+0x1>
 5ba:	9e 01       	movw	r18, r28
 5bc:	28 1b       	sub	r18, r24
 5be:	39 0b       	sbc	r19, r25
 5c0:	21 30       	cpi	r18, 0x01	; 1
 5c2:	31 05       	cpc	r19, r1
 5c4:	21 f0       	breq	.+8      	; 0x5ce <stepper_position+0x24>
 5c6:	2d 3f       	cpi	r18, 0xFD	; 253
 5c8:	8f ef       	ldi	r24, 0xFF	; 255
 5ca:	38 07       	cpc	r19, r24
 5cc:	31 f4       	brne	.+12     	; 0x5da <stepper_position+0x30>
 5ce:	61 e0       	ldi	r22, 0x01	; 1
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	82 e3       	ldi	r24, 0x32	; 50
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	73 df       	rcall	.-282    	; 0x4be <stepper_rotate>
 5d8:	18 c0       	rjmp	.+48     	; 0x60a <stepper_position+0x60>
 5da:	2f 3f       	cpi	r18, 0xFF	; 255
 5dc:	8f ef       	ldi	r24, 0xFF	; 255
 5de:	38 07       	cpc	r19, r24
 5e0:	19 f0       	breq	.+6      	; 0x5e8 <stepper_position+0x3e>
 5e2:	23 30       	cpi	r18, 0x03	; 3
 5e4:	31 05       	cpc	r19, r1
 5e6:	31 f4       	brne	.+12     	; 0x5f4 <stepper_position+0x4a>
 5e8:	6f ef       	ldi	r22, 0xFF	; 255
 5ea:	7f ef       	ldi	r23, 0xFF	; 255
 5ec:	82 e3       	ldi	r24, 0x32	; 50
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	66 df       	rcall	.-308    	; 0x4be <stepper_rotate>
 5f2:	0b c0       	rjmp	.+22     	; 0x60a <stepper_position+0x60>
 5f4:	22 30       	cpi	r18, 0x02	; 2
 5f6:	31 05       	cpc	r19, r1
 5f8:	19 f0       	breq	.+6      	; 0x600 <stepper_position+0x56>
 5fa:	2e 3f       	cpi	r18, 0xFE	; 254
 5fc:	3f 4f       	sbci	r19, 0xFF	; 255
 5fe:	29 f4       	brne	.+10     	; 0x60a <stepper_position+0x60>
 600:	61 e0       	ldi	r22, 0x01	; 1
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	84 e6       	ldi	r24, 0x64	; 100
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	5a df       	rcall	.-332    	; 0x4be <stepper_rotate>
 60a:	d0 93 34 01 	sts	0x0134, r29	; 0x800134 <motor_position+0x1>
 60e:	c0 93 33 01 	sts	0x0133, r28	; 0x800133 <motor_position>
 612:	df 91       	pop	r29
 614:	cf 91       	pop	r28
 616:	08 95       	ret

00000618 <entry_sensor>:
 618:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <OS1_flag>
 61c:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <item_number>
 620:	8f 5f       	subi	r24, 0xFF	; 255
 622:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <item_number>
 626:	56 dd       	rcall	.-1364   	; 0xd4 <initItem>
 628:	20 91 2d 01 	lds	r18, 0x012D	; 0x80012d <item_number>
 62c:	fc 01       	movw	r30, r24
 62e:	25 83       	std	Z+5, r18	; 0x05
 630:	21 e0       	ldi	r18, 0x01	; 1
 632:	24 83       	std	Z+4, r18	; 0x04
 634:	bc 01       	movw	r22, r24
 636:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 63a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 63e:	60 dd       	rcall	.-1344   	; 0x100 <enqueue>
 640:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 644:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 648:	9f dd       	rcall	.-1218   	; 0x188 <size>
 64a:	88 b9       	out	0x08, r24	; 8
 64c:	47 9a       	sbi	0x08, 7	; 8
 64e:	08 95       	ret

00000650 <metal_sensor>:
 650:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <FER_flag>
 654:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <entryList>
 658:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <entryList+0x1>
 65c:	02 80       	ldd	r0, Z+2	; 0x02
 65e:	f3 81       	ldd	r31, Z+3	; 0x03
 660:	e0 2d       	mov	r30, r0
 662:	81 e0       	ldi	r24, 0x01	; 1
 664:	80 83       	st	Z, r24
 666:	08 95       	ret

00000668 <reflective_sensor>:
 668:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <OS2_flag>
 66c:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <reflective_present>
 670:	88 23       	and	r24, r24
 672:	31 f0       	breq	.+12     	; 0x680 <reflective_sensor+0x18>
 674:	ea e7       	ldi	r30, 0x7A	; 122
 676:	f0 e0       	ldi	r31, 0x00	; 0
 678:	80 81       	ld	r24, Z
 67a:	80 64       	ori	r24, 0x40	; 64
 67c:	80 83       	st	Z, r24
 67e:	08 95       	ret
 680:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 684:	82 30       	cpi	r24, 0x02	; 2
 686:	a1 f4       	brne	.+40     	; 0x6b0 <reflective_sensor+0x48>
 688:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 68c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
 690:	48 dd       	rcall	.-1392   	; 0x122 <dequeue>
 692:	20 91 60 01 	lds	r18, 0x0160	; 0x800160 <ADC_lowest_val>
 696:	30 91 61 01 	lds	r19, 0x0161	; 0x800161 <ADC_lowest_val+0x1>
 69a:	fc 01       	movw	r30, r24
 69c:	32 83       	std	Z+2, r19	; 0x02
 69e:	21 83       	std	Z+1, r18	; 0x01
 6a0:	22 e0       	ldi	r18, 0x02	; 2
 6a2:	24 83       	std	Z+4, r18	; 0x04
 6a4:	bc 01       	movw	r22, r24
 6a6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 6aa:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 6ae:	28 dd       	rcall	.-1456   	; 0x100 <enqueue>
 6b0:	8f ef       	ldi	r24, 0xFF	; 255
 6b2:	93 e0       	ldi	r25, 0x03	; 3
 6b4:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <ADC_lowest_val+0x1>
 6b8:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <ADC_lowest_val>
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <item_ready>
 6c2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 6c6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 6ca:	5e dd       	rcall	.-1348   	; 0x188 <size>
 6cc:	88 b9       	out	0x08, r24	; 8
 6ce:	46 9a       	sbi	0x08, 6	; 8
 6d0:	08 95       	ret

000006d2 <classify_item>:
 6d2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <item_ready>
 6d6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 6da:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 6de:	21 dd       	rcall	.-1470   	; 0x122 <dequeue>
 6e0:	fc 01       	movw	r30, r24
 6e2:	81 81       	ldd	r24, Z+1	; 0x01
 6e4:	92 81       	ldd	r25, Z+2	; 0x02
 6e6:	20 81       	ld	r18, Z
 6e8:	21 11       	cpse	r18, r1
 6ea:	34 c0       	rjmp	.+104    	; 0x754 <classify_item+0x82>
 6ec:	a1 e1       	ldi	r26, 0x11	; 17
 6ee:	b1 e0       	ldi	r27, 0x01	; 1
 6f0:	4d 91       	ld	r20, X+
 6f2:	5c 91       	ld	r21, X
 6f4:	11 97       	sbiw	r26, 0x01	; 1
 6f6:	12 96       	adiw	r26, 0x02	; 2
 6f8:	2d 91       	ld	r18, X+
 6fa:	3c 91       	ld	r19, X
 6fc:	13 97       	sbiw	r26, 0x03	; 3
 6fe:	48 1b       	sub	r20, r24
 700:	59 0b       	sbc	r21, r25
 702:	ba 01       	movw	r22, r20
 704:	22 f4       	brpl	.+8      	; 0x70e <classify_item+0x3c>
 706:	66 27       	eor	r22, r22
 708:	77 27       	eor	r23, r23
 70a:	64 1b       	sub	r22, r20
 70c:	75 0b       	sbc	r23, r21
 70e:	a9 01       	movw	r20, r18
 710:	48 1b       	sub	r20, r24
 712:	59 0b       	sbc	r21, r25
 714:	9a 01       	movw	r18, r20
 716:	22 f4       	brpl	.+8      	; 0x720 <classify_item+0x4e>
 718:	22 27       	eor	r18, r18
 71a:	33 27       	eor	r19, r19
 71c:	24 1b       	sub	r18, r20
 71e:	35 0b       	sbc	r19, r21
 720:	62 17       	cp	r22, r18
 722:	73 07       	cpc	r23, r19
 724:	50 f4       	brcc	.+20     	; 0x73a <classify_item+0x68>
 726:	ad e1       	ldi	r26, 0x1D	; 29
 728:	b1 e0       	ldi	r27, 0x01	; 1
 72a:	8d 91       	ld	r24, X+
 72c:	9c 91       	ld	r25, X
 72e:	11 97       	sbiw	r26, 0x01	; 1
 730:	01 96       	adiw	r24, 0x01	; 1
 732:	8d 93       	st	X+, r24
 734:	9c 93       	st	X, r25
 736:	80 e0       	ldi	r24, 0x00	; 0
 738:	48 c0       	rjmp	.+144    	; 0x7ca <classify_item+0xf8>
 73a:	ad e1       	ldi	r26, 0x1D	; 29
 73c:	b1 e0       	ldi	r27, 0x01	; 1
 73e:	14 96       	adiw	r26, 0x04	; 4
 740:	8d 91       	ld	r24, X+
 742:	9c 91       	ld	r25, X
 744:	15 97       	sbiw	r26, 0x05	; 5
 746:	01 96       	adiw	r24, 0x01	; 1
 748:	15 96       	adiw	r26, 0x05	; 5
 74a:	9c 93       	st	X, r25
 74c:	8e 93       	st	-X, r24
 74e:	14 97       	sbiw	r26, 0x04	; 4
 750:	82 e0       	ldi	r24, 0x02	; 2
 752:	3b c0       	rjmp	.+118    	; 0x7ca <classify_item+0xf8>
 754:	21 30       	cpi	r18, 0x01	; 1
 756:	c1 f5       	brne	.+112    	; 0x7c8 <classify_item+0xf6>
 758:	a1 e1       	ldi	r26, 0x11	; 17
 75a:	b1 e0       	ldi	r27, 0x01	; 1
 75c:	14 96       	adiw	r26, 0x04	; 4
 75e:	4d 91       	ld	r20, X+
 760:	5c 91       	ld	r21, X
 762:	15 97       	sbiw	r26, 0x05	; 5
 764:	16 96       	adiw	r26, 0x06	; 6
 766:	2d 91       	ld	r18, X+
 768:	3c 91       	ld	r19, X
 76a:	17 97       	sbiw	r26, 0x07	; 7
 76c:	48 1b       	sub	r20, r24
 76e:	59 0b       	sbc	r21, r25
 770:	ba 01       	movw	r22, r20
 772:	22 f4       	brpl	.+8      	; 0x77c <classify_item+0xaa>
 774:	66 27       	eor	r22, r22
 776:	77 27       	eor	r23, r23
 778:	64 1b       	sub	r22, r20
 77a:	75 0b       	sbc	r23, r21
 77c:	a9 01       	movw	r20, r18
 77e:	48 1b       	sub	r20, r24
 780:	59 0b       	sbc	r21, r25
 782:	9a 01       	movw	r18, r20
 784:	22 f4       	brpl	.+8      	; 0x78e <classify_item+0xbc>
 786:	22 27       	eor	r18, r18
 788:	33 27       	eor	r19, r19
 78a:	24 1b       	sub	r18, r20
 78c:	35 0b       	sbc	r19, r21
 78e:	62 17       	cp	r22, r18
 790:	73 07       	cpc	r23, r19
 792:	68 f4       	brcc	.+26     	; 0x7ae <classify_item+0xdc>
 794:	ad e1       	ldi	r26, 0x1D	; 29
 796:	b1 e0       	ldi	r27, 0x01	; 1
 798:	16 96       	adiw	r26, 0x06	; 6
 79a:	8d 91       	ld	r24, X+
 79c:	9c 91       	ld	r25, X
 79e:	17 97       	sbiw	r26, 0x07	; 7
 7a0:	01 96       	adiw	r24, 0x01	; 1
 7a2:	17 96       	adiw	r26, 0x07	; 7
 7a4:	9c 93       	st	X, r25
 7a6:	8e 93       	st	-X, r24
 7a8:	16 97       	sbiw	r26, 0x06	; 6
 7aa:	83 e0       	ldi	r24, 0x03	; 3
 7ac:	0e c0       	rjmp	.+28     	; 0x7ca <classify_item+0xf8>
 7ae:	ad e1       	ldi	r26, 0x1D	; 29
 7b0:	b1 e0       	ldi	r27, 0x01	; 1
 7b2:	12 96       	adiw	r26, 0x02	; 2
 7b4:	8d 91       	ld	r24, X+
 7b6:	9c 91       	ld	r25, X
 7b8:	13 97       	sbiw	r26, 0x03	; 3
 7ba:	01 96       	adiw	r24, 0x01	; 1
 7bc:	13 96       	adiw	r26, 0x03	; 3
 7be:	9c 93       	st	X, r25
 7c0:	8e 93       	st	-X, r24
 7c2:	12 97       	sbiw	r26, 0x02	; 2
 7c4:	81 e0       	ldi	r24, 0x01	; 1
 7c6:	01 c0       	rjmp	.+2      	; 0x7ca <classify_item+0xf8>
 7c8:	80 e0       	ldi	r24, 0x00	; 0
 7ca:	83 83       	std	Z+3, r24	; 0x03
 7cc:	83 e0       	ldi	r24, 0x03	; 3
 7ce:	84 83       	std	Z+4, r24	; 0x04
 7d0:	ad e1       	ldi	r26, 0x1D	; 29
 7d2:	b1 e0       	ldi	r27, 0x01	; 1
 7d4:	18 96       	adiw	r26, 0x08	; 8
 7d6:	8d 91       	ld	r24, X+
 7d8:	9c 91       	ld	r25, X
 7da:	19 97       	sbiw	r26, 0x09	; 9
 7dc:	01 96       	adiw	r24, 0x01	; 1
 7de:	19 96       	adiw	r26, 0x09	; 9
 7e0:	9c 93       	st	X, r25
 7e2:	8e 93       	st	-X, r24
 7e4:	18 97       	sbiw	r26, 0x08	; 8
 7e6:	bf 01       	movw	r22, r30
 7e8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 7ec:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 7f0:	87 dc       	rcall	.-1778   	; 0x100 <enqueue>
 7f2:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 7f6:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 7fa:	c6 dc       	rcall	.-1652   	; 0x188 <size>
 7fc:	88 b9       	out	0x08, r24	; 8
 7fe:	45 9a       	sbi	0x08, 5	; 8
 800:	08 95       	ret

00000802 <exit_sensor>:
 802:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <OS3_flag>
 806:	15 b8       	out	0x05, r1	; 5
 808:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 80c:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 810:	88 dc       	rcall	.-1776   	; 0x122 <dequeue>
 812:	bc 01       	movw	r22, r24
 814:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sortedList>
 818:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <sortedList+0x1>
 81c:	71 dc       	rcall	.-1822   	; 0x100 <enqueue>
 81e:	e0 91 35 01 	lds	r30, 0x0135	; 0x800135 <sortedList>
 822:	f0 91 36 01 	lds	r31, 0x0136	; 0x800136 <sortedList+0x1>
 826:	02 80       	ldd	r0, Z+2	; 0x02
 828:	f3 81       	ldd	r31, Z+3	; 0x03
 82a:	e0 2d       	mov	r30, r0
 82c:	83 81       	ldd	r24, Z+3	; 0x03
 82e:	8f 5f       	subi	r24, 0xFF	; 255
 830:	bc de       	rcall	.-648    	; 0x5aa <stepper_position>
 832:	ec dd       	rcall	.-1064   	; 0x40c <init_motor>
 834:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sortedList>
 838:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <sortedList+0x1>
 83c:	a5 dc       	rcall	.-1718   	; 0x188 <size>
 83e:	88 b9       	out	0x08, r24	; 8
 840:	44 9a       	sbi	0x08, 4	; 8
 842:	08 95       	ret

00000844 <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 844:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 846:	8f e8       	ldi	r24, 0x8F	; 143
 848:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 84a:	8f ef       	ldi	r24, 0xFF	; 255
 84c:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 84e:	80 ef       	ldi	r24, 0xF0	; 240
 850:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 852:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 854:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 856:	18 b8       	out	0x08, r1	; 8
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
	init_motor();
 858:	f8 94       	cli
	init_interrupts();
 85a:	dd dd       	rcall	.-1094   	; 0x416 <init_ADC>
 85c:	b0 dd       	rcall	.-1184   	; 0x3be <init_timer0_pwm>
	init_stepper();
 85e:	b8 dd       	rcall	.-1168   	; 0x3d0 <init_timer3>

	// Calibrate ADC before program starts

	//ADC_calibrate();

	entryList = initQueue();
 860:	d5 dd       	rcall	.-1110   	; 0x40c <init_motor>
 862:	a3 dd       	rcall	.-1210   	; 0x3aa <init_interrupts>
 864:	fa dd       	rcall	.-1036   	; 0x45a <init_stepper>
 866:	78 94       	sei
 868:	42 dc       	rcall	.-1916   	; 0xee <initQueue>
	reflectiveList = initQueue();
 86a:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <entryList+0x1>
 86e:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <entryList>
 872:	3d dc       	rcall	.-1926   	; 0xee <initQueue>
	classifiedList = initQueue();
 874:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <reflectiveList+0x1>
 878:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <reflectiveList>
 87c:	38 dc       	rcall	.-1936   	; 0xee <initQueue>
 87e:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <classifiedList+0x1>
	sortedList = initQueue();
 882:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <classifiedList>
 886:	33 dc       	rcall	.-1946   	; 0xee <initQueue>
 888:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <sortedList+0x1>

	STATE = OPERATIONAL;
 88c:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <sortedList>
 890:	82 e0       	ldi	r24, 0x02	; 2
	item_waiting = 0;
 892:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
	item_number = 0;
 896:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <item_waiting>
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 89a:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <item_number>
	PORTC = size(sortedList);
	PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 89e:	c1 e7       	ldi	r28, 0x71	; 113
 8a0:	d0 e0       	ldi	r29, 0x00	; 0
			
			STATE_TRANSITION = NONE;
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
				STATE = OPERATIONAL;
 8a2:	01 e0       	ldi	r16, 0x01	; 1
 8a4:	10 e0       	ldi	r17, 0x00	; 0
 8a6:	68 94       	set
		if (STATE == OPERATIONAL || RAMP_DOWN) {
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
				// start motor
				PORTB =  CW;
 8a8:	ee 24       	eor	r14, r14
 8aa:	e1 f8       	bld	r14, 1
 8ac:	68 94       	set
	// Main Program
	while (1)
	{
				
		// When we trigger ramp down button stay in OPERATIONAL for time of half conveyor
		if (STATE_TRANSITION == RAMP_DOWN_ENTERED) {
 8ae:	ff 24       	eor	r15, r15
 8b0:	f2 f8       	bld	r15, 2
 8b2:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
			// testing
			//PORTC |= 0x02;
			
			STATE_TRANSITION = NONE;
 8b6:	83 30       	cpi	r24, 0x03	; 3
			//ramp_down_entered = 0;
			
			if (STATE == PAUSED) {
 8b8:	69 f4       	brne	.+26     	; 0x8d4 <main+0x90>
 8ba:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <STATE_TRANSITION>
				STATE = OPERATIONAL;
 8be:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
			}
			
			start_timer3(timer3_1sec);		// Good for MOTOR_SPEED = 0x30
 8c2:	83 30       	cpi	r24, 0x03	; 3
 8c4:	11 f4       	brne	.+4      	; 0x8ca <main+0x86>
 8c6:	e0 92 08 01 	sts	0x0108, r14	; 0x800108 <STATE>
 8ca:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
		}
		
		if (STATE == OPERATIONAL || RAMP_DOWN) {
 8ce:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
			
			// Entered OPERATIONAL from PAUSED
			if (STATE_TRANSITION == OPERATIONAL_ENTERED) {
 8d2:	8d dd       	rcall	.-1254   	; 0x3ee <start_timer3>
				// start motor
				PORTB =  CW;
				
				// Disable timer
				TIMSK3 &= 0xFD;
 8d4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
			}	
			
			// Handle flags from sensors
			if(OS1_flag) 
 8d8:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
				entry_sensor();
 8dc:	82 30       	cpi	r24, 0x02	; 2
			if(FER_flag) 
 8de:	21 f4       	brne	.+8      	; 0x8e8 <main+0xa4>
 8e0:	f5 b8       	out	0x05, r15	; 5
				metal_sensor();
 8e2:	88 81       	ld	r24, Y
			if(OS2_flag) 
 8e4:	8d 7f       	andi	r24, 0xFD	; 253
 8e6:	88 83       	st	Y, r24
 8e8:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <OS1_flag>
				reflective_sensor();
 8ec:	81 11       	cpse	r24, r1
			if(item_ready) 
 8ee:	94 de       	rcall	.-728    	; 0x618 <entry_sensor>
 8f0:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <FER_flag>
				classify_item();
 8f4:	81 11       	cpse	r24, r1
 8f6:	ac de       	rcall	.-680    	; 0x650 <metal_sensor>
			if(OS3_flag) 
 8f8:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <OS2_flag>
 8fc:	81 11       	cpse	r24, r1
				exit_sensor();	
 8fe:	b4 de       	rcall	.-664    	; 0x668 <reflective_sensor>
			
		}
		
		if (STATE == PAUSED) {
 900:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <item_ready>
 904:	81 11       	cpse	r24, r1
 906:	e5 de       	rcall	.-566    	; 0x6d2 <classify_item>
			
			// Check if just entering PAUSED
			if (STATE_TRANSITION == PAUSE_ENTERED) {
 908:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <OS3_flag>
 90c:	81 11       	cpse	r24, r1
 90e:	79 df       	rcall	.-270    	; 0x802 <exit_sensor>
				//pause_entered = 0;
				STATE_TRANSITION = NONE;
 910:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				
				// turn off motor
				PORTB =  0;
 914:	83 30       	cpi	r24, 0x03	; 3
				
				// start timer for 1 sec
				start_timer3(timer3_1sec);
 916:	99 f5       	brne	.+102    	; 0x97e <main+0x13a>
 918:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <STATE_TRANSITION>
 91c:	81 30       	cpi	r24, 0x01	; 1
 91e:	41 f4       	brne	.+16     	; 0x930 <main+0xec>
 920:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <STATE_TRANSITION>
			}
			
			// Update display
			if (timer3_flag) {
 924:	15 b8       	out	0x05, r1	; 5
 926:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
				timer3_flag = 0;
 92a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 92e:	5f dd       	rcall	.-1346   	; 0x3ee <start_timer3>
 930:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
 934:	88 23       	and	r24, r24
	PORTC = size(sortedList);
	PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 936:	19 f1       	breq	.+70     	; 0x97e <main+0x13a>
 938:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
 93c:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <display_index>
 940:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
			// Update display
			if (timer3_flag) {
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
 944:	98 01       	movw	r18, r16
 946:	02 c0       	rjmp	.+4      	; 0x94c <main+0x108>
 948:	22 0f       	add	r18, r18
 94a:	33 1f       	adc	r19, r19
	PORTC = size(sortedList);
	PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 94c:	8a 95       	dec	r24
 94e:	e2 f7       	brpl	.-8      	; 0x948 <main+0x104>
 950:	f0 e0       	ldi	r31, 0x00	; 0
 952:	ee 0f       	add	r30, r30
 954:	ff 1f       	adc	r31, r31
 956:	e3 5e       	subi	r30, 0xE3	; 227
				timer3_flag = 0;
				
				// Display: | Al Bl St Wh x x x x |
				display_pieces((1 << display_index), sorted_items_array[display_index]);
				
				if (display_index == 3) {
 958:	fe 4f       	sbci	r31, 0xFE	; 254
 95a:	80 81       	ld	r24, Z
 95c:	90 e1       	ldi	r25, 0x10	; 16
 95e:	29 9f       	mul	r18, r25
					display_index = 0;
 960:	80 0d       	add	r24, r0
 962:	11 24       	eor	r1, r1
 964:	88 b9       	out	0x08, r24	; 8
				} else {
					display_index++;
 966:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
 96a:	83 30       	cpi	r24, 0x03	; 3
 96c:	19 f4       	brne	.+6      	; 0x974 <main+0x130>
 96e:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <display_index>
				}
			}			
		} 
		
		if (STATE == RAMP_DOWN) {
 972:	05 c0       	rjmp	.+10     	; 0x97e <main+0x13a>
 974:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <display_index>
			// testing
			//PORTC |= 0x08;
			
			if (timer3_flag) {	
 978:	8f 5f       	subi	r24, 0xFF	; 255
 97a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <display_index>
				timer3_flag = 0;
 97e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
				
				// Disable timer
				TIMSK3 &= 0xFD;
 982:	84 30       	cpi	r24, 0x04	; 4
 984:	09 f0       	breq	.+2      	; 0x988 <main+0x144>
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 986:	95 cf       	rjmp	.-214    	; 0x8b2 <main+0x6e>
 988:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <timer3_flag>
 98c:	88 23       	and	r24, r24
 98e:	29 f0       	breq	.+10     	; 0x99a <main+0x156>
 990:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <timer3_flag>
 994:	88 81       	ld	r24, Y
				isEmpty(reflectiveList) &&
 996:	8d 7f       	andi	r24, 0xFD	; 253
 998:	88 83       	st	Y, r24
 99a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 99e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
				// Disable timer
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
 9a2:	e8 db       	rcall	.-2096   	; 0x174 <isEmpty>
 9a4:	89 2b       	or	r24, r25
				isEmpty(reflectiveList) &&
				isEmpty(classifiedList) /*&&
 9a6:	09 f4       	brne	.+2      	; 0x9aa <main+0x166>
 9a8:	84 cf       	rjmp	.-248    	; 0x8b2 <main+0x6e>
 9aa:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
				TIMSK3 &= 0xFD;
			}
			
			// If no items in any queue, turn off system
			if (isEmpty(entryList) &&
				isEmpty(reflectiveList) &&
 9ae:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 9b2:	e0 db       	rcall	.-2112   	; 0x174 <isEmpty>
				
				// Turn off motor
				PORTB = 0;
				
				// Disable ADC
				ADCSRA &= ~_BV(ADEN);
 9b4:	89 2b       	or	r24, r25
 9b6:	09 f4       	brne	.+2      	; 0x9ba <main+0x176>
 9b8:	7c cf       	rjmp	.-264    	; 0x8b2 <main+0x6e>
				
				// Disable interrupts
				cli();
				
				// Release resources
				clearQueue(entryList);
 9ba:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 9be:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 9c2:	d8 db       	rcall	.-2128   	; 0x174 <isEmpty>
 9c4:	89 2b       	or	r24, r25
				clearQueue(reflectiveList);
 9c6:	09 f4       	brne	.+2      	; 0x9ca <main+0x186>
 9c8:	74 cf       	rjmp	.-280    	; 0x8b2 <main+0x6e>
 9ca:	15 b8       	out	0x05, r1	; 5
 9cc:	ea e7       	ldi	r30, 0x7A	; 122
 9ce:	f0 e0       	ldi	r31, 0x00	; 0
 9d0:	80 81       	ld	r24, Z
				clearQueue(classifiedList);
 9d2:	8f 77       	andi	r24, 0x7F	; 127
 9d4:	80 83       	st	Z, r24
 9d6:	f8 94       	cli
 9d8:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <entryList>
 9dc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <entryList+0x1>
				clearQueue(sortedList);
 9e0:	b3 db       	rcall	.-2202   	; 0x148 <clearQueue>
 9e2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <reflectiveList>
 9e6:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <reflectiveList+0x1>
 9ea:	ae db       	rcall	.-2212   	; 0x148 <clearQueue>
 9ec:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <classifiedList>
 9f0:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <classifiedList+0x1>
 9f4:	a9 db       	rcall	.-2222   	; 0x148 <clearQueue>
 9f6:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <sortedList>
 9fa:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <sortedList+0x1>
 9fe:	a4 db       	rcall	.-2232   	; 0x148 <clearQueue>
 a00:	55 cf       	rjmp	.-342    	; 0x8ac <main+0x68>

00000a02 <malloc>:
 a02:	0f 93       	push	r16
 a04:	1f 93       	push	r17
 a06:	cf 93       	push	r28
 a08:	df 93       	push	r29
 a0a:	82 30       	cpi	r24, 0x02	; 2
 a0c:	91 05       	cpc	r25, r1
 a0e:	10 f4       	brcc	.+4      	; 0xa14 <malloc+0x12>
 a10:	82 e0       	ldi	r24, 0x02	; 2
 a12:	90 e0       	ldi	r25, 0x00	; 0
 a14:	e0 91 64 01 	lds	r30, 0x0164	; 0x800164 <__flp>
 a18:	f0 91 65 01 	lds	r31, 0x0165	; 0x800165 <__flp+0x1>
 a1c:	20 e0       	ldi	r18, 0x00	; 0
 a1e:	30 e0       	ldi	r19, 0x00	; 0
 a20:	a0 e0       	ldi	r26, 0x00	; 0
 a22:	b0 e0       	ldi	r27, 0x00	; 0
 a24:	30 97       	sbiw	r30, 0x00	; 0
 a26:	19 f1       	breq	.+70     	; 0xa6e <malloc+0x6c>
 a28:	40 81       	ld	r20, Z
 a2a:	51 81       	ldd	r21, Z+1	; 0x01
 a2c:	02 81       	ldd	r16, Z+2	; 0x02
 a2e:	13 81       	ldd	r17, Z+3	; 0x03
 a30:	48 17       	cp	r20, r24
 a32:	59 07       	cpc	r21, r25
 a34:	c8 f0       	brcs	.+50     	; 0xa68 <malloc+0x66>
 a36:	84 17       	cp	r24, r20
 a38:	95 07       	cpc	r25, r21
 a3a:	69 f4       	brne	.+26     	; 0xa56 <malloc+0x54>
 a3c:	10 97       	sbiw	r26, 0x00	; 0
 a3e:	31 f0       	breq	.+12     	; 0xa4c <malloc+0x4a>
 a40:	12 96       	adiw	r26, 0x02	; 2
 a42:	0c 93       	st	X, r16
 a44:	12 97       	sbiw	r26, 0x02	; 2
 a46:	13 96       	adiw	r26, 0x03	; 3
 a48:	1c 93       	st	X, r17
 a4a:	27 c0       	rjmp	.+78     	; 0xa9a <malloc+0x98>
 a4c:	00 93 64 01 	sts	0x0164, r16	; 0x800164 <__flp>
 a50:	10 93 65 01 	sts	0x0165, r17	; 0x800165 <__flp+0x1>
 a54:	22 c0       	rjmp	.+68     	; 0xa9a <malloc+0x98>
 a56:	21 15       	cp	r18, r1
 a58:	31 05       	cpc	r19, r1
 a5a:	19 f0       	breq	.+6      	; 0xa62 <malloc+0x60>
 a5c:	42 17       	cp	r20, r18
 a5e:	53 07       	cpc	r21, r19
 a60:	18 f4       	brcc	.+6      	; 0xa68 <malloc+0x66>
 a62:	9a 01       	movw	r18, r20
 a64:	bd 01       	movw	r22, r26
 a66:	ef 01       	movw	r28, r30
 a68:	df 01       	movw	r26, r30
 a6a:	f8 01       	movw	r30, r16
 a6c:	db cf       	rjmp	.-74     	; 0xa24 <malloc+0x22>
 a6e:	21 15       	cp	r18, r1
 a70:	31 05       	cpc	r19, r1
 a72:	f9 f0       	breq	.+62     	; 0xab2 <malloc+0xb0>
 a74:	28 1b       	sub	r18, r24
 a76:	39 0b       	sbc	r19, r25
 a78:	24 30       	cpi	r18, 0x04	; 4
 a7a:	31 05       	cpc	r19, r1
 a7c:	80 f4       	brcc	.+32     	; 0xa9e <malloc+0x9c>
 a7e:	8a 81       	ldd	r24, Y+2	; 0x02
 a80:	9b 81       	ldd	r25, Y+3	; 0x03
 a82:	61 15       	cp	r22, r1
 a84:	71 05       	cpc	r23, r1
 a86:	21 f0       	breq	.+8      	; 0xa90 <malloc+0x8e>
 a88:	fb 01       	movw	r30, r22
 a8a:	93 83       	std	Z+3, r25	; 0x03
 a8c:	82 83       	std	Z+2, r24	; 0x02
 a8e:	04 c0       	rjmp	.+8      	; 0xa98 <malloc+0x96>
 a90:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <__flp+0x1>
 a94:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__flp>
 a98:	fe 01       	movw	r30, r28
 a9a:	32 96       	adiw	r30, 0x02	; 2
 a9c:	44 c0       	rjmp	.+136    	; 0xb26 <malloc+0x124>
 a9e:	fe 01       	movw	r30, r28
 aa0:	e2 0f       	add	r30, r18
 aa2:	f3 1f       	adc	r31, r19
 aa4:	81 93       	st	Z+, r24
 aa6:	91 93       	st	Z+, r25
 aa8:	22 50       	subi	r18, 0x02	; 2
 aaa:	31 09       	sbc	r19, r1
 aac:	39 83       	std	Y+1, r19	; 0x01
 aae:	28 83       	st	Y, r18
 ab0:	3a c0       	rjmp	.+116    	; 0xb26 <malloc+0x124>
 ab2:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 ab6:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 aba:	23 2b       	or	r18, r19
 abc:	41 f4       	brne	.+16     	; 0xace <malloc+0xcc>
 abe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 ac2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 ac6:	30 93 63 01 	sts	0x0163, r19	; 0x800163 <__brkval+0x1>
 aca:	20 93 62 01 	sts	0x0162, r18	; 0x800162 <__brkval>
 ace:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 ad2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 ad6:	21 15       	cp	r18, r1
 ad8:	31 05       	cpc	r19, r1
 ada:	41 f4       	brne	.+16     	; 0xaec <malloc+0xea>
 adc:	2d b7       	in	r18, 0x3d	; 61
 ade:	3e b7       	in	r19, 0x3e	; 62
 ae0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 ae4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 ae8:	24 1b       	sub	r18, r20
 aea:	35 0b       	sbc	r19, r21
 aec:	e0 91 62 01 	lds	r30, 0x0162	; 0x800162 <__brkval>
 af0:	f0 91 63 01 	lds	r31, 0x0163	; 0x800163 <__brkval+0x1>
 af4:	e2 17       	cp	r30, r18
 af6:	f3 07       	cpc	r31, r19
 af8:	a0 f4       	brcc	.+40     	; 0xb22 <malloc+0x120>
 afa:	2e 1b       	sub	r18, r30
 afc:	3f 0b       	sbc	r19, r31
 afe:	28 17       	cp	r18, r24
 b00:	39 07       	cpc	r19, r25
 b02:	78 f0       	brcs	.+30     	; 0xb22 <malloc+0x120>
 b04:	ac 01       	movw	r20, r24
 b06:	4e 5f       	subi	r20, 0xFE	; 254
 b08:	5f 4f       	sbci	r21, 0xFF	; 255
 b0a:	24 17       	cp	r18, r20
 b0c:	35 07       	cpc	r19, r21
 b0e:	48 f0       	brcs	.+18     	; 0xb22 <malloc+0x120>
 b10:	4e 0f       	add	r20, r30
 b12:	5f 1f       	adc	r21, r31
 b14:	50 93 63 01 	sts	0x0163, r21	; 0x800163 <__brkval+0x1>
 b18:	40 93 62 01 	sts	0x0162, r20	; 0x800162 <__brkval>
 b1c:	81 93       	st	Z+, r24
 b1e:	91 93       	st	Z+, r25
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <malloc+0x124>
 b22:	e0 e0       	ldi	r30, 0x00	; 0
 b24:	f0 e0       	ldi	r31, 0x00	; 0
 b26:	cf 01       	movw	r24, r30
 b28:	df 91       	pop	r29
 b2a:	cf 91       	pop	r28
 b2c:	1f 91       	pop	r17
 b2e:	0f 91       	pop	r16
 b30:	08 95       	ret

00000b32 <free>:
 b32:	cf 93       	push	r28
 b34:	df 93       	push	r29
 b36:	00 97       	sbiw	r24, 0x00	; 0
 b38:	09 f4       	brne	.+2      	; 0xb3c <free+0xa>
 b3a:	81 c0       	rjmp	.+258    	; 0xc3e <free+0x10c>
 b3c:	fc 01       	movw	r30, r24
 b3e:	32 97       	sbiw	r30, 0x02	; 2
 b40:	13 82       	std	Z+3, r1	; 0x03
 b42:	12 82       	std	Z+2, r1	; 0x02
 b44:	a0 91 64 01 	lds	r26, 0x0164	; 0x800164 <__flp>
 b48:	b0 91 65 01 	lds	r27, 0x0165	; 0x800165 <__flp+0x1>
 b4c:	10 97       	sbiw	r26, 0x00	; 0
 b4e:	81 f4       	brne	.+32     	; 0xb70 <free+0x3e>
 b50:	20 81       	ld	r18, Z
 b52:	31 81       	ldd	r19, Z+1	; 0x01
 b54:	82 0f       	add	r24, r18
 b56:	93 1f       	adc	r25, r19
 b58:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 b5c:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 b60:	28 17       	cp	r18, r24
 b62:	39 07       	cpc	r19, r25
 b64:	51 f5       	brne	.+84     	; 0xbba <free+0x88>
 b66:	f0 93 63 01 	sts	0x0163, r31	; 0x800163 <__brkval+0x1>
 b6a:	e0 93 62 01 	sts	0x0162, r30	; 0x800162 <__brkval>
 b6e:	67 c0       	rjmp	.+206    	; 0xc3e <free+0x10c>
 b70:	ed 01       	movw	r28, r26
 b72:	20 e0       	ldi	r18, 0x00	; 0
 b74:	30 e0       	ldi	r19, 0x00	; 0
 b76:	ce 17       	cp	r28, r30
 b78:	df 07       	cpc	r29, r31
 b7a:	40 f4       	brcc	.+16     	; 0xb8c <free+0x5a>
 b7c:	4a 81       	ldd	r20, Y+2	; 0x02
 b7e:	5b 81       	ldd	r21, Y+3	; 0x03
 b80:	9e 01       	movw	r18, r28
 b82:	41 15       	cp	r20, r1
 b84:	51 05       	cpc	r21, r1
 b86:	f1 f0       	breq	.+60     	; 0xbc4 <free+0x92>
 b88:	ea 01       	movw	r28, r20
 b8a:	f5 cf       	rjmp	.-22     	; 0xb76 <free+0x44>
 b8c:	d3 83       	std	Z+3, r29	; 0x03
 b8e:	c2 83       	std	Z+2, r28	; 0x02
 b90:	40 81       	ld	r20, Z
 b92:	51 81       	ldd	r21, Z+1	; 0x01
 b94:	84 0f       	add	r24, r20
 b96:	95 1f       	adc	r25, r21
 b98:	c8 17       	cp	r28, r24
 b9a:	d9 07       	cpc	r29, r25
 b9c:	59 f4       	brne	.+22     	; 0xbb4 <free+0x82>
 b9e:	88 81       	ld	r24, Y
 ba0:	99 81       	ldd	r25, Y+1	; 0x01
 ba2:	84 0f       	add	r24, r20
 ba4:	95 1f       	adc	r25, r21
 ba6:	02 96       	adiw	r24, 0x02	; 2
 ba8:	91 83       	std	Z+1, r25	; 0x01
 baa:	80 83       	st	Z, r24
 bac:	8a 81       	ldd	r24, Y+2	; 0x02
 bae:	9b 81       	ldd	r25, Y+3	; 0x03
 bb0:	93 83       	std	Z+3, r25	; 0x03
 bb2:	82 83       	std	Z+2, r24	; 0x02
 bb4:	21 15       	cp	r18, r1
 bb6:	31 05       	cpc	r19, r1
 bb8:	29 f4       	brne	.+10     	; 0xbc4 <free+0x92>
 bba:	f0 93 65 01 	sts	0x0165, r31	; 0x800165 <__flp+0x1>
 bbe:	e0 93 64 01 	sts	0x0164, r30	; 0x800164 <__flp>
 bc2:	3d c0       	rjmp	.+122    	; 0xc3e <free+0x10c>
 bc4:	e9 01       	movw	r28, r18
 bc6:	fb 83       	std	Y+3, r31	; 0x03
 bc8:	ea 83       	std	Y+2, r30	; 0x02
 bca:	49 91       	ld	r20, Y+
 bcc:	59 91       	ld	r21, Y+
 bce:	c4 0f       	add	r28, r20
 bd0:	d5 1f       	adc	r29, r21
 bd2:	ec 17       	cp	r30, r28
 bd4:	fd 07       	cpc	r31, r29
 bd6:	61 f4       	brne	.+24     	; 0xbf0 <free+0xbe>
 bd8:	80 81       	ld	r24, Z
 bda:	91 81       	ldd	r25, Z+1	; 0x01
 bdc:	84 0f       	add	r24, r20
 bde:	95 1f       	adc	r25, r21
 be0:	02 96       	adiw	r24, 0x02	; 2
 be2:	e9 01       	movw	r28, r18
 be4:	99 83       	std	Y+1, r25	; 0x01
 be6:	88 83       	st	Y, r24
 be8:	82 81       	ldd	r24, Z+2	; 0x02
 bea:	93 81       	ldd	r25, Z+3	; 0x03
 bec:	9b 83       	std	Y+3, r25	; 0x03
 bee:	8a 83       	std	Y+2, r24	; 0x02
 bf0:	e0 e0       	ldi	r30, 0x00	; 0
 bf2:	f0 e0       	ldi	r31, 0x00	; 0
 bf4:	12 96       	adiw	r26, 0x02	; 2
 bf6:	8d 91       	ld	r24, X+
 bf8:	9c 91       	ld	r25, X
 bfa:	13 97       	sbiw	r26, 0x03	; 3
 bfc:	00 97       	sbiw	r24, 0x00	; 0
 bfe:	19 f0       	breq	.+6      	; 0xc06 <free+0xd4>
 c00:	fd 01       	movw	r30, r26
 c02:	dc 01       	movw	r26, r24
 c04:	f7 cf       	rjmp	.-18     	; 0xbf4 <free+0xc2>
 c06:	8d 91       	ld	r24, X+
 c08:	9c 91       	ld	r25, X
 c0a:	11 97       	sbiw	r26, 0x01	; 1
 c0c:	9d 01       	movw	r18, r26
 c0e:	2e 5f       	subi	r18, 0xFE	; 254
 c10:	3f 4f       	sbci	r19, 0xFF	; 255
 c12:	82 0f       	add	r24, r18
 c14:	93 1f       	adc	r25, r19
 c16:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__brkval>
 c1a:	30 91 63 01 	lds	r19, 0x0163	; 0x800163 <__brkval+0x1>
 c1e:	28 17       	cp	r18, r24
 c20:	39 07       	cpc	r19, r25
 c22:	69 f4       	brne	.+26     	; 0xc3e <free+0x10c>
 c24:	30 97       	sbiw	r30, 0x00	; 0
 c26:	29 f4       	brne	.+10     	; 0xc32 <free+0x100>
 c28:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <__flp+0x1>
 c2c:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <__flp>
 c30:	02 c0       	rjmp	.+4      	; 0xc36 <free+0x104>
 c32:	13 82       	std	Z+3, r1	; 0x03
 c34:	12 82       	std	Z+2, r1	; 0x02
 c36:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <__brkval+0x1>
 c3a:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <__brkval>
 c3e:	df 91       	pop	r29
 c40:	cf 91       	pop	r28
 c42:	08 95       	ret

00000c44 <_exit>:
 c44:	f8 94       	cli

00000c46 <__stop_program>:
 c46:	ff cf       	rjmp	.-2      	; 0xc46 <__stop_program>
