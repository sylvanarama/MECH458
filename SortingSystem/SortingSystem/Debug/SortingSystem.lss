
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000d88  00000e1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d88  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000047  00800120  00800120  00000e3c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  00000eac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ca1  00000000  00000000  00001034  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ee4  00000000  00000000  00002cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e52  00000000  00000000  00003bb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000484  00000000  00000000  00004a0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a0d  00000000  00000000  00004e90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c0c  00000000  00000000  0000589d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  000064a9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	f2 c0       	rjmp	.+484    	; 0x1ea <__vector_1>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	00 c4       	rjmp	.+2048   	; 0x80e <__vector_3>
   e:	00 00       	nop
  10:	fd c0       	rjmp	.+506    	; 0x20c <__vector_4>
  12:	00 00       	nop
  14:	0b c1       	rjmp	.+534    	; 0x22c <__vector_5>
  16:	00 00       	nop
  18:	2c c1       	rjmp	.+600    	; 0x272 <__vector_6>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	aa c0       	rjmp	.+340    	; 0x1aa <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	0f c1       	rjmp	.+542    	; 0x294 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	9e c0       	rjmp	.+316    	; 0x1be <__vector_32>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e8 e8       	ldi	r30, 0x88	; 136
  ac:	fd e0       	ldi	r31, 0x0D	; 13
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a0 32       	cpi	r26, 0x20	; 32
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a0 e2       	ldi	r26, 0x20	; 32
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a7 36       	cpi	r26, 0x67	; 103
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	4e d4       	rcall	.+2204   	; 0x96c <main>
  d0:	59 c6       	rjmp	.+3250   	; 0xd84 <_exit>

000000d2 <__bad_interrupt>:
  d2:	2a c1       	rjmp	.+596    	; 0x328 <__vector_default>

000000d4 <initItem>:
}

char itemType(item* i){
	i->type = i->metal + i->reflective;
	return (i->type);
}
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	34 d5       	rcall	.+2664   	; 0xb42 <malloc>
  da:	fc 01       	movw	r30, r24
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
  e0:	10 82       	st	Z, r1
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
  e6:	13 82       	std	Z+3, r1	; 0x03
  e8:	14 82       	std	Z+4, r1	; 0x04
  ea:	15 82       	std	Z+5, r1	; 0x05
  ec:	08 95       	ret

000000ee <initQueue>:
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	27 d5       	rcall	.+2638   	; 0xb42 <malloc>
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
  fe:	08 95       	ret

00000100 <enqueue>:
 100:	fc 01       	movw	r30, r24
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:
 122:	dc 01       	movw	r26, r24
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	39 f0       	breq	.+14     	; 0x13c <dequeue+0x1a>
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
 138:	89 2b       	or	r24, r25
 13a:	21 f4       	brne	.+8      	; 0x144 <dequeue+0x22>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
 144:	cf 01       	movw	r24, r30
 146:	08 95       	ret

00000148 <clearQueue>:
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	ec 01       	movw	r28, r24
 14e:	88 81       	ld	r24, Y
 150:	99 81       	ldd	r25, Y+1	; 0x01
 152:	00 97       	sbiw	r24, 0x00	; 0
 154:	51 f0       	breq	.+20     	; 0x16a <clearQueue+0x22>
 156:	fc 01       	movw	r30, r24
 158:	26 81       	ldd	r18, Z+6	; 0x06
 15a:	37 81       	ldd	r19, Z+7	; 0x07
 15c:	39 83       	std	Y+1, r19	; 0x01
 15e:	28 83       	st	Y, r18
 160:	88 d5       	rcall	.+2832   	; 0xc72 <free>
 162:	88 81       	ld	r24, Y
 164:	99 81       	ldd	r25, Y+1	; 0x01
 166:	00 97       	sbiw	r24, 0x00	; 0
 168:	b1 f7       	brne	.-20     	; 0x156 <clearQueue+0xe>
 16a:	1b 82       	std	Y+3, r1	; 0x03
 16c:	1a 82       	std	Y+2, r1	; 0x02
 16e:	df 91       	pop	r29
 170:	cf 91       	pop	r28
 172:	08 95       	ret

00000174 <isEmpty>:
/**************************************************************************************
* DESC: Checks to see whether the queue is empty or not
* RETURNS: 1:if the queue is empty, and 0:if the queue is NOT empty
*/
/* Check to see if the queue is empty */
int isEmpty(queue* q){
 174:	fc 01       	movw	r30, r24
	return(q->head == NULL);
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	20 81       	ld	r18, Z
 17c:	31 81       	ldd	r19, Z+1	; 0x01
 17e:	23 2b       	or	r18, r19
 180:	11 f0       	breq	.+4      	; 0x186 <isEmpty+0x12>
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
}//isEmpty
 186:	08 95       	ret

00000188 <size>:
/**************************************************************************************
* DESC: Obtains the number of links in the queue
* RETURNS: An integer with the number of links in the queue
*/
int size(queue* q){
	item* temp = q->head;			
 188:	dc 01       	movw	r26, r24
 18a:	ed 91       	ld	r30, X+
 18c:	fc 91       	ld	r31, X
	int numItems = 0;

	while(temp != NULL){
 18e:	30 97       	sbiw	r30, 0x00	; 0
 190:	49 f0       	breq	.+18     	; 0x1a4 <size+0x1c>
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	90 e0       	ldi	r25, 0x00	; 0
		numItems++;
 196:	01 96       	adiw	r24, 0x01	; 1
		temp = temp->next;
 198:	06 80       	ldd	r0, Z+6	; 0x06
 19a:	f7 81       	ldd	r31, Z+7	; 0x07
 19c:	e0 2d       	mov	r30, r0
*/
int size(queue* q){
	item* temp = q->head;			
	int numItems = 0;

	while(temp != NULL){
 19e:	30 97       	sbiw	r30, 0x00	; 0
 1a0:	d1 f7       	brne	.-12     	; 0x196 <size+0xe>
 1a2:	08 95       	ret
* DESC: Obtains the number of links in the queue
* RETURNS: An integer with the number of links in the queue
*/
int size(queue* q){
	item* temp = q->head;			
	int numItems = 0;
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	90 e0       	ldi	r25, 0x00	; 0
		numItems++;
		temp = temp->next;
	}/*while*/
	
	return(numItems);
}//size
 1a8:	08 95       	ret

000001aa <__vector_21>:
	PORTC = size(sortedList);
	PORTC |= 0x10;
}

void display_pieces(uint8_t type, uint8_t amount) {
	PORTC = (type << 4) + amount;
 1aa:	1f 92       	push	r1
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <__vector_32>:
 1be:	1f 92       	push	r1
 1c0:	0f 92       	push	r0
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	0f 92       	push	r0
 1c6:	11 24       	eor	r1, r1
 1c8:	8f 93       	push	r24
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <timer3_flag>
 1d0:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <processing_for_ramp_down>
 1d4:	88 23       	and	r24, r24
 1d6:	19 f0       	breq	.+6      	; 0x1de <__vector_32+0x20>
 1d8:	84 e0       	ldi	r24, 0x04	; 4
 1da:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 1de:	8f 91       	pop	r24
 1e0:	0f 90       	pop	r0
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	0f 90       	pop	r0
 1e6:	1f 90       	pop	r1
 1e8:	18 95       	reti

000001ea <__vector_1>:
 1ea:	1f 92       	push	r1
 1ec:	0f 92       	push	r0
 1ee:	0f b6       	in	r0, 0x3f	; 63
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	8f 93       	push	r24
 1f6:	80 e1       	ldi	r24, 0x10	; 16
 1f8:	88 b9       	out	0x08, r24	; 8
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <OS1_flag>
 200:	8f 91       	pop	r24
 202:	0f 90       	pop	r0
 204:	0f be       	out	0x3f, r0	; 63
 206:	0f 90       	pop	r0
 208:	1f 90       	pop	r1
 20a:	18 95       	reti

0000020c <__vector_4>:
 20c:	1f 92       	push	r1
 20e:	0f 92       	push	r0
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	0f 92       	push	r0
 214:	11 24       	eor	r1, r1
 216:	8f 93       	push	r24
 218:	47 9a       	sbi	0x08, 7	; 8
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <OS3_flag>
 220:	8f 91       	pop	r24
 222:	0f 90       	pop	r0
 224:	0f be       	out	0x3f, r0	; 63
 226:	0f 90       	pop	r0
 228:	1f 90       	pop	r1
 22a:	18 95       	reti

0000022c <__vector_5>:
 22c:	1f 92       	push	r1
 22e:	0f 92       	push	r0
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	0f 92       	push	r0
 234:	11 24       	eor	r1, r1
 236:	8f 93       	push	r24
 238:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	39 f4       	brne	.+14     	; 0x24e <__vector_5+0x22>
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <pause_entered>
 246:	83 e0       	ldi	r24, 0x03	; 3
 248:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 24c:	0c c0       	rjmp	.+24     	; 0x266 <__vector_5+0x3a>
 24e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 252:	83 30       	cpi	r24, 0x03	; 3
 254:	41 f4       	brne	.+16     	; 0x266 <__vector_5+0x3a>
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <operational_entered>
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 262:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <display_index>
 266:	8f 91       	pop	r24
 268:	0f 90       	pop	r0
 26a:	0f be       	out	0x3f, r0	; 63
 26c:	0f 90       	pop	r0
 26e:	1f 90       	pop	r1
 270:	18 95       	reti

00000272 <__vector_6>:
 272:	1f 92       	push	r1
 274:	0f 92       	push	r0
 276:	0f b6       	in	r0, 0x3f	; 63
 278:	0f 92       	push	r0
 27a:	11 24       	eor	r1, r1
 27c:	8f 93       	push	r24
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <ramp_down_entered>
 284:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <processing_for_ramp_down>
 288:	8f 91       	pop	r24
 28a:	0f 90       	pop	r0
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	0f 90       	pop	r0
 290:	1f 90       	pop	r1
 292:	18 95       	reti

00000294 <__vector_29>:
 294:	1f 92       	push	r1
 296:	0f 92       	push	r0
 298:	0f b6       	in	r0, 0x3f	; 63
 29a:	0f 92       	push	r0
 29c:	11 24       	eor	r1, r1
 29e:	0b b6       	in	r0, 0x3b	; 59
 2a0:	0f 92       	push	r0
 2a2:	2f 93       	push	r18
 2a4:	3f 93       	push	r19
 2a6:	8f 93       	push	r24
 2a8:	9f 93       	push	r25
 2aa:	ef 93       	push	r30
 2ac:	ff 93       	push	r31
 2ae:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 2b2:	88 23       	and	r24, r24
 2b4:	61 f1       	breq	.+88     	; 0x30e <__vector_29+0x7a>
 2b6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <ADC_result+0x1>
 2c0:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <ADC_result>
 2c4:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <ADC_result>
 2c8:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <ADC_result+0x1>
 2cc:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2d0:	98 2f       	mov	r25, r24
 2d2:	88 27       	eor	r24, r24
 2d4:	82 2b       	or	r24, r18
 2d6:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <ADC_result+0x1>
 2da:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <ADC_result>
 2de:	20 91 15 01 	lds	r18, 0x0115	; 0x800115 <ADC_result>
 2e2:	30 91 16 01 	lds	r19, 0x0116	; 0x800116 <ADC_result+0x1>
 2e6:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ADC_lowest_val>
 2ea:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <ADC_lowest_val+0x1>
 2ee:	28 17       	cp	r18, r24
 2f0:	39 07       	cpc	r19, r25
 2f2:	40 f4       	brcc	.+16     	; 0x304 <__vector_29+0x70>
 2f4:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <ADC_result>
 2f8:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <ADC_result+0x1>
 2fc:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <ADC_lowest_val+0x1>
 300:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <ADC_lowest_val>
 304:	ea e7       	ldi	r30, 0x7A	; 122
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	80 64       	ori	r24, 0x40	; 64
 30c:	80 83       	st	Z, r24
 30e:	ff 91       	pop	r31
 310:	ef 91       	pop	r30
 312:	9f 91       	pop	r25
 314:	8f 91       	pop	r24
 316:	3f 91       	pop	r19
 318:	2f 91       	pop	r18
 31a:	0f 90       	pop	r0
 31c:	0b be       	out	0x3b, r0	; 59
 31e:	0f 90       	pop	r0
 320:	0f be       	out	0x3f, r0	; 63
 322:	0f 90       	pop	r0
 324:	1f 90       	pop	r1
 326:	18 95       	reti

00000328 <__vector_default>:
 328:	1f 92       	push	r1
 32a:	0f 92       	push	r0
 32c:	0f b6       	in	r0, 0x3f	; 63
 32e:	0f 92       	push	r0
 330:	11 24       	eor	r1, r1
 332:	0f 90       	pop	r0
 334:	0f be       	out	0x3f, r0	; 63
 336:	0f 90       	pop	r0
 338:	1f 90       	pop	r1
 33a:	18 95       	reti

0000033c <init_interrupts>:
 33c:	82 e9       	ldi	r24, 0x92	; 146
 33e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 342:	8a e0       	ldi	r24, 0x0A	; 10
 344:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 348:	8d b3       	in	r24, 0x1d	; 29
 34a:	8f 63       	ori	r24, 0x3F	; 63
 34c:	8d bb       	out	0x1d, r24	; 29
 34e:	08 95       	ret

00000350 <init_timer0_pwm>:
 350:	84 b5       	in	r24, 0x24	; 36
 352:	83 68       	ori	r24, 0x83	; 131
 354:	84 bd       	out	0x24, r24	; 36
 356:	85 b5       	in	r24, 0x25	; 37
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	85 bd       	out	0x25, r24	; 37
 35c:	80 e8       	ldi	r24, 0x80	; 128
 35e:	87 bd       	out	0x27, r24	; 39
 360:	08 95       	ret

00000362 <init_timer3>:
 362:	e1 e9       	ldi	r30, 0x91	; 145
 364:	f0 e0       	ldi	r31, 0x00	; 0
 366:	80 81       	ld	r24, Z
 368:	8b 60       	ori	r24, 0x0B	; 11
 36a:	80 83       	st	Z, r24
 36c:	e1 e7       	ldi	r30, 0x71	; 113
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	80 81       	ld	r24, Z
 372:	82 60       	ori	r24, 0x02	; 2
 374:	80 83       	st	Z, r24
 376:	c1 9a       	sbi	0x18, 1	; 24
 378:	80 81       	ld	r24, Z
 37a:	8d 7f       	andi	r24, 0xFD	; 253
 37c:	80 83       	st	Z, r24
 37e:	08 95       	ret

00000380 <start_timer3>:
 380:	9c 01       	movw	r18, r24
 382:	e1 e7       	ldi	r30, 0x71	; 113
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	90 81       	ld	r25, Z
 388:	92 60       	ori	r25, 0x02	; 2
 38a:	90 83       	st	Z, r25
 38c:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
 390:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7e0094>
 394:	30 93 99 00 	sts	0x0099, r19	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 398:	20 93 98 00 	sts	0x0098, r18	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 39c:	08 95       	ret

0000039e <init_motor>:
 39e:	84 e0       	ldi	r24, 0x04	; 4
 3a0:	85 b9       	out	0x05, r24	; 5
 3a2:	80 e5       	ldi	r24, 0x50	; 80
 3a4:	87 bd       	out	0x27, r24	; 39
 3a6:	08 95       	ret

000003a8 <init_ADC>:
 3a8:	ec e7       	ldi	r30, 0x7C	; 124
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	80 64       	ori	r24, 0x40	; 64
 3b0:	80 83       	st	Z, r24
 3b2:	ea e7       	ldi	r30, 0x7A	; 122
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	80 81       	ld	r24, Z
 3b8:	82 60       	ori	r24, 0x02	; 2
 3ba:	80 83       	st	Z, r24
 3bc:	80 81       	ld	r24, Z
 3be:	81 60       	ori	r24, 0x01	; 1
 3c0:	80 83       	st	Z, r24
 3c2:	80 81       	ld	r24, Z
 3c4:	88 60       	ori	r24, 0x08	; 8
 3c6:	80 83       	st	Z, r24
 3c8:	80 81       	ld	r24, Z
 3ca:	80 68       	ori	r24, 0x80	; 128
 3cc:	80 83       	st	Z, r24
 3ce:	08 95       	ret

000003d0 <init_stepper>:
 3d0:	8f ef       	ldi	r24, 0xFF	; 255
 3d2:	81 b9       	out	0x01, r24	; 1
 3d4:	85 e3       	ldi	r24, 0x35	; 53
 3d6:	82 b9       	out	0x02, r24	; 2
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	90 93 12 01 	sts	0x0112, r25	; 0x800112 <motor_position+0x1>
 3e0:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <motor_position>
 3e4:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <stepper_on+0x1>
 3e8:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <stepper_on>
 3ec:	08 95       	ret

000003ee <mTimer>:
 3ee:	ac 01       	movw	r20, r24
 3f0:	e1 e8       	ldi	r30, 0x81	; 129
 3f2:	f0 e0       	ldi	r31, 0x00	; 0
 3f4:	90 81       	ld	r25, Z
 3f6:	91 60       	ori	r25, 0x01	; 1
 3f8:	90 83       	st	Z, r25
 3fa:	90 81       	ld	r25, Z
 3fc:	98 60       	ori	r25, 0x08	; 8
 3fe:	90 83       	st	Z, r25
 400:	88 ee       	ldi	r24, 0xE8	; 232
 402:	93 e0       	ldi	r25, 0x03	; 3
 404:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 408:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 40c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 410:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 414:	b1 9a       	sbi	0x16, 1	; 22
 416:	20 e0       	ldi	r18, 0x00	; 0
 418:	30 e0       	ldi	r19, 0x00	; 0
 41a:	05 c0       	rjmp	.+10     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41c:	b1 9b       	sbis	0x16, 1	; 22
 41e:	fe cf       	rjmp	.-4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 420:	b1 9a       	sbi	0x16, 1	; 22
 422:	2f 5f       	subi	r18, 0xFF	; 255
 424:	3f 4f       	sbci	r19, 0xFF	; 255
 426:	24 17       	cp	r18, r20
 428:	35 07       	cpc	r19, r21
 42a:	1c f4       	brge	.+6      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42c:	b1 9b       	sbis	0x16, 1	; 22
 42e:	f6 cf       	rjmp	.-20     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 430:	f7 cf       	rjmp	.-18     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 432:	08 95       	ret

00000434 <stepper_rotate>:
 434:	cf 92       	push	r12
 436:	df 92       	push	r13
 438:	ef 92       	push	r14
 43a:	ff 92       	push	r15
 43c:	0f 93       	push	r16
 43e:	1f 93       	push	r17
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
 444:	18 16       	cp	r1, r24
 446:	19 06       	cpc	r1, r25
 448:	0c f0       	brlt	.+2      	; 0x44c <stepper_rotate+0x18>
 44a:	61 c0       	rjmp	.+194    	; 0x50e <stepper_rotate+0xda>
 44c:	6b 01       	movw	r12, r22
 44e:	8c 01       	movw	r16, r24
 450:	c0 e0       	ldi	r28, 0x00	; 0
 452:	d0 e0       	ldi	r29, 0x00	; 0
 454:	0f 2e       	mov	r0, r31
 456:	fa e0       	ldi	r31, 0x0A	; 10
 458:	ef 2e       	mov	r14, r31
 45a:	f1 2c       	mov	r15, r1
 45c:	f0 2d       	mov	r31, r0
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	c8 16       	cp	r12, r24
 462:	d1 04       	cpc	r13, r1
 464:	d1 f4       	brne	.+52     	; 0x49a <stepper_rotate+0x66>
 466:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <__data_end>
 46a:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <__data_end+0x1>
 46e:	e3 5f       	subi	r30, 0xF3	; 243
 470:	fe 4f       	sbci	r31, 0xFE	; 254
 472:	80 81       	ld	r24, Z
 474:	82 b9       	out	0x02, r24	; 2
 476:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 47a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 47e:	01 96       	adiw	r24, 0x01	; 1
 480:	83 70       	andi	r24, 0x03	; 3
 482:	90 78       	andi	r25, 0x80	; 128
 484:	99 23       	and	r25, r25
 486:	24 f4       	brge	.+8      	; 0x490 <stepper_rotate+0x5c>
 488:	01 97       	sbiw	r24, 0x01	; 1
 48a:	8c 6f       	ori	r24, 0xFC	; 252
 48c:	9f 6f       	ori	r25, 0xFF	; 255
 48e:	01 96       	adiw	r24, 0x01	; 1
 490:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 494:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 498:	1d c0       	rjmp	.+58     	; 0x4d4 <stepper_rotate+0xa0>
 49a:	8f ef       	ldi	r24, 0xFF	; 255
 49c:	c8 16       	cp	r12, r24
 49e:	d8 06       	cpc	r13, r24
 4a0:	c9 f4       	brne	.+50     	; 0x4d4 <stepper_rotate+0xa0>
 4a2:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <__data_end>
 4a6:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <__data_end+0x1>
 4aa:	e7 5f       	subi	r30, 0xF7	; 247
 4ac:	fe 4f       	sbci	r31, 0xFE	; 254
 4ae:	80 81       	ld	r24, Z
 4b0:	82 b9       	out	0x02, r24	; 2
 4b2:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 4b6:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 4ba:	01 96       	adiw	r24, 0x01	; 1
 4bc:	83 70       	andi	r24, 0x03	; 3
 4be:	90 78       	andi	r25, 0x80	; 128
 4c0:	99 23       	and	r25, r25
 4c2:	24 f4       	brge	.+8      	; 0x4cc <stepper_rotate+0x98>
 4c4:	01 97       	sbiw	r24, 0x01	; 1
 4c6:	8c 6f       	ori	r24, 0xFC	; 252
 4c8:	9f 6f       	ori	r25, 0xFF	; 255
 4ca:	01 96       	adiw	r24, 0x01	; 1
 4cc:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <__data_end+0x1>
 4d0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <__data_end>
 4d4:	c7 01       	movw	r24, r14
 4d6:	8b df       	rcall	.-234    	; 0x3ee <mTimer>
 4d8:	c4 30       	cpi	r28, 0x04	; 4
 4da:	d1 05       	cpc	r29, r1
 4dc:	3c f4       	brge	.+14     	; 0x4ec <stepper_rotate+0xb8>
 4de:	86 e0       	ldi	r24, 0x06	; 6
 4e0:	e8 16       	cp	r14, r24
 4e2:	f1 04       	cpc	r15, r1
 4e4:	1c f0       	brlt	.+6      	; 0x4ec <stepper_rotate+0xb8>
 4e6:	81 e0       	ldi	r24, 0x01	; 1
 4e8:	e8 1a       	sub	r14, r24
 4ea:	f1 08       	sbc	r15, r1
 4ec:	c8 01       	movw	r24, r16
 4ee:	8c 1b       	sub	r24, r28
 4f0:	9d 0b       	sbc	r25, r29
 4f2:	05 97       	sbiw	r24, 0x05	; 5
 4f4:	3c f4       	brge	.+14     	; 0x504 <stepper_rotate+0xd0>
 4f6:	8b e0       	ldi	r24, 0x0B	; 11
 4f8:	e8 16       	cp	r14, r24
 4fa:	f1 04       	cpc	r15, r1
 4fc:	1c f4       	brge	.+6      	; 0x504 <stepper_rotate+0xd0>
 4fe:	8f ef       	ldi	r24, 0xFF	; 255
 500:	e8 1a       	sub	r14, r24
 502:	f8 0a       	sbc	r15, r24
 504:	21 96       	adiw	r28, 0x01	; 1
 506:	0c 17       	cp	r16, r28
 508:	1d 07       	cpc	r17, r29
 50a:	09 f0       	breq	.+2      	; 0x50e <stepper_rotate+0xda>
 50c:	a8 cf       	rjmp	.-176    	; 0x45e <stepper_rotate+0x2a>
 50e:	df 91       	pop	r29
 510:	cf 91       	pop	r28
 512:	1f 91       	pop	r17
 514:	0f 91       	pop	r16
 516:	ff 90       	pop	r15
 518:	ef 90       	pop	r14
 51a:	df 90       	pop	r13
 51c:	cf 90       	pop	r12
 51e:	08 95       	ret

00000520 <stepper_position>:
 520:	cf 93       	push	r28
 522:	df 93       	push	r29
 524:	15 b8       	out	0x05, r1	; 5
 526:	c8 2f       	mov	r28, r24
 528:	d0 e0       	ldi	r29, 0x00	; 0
 52a:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <motor_position>
 52e:	90 91 12 01 	lds	r25, 0x0112	; 0x800112 <motor_position+0x1>
 532:	9e 01       	movw	r18, r28
 534:	28 1b       	sub	r18, r24
 536:	39 0b       	sbc	r19, r25
 538:	21 30       	cpi	r18, 0x01	; 1
 53a:	31 05       	cpc	r19, r1
 53c:	21 f0       	breq	.+8      	; 0x546 <stepper_position+0x26>
 53e:	2d 3f       	cpi	r18, 0xFD	; 253
 540:	8f ef       	ldi	r24, 0xFF	; 255
 542:	38 07       	cpc	r19, r24
 544:	31 f4       	brne	.+12     	; 0x552 <stepper_position+0x32>
 546:	61 e0       	ldi	r22, 0x01	; 1
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	82 e3       	ldi	r24, 0x32	; 50
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	72 df       	rcall	.-284    	; 0x434 <stepper_rotate>
 550:	18 c0       	rjmp	.+48     	; 0x582 <stepper_position+0x62>
 552:	2f 3f       	cpi	r18, 0xFF	; 255
 554:	8f ef       	ldi	r24, 0xFF	; 255
 556:	38 07       	cpc	r19, r24
 558:	19 f0       	breq	.+6      	; 0x560 <stepper_position+0x40>
 55a:	23 30       	cpi	r18, 0x03	; 3
 55c:	31 05       	cpc	r19, r1
 55e:	31 f4       	brne	.+12     	; 0x56c <stepper_position+0x4c>
 560:	6f ef       	ldi	r22, 0xFF	; 255
 562:	7f ef       	ldi	r23, 0xFF	; 255
 564:	82 e3       	ldi	r24, 0x32	; 50
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	65 df       	rcall	.-310    	; 0x434 <stepper_rotate>
 56a:	0b c0       	rjmp	.+22     	; 0x582 <stepper_position+0x62>
 56c:	22 30       	cpi	r18, 0x02	; 2
 56e:	31 05       	cpc	r19, r1
 570:	19 f0       	breq	.+6      	; 0x578 <stepper_position+0x58>
 572:	2e 3f       	cpi	r18, 0xFE	; 254
 574:	3f 4f       	sbci	r19, 0xFF	; 255
 576:	29 f4       	brne	.+10     	; 0x582 <stepper_position+0x62>
 578:	61 e0       	ldi	r22, 0x01	; 1
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	84 e6       	ldi	r24, 0x64	; 100
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	59 df       	rcall	.-334    	; 0x434 <stepper_rotate>
 582:	d0 93 12 01 	sts	0x0112, r29	; 0x800112 <motor_position+0x1>
 586:	c0 93 11 01 	sts	0x0111, r28	; 0x800111 <motor_position>
 58a:	84 e0       	ldi	r24, 0x04	; 4
 58c:	85 b9       	out	0x05, r24	; 5
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	08 95       	ret

00000594 <display_reflective_reading>:
 594:	2b b1       	in	r18, 0x0b	; 11
 596:	2f 70       	andi	r18, 0x0F	; 15
 598:	2b b9       	out	0x0b, r18	; 11
 59a:	9c 01       	movw	r18, r24
 59c:	33 70       	andi	r19, 0x03	; 3
 59e:	28 b9       	out	0x08, r18	; 8
 5a0:	2b b1       	in	r18, 0x0b	; 11
 5a2:	ac 01       	movw	r20, r24
 5a4:	44 27       	eor	r20, r20
 5a6:	51 70       	andi	r21, 0x01	; 1
 5a8:	52 95       	swap	r21
 5aa:	42 95       	swap	r20
 5ac:	4f 70       	andi	r20, 0x0F	; 15
 5ae:	45 27       	eor	r20, r21
 5b0:	5f 70       	andi	r21, 0x0F	; 15
 5b2:	45 27       	eor	r20, r21
 5b4:	88 27       	eor	r24, r24
 5b6:	92 70       	andi	r25, 0x02	; 2
 5b8:	96 95       	lsr	r25
 5ba:	87 95       	ror	r24
 5bc:	96 95       	lsr	r25
 5be:	87 95       	ror	r24
 5c0:	84 0f       	add	r24, r20
 5c2:	82 2b       	or	r24, r18
 5c4:	8b b9       	out	0x0b, r24	; 11
 5c6:	08 95       	ret

000005c8 <ADC_calibrate>:
 5c8:	2f 92       	push	r2
 5ca:	3f 92       	push	r3
 5cc:	4f 92       	push	r4
 5ce:	5f 92       	push	r5
 5d0:	6f 92       	push	r6
 5d2:	7f 92       	push	r7
 5d4:	8f 92       	push	r8
 5d6:	9f 92       	push	r9
 5d8:	af 92       	push	r10
 5da:	bf 92       	push	r11
 5dc:	cf 92       	push	r12
 5de:	df 92       	push	r13
 5e0:	ef 92       	push	r14
 5e2:	ff 92       	push	r15
 5e4:	0f 93       	push	r16
 5e6:	1f 93       	push	r17
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	cd b7       	in	r28, 0x3d	; 61
 5ee:	de b7       	in	r29, 0x3e	; 62
 5f0:	64 97       	sbiw	r28, 0x14	; 20
 5f2:	0f b6       	in	r0, 0x3f	; 63
 5f4:	f8 94       	cli
 5f6:	de bf       	out	0x3e, r29	; 62
 5f8:	0f be       	out	0x3f, r0	; 63
 5fa:	cd bf       	out	0x3d, r28	; 61
 5fc:	81 2c       	mov	r8, r1
 5fe:	91 2c       	mov	r9, r1
 600:	7e 01       	movw	r14, r28
 602:	45 e1       	ldi	r20, 0x15	; 21
 604:	e4 0e       	add	r14, r20
 606:	f1 1c       	adc	r15, r1
 608:	0f 2e       	mov	r0, r31
 60a:	aa 24       	eor	r10, r10
 60c:	aa 94       	dec	r10
 60e:	f3 e0       	ldi	r31, 0x03	; 3
 610:	bf 2e       	mov	r11, r31
 612:	f0 2d       	mov	r31, r0
 614:	22 24       	eor	r2, r2
 616:	23 94       	inc	r2
 618:	68 94       	set
 61a:	33 24       	eor	r3, r3
 61c:	32 f8       	bld	r3, 2
 61e:	7e c0       	rjmp	.+252    	; 0x71c <ADC_calibrate+0x154>
 620:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <item_ready>
 624:	88 23       	and	r24, r24
 626:	e1 f3       	breq	.-8      	; 0x620 <ADC_calibrate+0x58>
 628:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <ADC_lowest_val>
 62c:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <ADC_lowest_val+0x1>
 630:	81 93       	st	Z+, r24
 632:	91 93       	st	Z+, r25
 634:	b0 92 14 01 	sts	0x0114, r11	; 0x800114 <ADC_lowest_val+0x1>
 638:	a0 92 13 01 	sts	0x0113, r10	; 0x800113 <ADC_lowest_val>
 63c:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <item_ready>
 640:	ee 16       	cp	r14, r30
 642:	ff 06       	cpc	r15, r31
 644:	69 f7       	brne	.-38     	; 0x620 <ADC_calibrate+0x58>
 646:	15 b8       	out	0x05, r1	; 5
 648:	84 e6       	ldi	r24, 0x64	; 100
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	d0 de       	rcall	.-608    	; 0x3ee <mTimer>
 64e:	09 81       	ldd	r16, Y+1	; 0x01
 650:	1a 81       	ldd	r17, Y+2	; 0x02
 652:	fe 01       	movw	r30, r28
 654:	33 96       	adiw	r30, 0x03	; 3
 656:	98 01       	movw	r18, r16
 658:	68 01       	movw	r12, r16
 65a:	81 91       	ld	r24, Z+
 65c:	91 91       	ld	r25, Z+
 65e:	c8 16       	cp	r12, r24
 660:	d9 06       	cpc	r13, r25
 662:	28 f4       	brcc	.+10     	; 0x66e <ADC_calibrate+0xa6>
 664:	8f 3f       	cpi	r24, 0xFF	; 255
 666:	43 e0       	ldi	r20, 0x03	; 3
 668:	94 07       	cpc	r25, r20
 66a:	09 f0       	breq	.+2      	; 0x66e <ADC_calibrate+0xa6>
 66c:	6c 01       	movw	r12, r24
 66e:	80 17       	cp	r24, r16
 670:	91 07       	cpc	r25, r17
 672:	08 f4       	brcc	.+2      	; 0x676 <ADC_calibrate+0xae>
 674:	8c 01       	movw	r16, r24
 676:	28 0f       	add	r18, r24
 678:	39 1f       	adc	r19, r25
 67a:	ee 15       	cp	r30, r14
 67c:	ff 05       	cpc	r31, r15
 67e:	69 f7       	brne	.-38     	; 0x65a <ADC_calibrate+0x92>
 680:	26 01       	movw	r4, r12
 682:	40 0e       	add	r4, r16
 684:	51 1e       	adc	r5, r17
 686:	56 94       	lsr	r5
 688:	47 94       	ror	r4
 68a:	ad ec       	ldi	r26, 0xCD	; 205
 68c:	bc ec       	ldi	r27, 0xCC	; 204
 68e:	4a d2       	rcall	.+1172   	; 0xb24 <__umulhisi3>
 690:	3c 01       	movw	r6, r24
 692:	76 94       	lsr	r7
 694:	67 94       	ror	r6
 696:	76 94       	lsr	r7
 698:	67 94       	ror	r6
 69a:	76 94       	lsr	r7
 69c:	67 94       	ror	r6
 69e:	f4 01       	movw	r30, r8
 6a0:	ee 0f       	add	r30, r30
 6a2:	ff 1f       	adc	r31, r31
 6a4:	ee 0f       	add	r30, r30
 6a6:	ff 1f       	adc	r31, r31
 6a8:	ee 0f       	add	r30, r30
 6aa:	ff 1f       	adc	r31, r31
 6ac:	e1 5c       	subi	r30, 0xC1	; 193
 6ae:	fe 4f       	sbci	r31, 0xFE	; 254
 6b0:	11 83       	std	Z+1, r17	; 0x01
 6b2:	00 83       	st	Z, r16
 6b4:	d3 82       	std	Z+3, r13	; 0x03
 6b6:	c2 82       	std	Z+2, r12	; 0x02
 6b8:	55 82       	std	Z+5, r5	; 0x05
 6ba:	44 82       	std	Z+4, r4	; 0x04
 6bc:	77 82       	std	Z+7, r7	; 0x07
 6be:	66 82       	std	Z+6, r6	; 0x06
 6c0:	28 b8       	out	0x08, r2	; 8
 6c2:	88 ee       	ldi	r24, 0xE8	; 232
 6c4:	93 e0       	ldi	r25, 0x03	; 3
 6c6:	93 de       	rcall	.-730    	; 0x3ee <mTimer>
 6c8:	c8 01       	movw	r24, r16
 6ca:	64 df       	rcall	.-312    	; 0x594 <display_reflective_reading>
 6cc:	88 e5       	ldi	r24, 0x58	; 88
 6ce:	9b e1       	ldi	r25, 0x1B	; 27
 6d0:	8e de       	rcall	.-740    	; 0x3ee <mTimer>
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	88 b9       	out	0x08, r24	; 8
 6d6:	88 ee       	ldi	r24, 0xE8	; 232
 6d8:	93 e0       	ldi	r25, 0x03	; 3
 6da:	89 de       	rcall	.-750    	; 0x3ee <mTimer>
 6dc:	c6 01       	movw	r24, r12
 6de:	5a df       	rcall	.-332    	; 0x594 <display_reflective_reading>
 6e0:	88 e5       	ldi	r24, 0x58	; 88
 6e2:	9b e1       	ldi	r25, 0x1B	; 27
 6e4:	84 de       	rcall	.-760    	; 0x3ee <mTimer>
 6e6:	43 e0       	ldi	r20, 0x03	; 3
 6e8:	48 b9       	out	0x08, r20	; 8
 6ea:	88 ee       	ldi	r24, 0xE8	; 232
 6ec:	93 e0       	ldi	r25, 0x03	; 3
 6ee:	7f de       	rcall	.-770    	; 0x3ee <mTimer>
 6f0:	c2 01       	movw	r24, r4
 6f2:	50 df       	rcall	.-352    	; 0x594 <display_reflective_reading>
 6f4:	88 e5       	ldi	r24, 0x58	; 88
 6f6:	9b e1       	ldi	r25, 0x1B	; 27
 6f8:	7a de       	rcall	.-780    	; 0x3ee <mTimer>
 6fa:	38 b8       	out	0x08, r3	; 8
 6fc:	88 ee       	ldi	r24, 0xE8	; 232
 6fe:	93 e0       	ldi	r25, 0x03	; 3
 700:	76 de       	rcall	.-788    	; 0x3ee <mTimer>
 702:	c3 01       	movw	r24, r6
 704:	47 df       	rcall	.-370    	; 0x594 <display_reflective_reading>
 706:	88 e5       	ldi	r24, 0x58	; 88
 708:	9b e1       	ldi	r25, 0x1B	; 27
 70a:	71 de       	rcall	.-798    	; 0x3ee <mTimer>
 70c:	35 b8       	out	0x05, r3	; 5
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	88 1a       	sub	r8, r24
 712:	98 0a       	sbc	r9, r24
 714:	44 e0       	ldi	r20, 0x04	; 4
 716:	84 16       	cp	r8, r20
 718:	91 04       	cpc	r9, r1
 71a:	19 f0       	breq	.+6      	; 0x722 <ADC_calibrate+0x15a>
 71c:	fe 01       	movw	r30, r28
 71e:	31 96       	adiw	r30, 0x01	; 1
 720:	7f cf       	rjmp	.-258    	; 0x620 <ADC_calibrate+0x58>
 722:	64 96       	adiw	r28, 0x14	; 20
 724:	0f b6       	in	r0, 0x3f	; 63
 726:	f8 94       	cli
 728:	de bf       	out	0x3e, r29	; 62
 72a:	0f be       	out	0x3f, r0	; 63
 72c:	cd bf       	out	0x3d, r28	; 61
 72e:	df 91       	pop	r29
 730:	cf 91       	pop	r28
 732:	1f 91       	pop	r17
 734:	0f 91       	pop	r16
 736:	ff 90       	pop	r15
 738:	ef 90       	pop	r14
 73a:	df 90       	pop	r13
 73c:	cf 90       	pop	r12
 73e:	bf 90       	pop	r11
 740:	af 90       	pop	r10
 742:	9f 90       	pop	r9
 744:	8f 90       	pop	r8
 746:	7f 90       	pop	r7
 748:	6f 90       	pop	r6
 74a:	5f 90       	pop	r5
 74c:	4f 90       	pop	r4
 74e:	3f 90       	pop	r3
 750:	2f 90       	pop	r2
 752:	08 95       	ret

00000754 <entry_sensor>:
 754:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <OS1_flag>
 758:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <item_number>
 75c:	8f 5f       	subi	r24, 0xFF	; 255
 75e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <item_number>
 762:	b8 dc       	rcall	.-1680   	; 0xd4 <initItem>
 764:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <item_number>
 768:	fc 01       	movw	r30, r24
 76a:	25 83       	std	Z+5, r18	; 0x05
 76c:	21 e0       	ldi	r18, 0x01	; 1
 76e:	24 83       	std	Z+4, r18	; 0x04
 770:	bc 01       	movw	r22, r24
 772:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 776:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 77a:	c2 dc       	rcall	.-1660   	; 0x100 <enqueue>
 77c:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 780:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 784:	01 dd       	rcall	.-1534   	; 0x188 <size>
 786:	88 b9       	out	0x08, r24	; 8
 788:	47 9a       	sbi	0x08, 7	; 8
 78a:	08 95       	ret

0000078c <metal_sensor>:
 78c:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <FER_flag>
 790:	e0 91 61 01 	lds	r30, 0x0161	; 0x800161 <entryList>
 794:	f0 91 62 01 	lds	r31, 0x0162	; 0x800162 <entryList+0x1>
 798:	02 80       	ldd	r0, Z+2	; 0x02
 79a:	f3 81       	ldd	r31, Z+3	; 0x03
 79c:	e0 2d       	mov	r30, r0
 79e:	81 e0       	ldi	r24, 0x01	; 1
 7a0:	80 83       	st	Z, r24
 7a2:	08 95       	ret

000007a4 <reflective_sensor>:
 7a4:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <OS2_flag>
 7a8:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 7ac:	88 23       	and	r24, r24
 7ae:	31 f0       	breq	.+12     	; 0x7bc <reflective_sensor+0x18>
 7b0:	ea e7       	ldi	r30, 0x7A	; 122
 7b2:	f0 e0       	ldi	r31, 0x00	; 0
 7b4:	80 81       	ld	r24, Z
 7b6:	80 64       	ori	r24, 0x40	; 64
 7b8:	80 83       	st	Z, r24
 7ba:	08 95       	ret
 7bc:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 7c0:	82 30       	cpi	r24, 0x02	; 2
 7c2:	d1 f4       	brne	.+52     	; 0x7f8 <reflective_sensor+0x54>
 7c4:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 7c8:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 7cc:	aa dc       	rcall	.-1708   	; 0x122 <dequeue>
 7ce:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <ADC_lowest_val>
 7d2:	30 91 14 01 	lds	r19, 0x0114	; 0x800114 <ADC_lowest_val+0x1>
 7d6:	fc 01       	movw	r30, r24
 7d8:	32 83       	std	Z+2, r19	; 0x02
 7da:	21 83       	std	Z+1, r18	; 0x01
 7dc:	22 e0       	ldi	r18, 0x02	; 2
 7de:	24 83       	std	Z+4, r18	; 0x04
 7e0:	bc 01       	movw	r22, r24
 7e2:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <reflectiveList>
 7e6:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <reflectiveList+0x1>
 7ea:	8a dc       	rcall	.-1772   	; 0x100 <enqueue>
 7ec:	8f ef       	ldi	r24, 0xFF	; 255
 7ee:	93 e0       	ldi	r25, 0x03	; 3
 7f0:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <ADC_lowest_val+0x1>
 7f4:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <ADC_lowest_val>
 7f8:	81 e0       	ldi	r24, 0x01	; 1
 7fa:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <item_ready>
 7fe:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <reflectiveList>
 802:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <reflectiveList+0x1>
 806:	c0 dc       	rcall	.-1664   	; 0x188 <size>
 808:	88 b9       	out	0x08, r24	; 8
 80a:	46 9a       	sbi	0x08, 6	; 8
 80c:	08 95       	ret

0000080e <__vector_3>:
 80e:	1f 92       	push	r1
 810:	0f 92       	push	r0
 812:	0f b6       	in	r0, 0x3f	; 63
 814:	0f 92       	push	r0
 816:	11 24       	eor	r1, r1
 818:	0b b6       	in	r0, 0x3b	; 59
 81a:	0f 92       	push	r0
 81c:	2f 93       	push	r18
 81e:	3f 93       	push	r19
 820:	4f 93       	push	r20
 822:	5f 93       	push	r21
 824:	6f 93       	push	r22
 826:	7f 93       	push	r23
 828:	8f 93       	push	r24
 82a:	9f 93       	push	r25
 82c:	af 93       	push	r26
 82e:	bf 93       	push	r27
 830:	ef 93       	push	r30
 832:	ff 93       	push	r31
 834:	46 9a       	sbi	0x08, 6	; 8
 836:	81 e0       	ldi	r24, 0x01	; 1
 838:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <OS2_flag>
 83c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <reflective_present>
 840:	88 23       	and	r24, r24
 842:	19 f0       	breq	.+6      	; 0x84a <__vector_3+0x3c>
 844:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <reflective_present>
 848:	03 c0       	rjmp	.+6      	; 0x850 <__vector_3+0x42>
 84a:	81 e0       	ldi	r24, 0x01	; 1
 84c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <reflective_present>
 850:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 854:	81 30       	cpi	r24, 0x01	; 1
 856:	09 f4       	brne	.+2      	; 0x85a <__vector_3+0x4c>
 858:	a5 df       	rcall	.-182    	; 0x7a4 <reflective_sensor>
 85a:	ff 91       	pop	r31
 85c:	ef 91       	pop	r30
 85e:	bf 91       	pop	r27
 860:	af 91       	pop	r26
 862:	9f 91       	pop	r25
 864:	8f 91       	pop	r24
 866:	7f 91       	pop	r23
 868:	6f 91       	pop	r22
 86a:	5f 91       	pop	r21
 86c:	4f 91       	pop	r20
 86e:	3f 91       	pop	r19
 870:	2f 91       	pop	r18
 872:	0f 90       	pop	r0
 874:	0b be       	out	0x3b, r0	; 59
 876:	0f 90       	pop	r0
 878:	0f be       	out	0x3f, r0	; 63
 87a:	0f 90       	pop	r0
 87c:	1f 90       	pop	r1
 87e:	18 95       	reti

00000880 <classify_item>:
 880:	cf 93       	push	r28
 882:	df 93       	push	r29
 884:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <item_ready>
 888:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <reflectiveList>
 88c:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <reflectiveList+0x1>
 890:	48 dc       	rcall	.-1904   	; 0x122 <dequeue>
 892:	dc 01       	movw	r26, r24
 894:	11 96       	adiw	r26, 0x01	; 1
 896:	6d 91       	ld	r22, X+
 898:	7c 91       	ld	r23, X
 89a:	12 97       	sbiw	r26, 0x02	; 2
 89c:	20 e0       	ldi	r18, 0x00	; 0
 89e:	30 e0       	ldi	r19, 0x00	; 0
 8a0:	80 e0       	ldi	r24, 0x00	; 0
 8a2:	f9 01       	movw	r30, r18
 8a4:	ee 0f       	add	r30, r30
 8a6:	ff 1f       	adc	r31, r31
 8a8:	e9 5e       	subi	r30, 0xE9	; 233
 8aa:	fe 4f       	sbci	r31, 0xFE	; 254
 8ac:	40 81       	ld	r20, Z
 8ae:	51 81       	ldd	r21, Z+1	; 0x01
 8b0:	46 1b       	sub	r20, r22
 8b2:	57 0b       	sbc	r21, r23
 8b4:	fa 01       	movw	r30, r20
 8b6:	ff 23       	and	r31, r31
 8b8:	24 f4       	brge	.+8      	; 0x8c2 <classify_item+0x42>
 8ba:	ee 27       	eor	r30, r30
 8bc:	ff 27       	eor	r31, r31
 8be:	e4 1b       	sub	r30, r20
 8c0:	f5 0b       	sbc	r31, r21
 8c2:	ef 3f       	cpi	r30, 0xFF	; 255
 8c4:	f1 05       	cpc	r31, r1
 8c6:	08 f4       	brcc	.+2      	; 0x8ca <classify_item+0x4a>
 8c8:	82 2f       	mov	r24, r18
 8ca:	2f 5f       	subi	r18, 0xFF	; 255
 8cc:	3f 4f       	sbci	r19, 0xFF	; 255
 8ce:	24 30       	cpi	r18, 0x04	; 4
 8d0:	31 05       	cpc	r19, r1
 8d2:	39 f7       	brne	.-50     	; 0x8a2 <classify_item+0x22>
 8d4:	e8 2f       	mov	r30, r24
 8d6:	f0 e0       	ldi	r31, 0x00	; 0
 8d8:	c3 e2       	ldi	r28, 0x23	; 35
 8da:	d1 e0       	ldi	r29, 0x01	; 1
 8dc:	ee 0f       	add	r30, r30
 8de:	ff 1f       	adc	r31, r31
 8e0:	ed 5d       	subi	r30, 0xDD	; 221
 8e2:	fe 4f       	sbci	r31, 0xFE	; 254
 8e4:	20 81       	ld	r18, Z
 8e6:	31 81       	ldd	r19, Z+1	; 0x01
 8e8:	2f 5f       	subi	r18, 0xFF	; 255
 8ea:	3f 4f       	sbci	r19, 0xFF	; 255
 8ec:	31 83       	std	Z+1, r19	; 0x01
 8ee:	20 83       	st	Z, r18
 8f0:	28 85       	ldd	r18, Y+8	; 0x08
 8f2:	39 85       	ldd	r19, Y+9	; 0x09
 8f4:	2f 5f       	subi	r18, 0xFF	; 255
 8f6:	3f 4f       	sbci	r19, 0xFF	; 255
 8f8:	39 87       	std	Y+9, r19	; 0x09
 8fa:	28 87       	std	Y+8, r18	; 0x08
 8fc:	13 96       	adiw	r26, 0x03	; 3
 8fe:	8c 93       	st	X, r24
 900:	13 97       	sbiw	r26, 0x03	; 3
 902:	83 e0       	ldi	r24, 0x03	; 3
 904:	14 96       	adiw	r26, 0x04	; 4
 906:	8c 93       	st	X, r24
 908:	14 97       	sbiw	r26, 0x04	; 4
 90a:	bd 01       	movw	r22, r26
 90c:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 910:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 914:	f5 db       	rcall	.-2070   	; 0x100 <enqueue>
 916:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 91a:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 91e:	34 dc       	rcall	.-1944   	; 0x188 <size>
 920:	88 b9       	out	0x08, r24	; 8
 922:	45 9a       	sbi	0x08, 5	; 8
 924:	df 91       	pop	r29
 926:	cf 91       	pop	r28
 928:	08 95       	ret

0000092a <exit_sensor>:
 92a:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <OS3_flag>
 92e:	15 b8       	out	0x05, r1	; 5
 930:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 934:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 938:	f4 db       	rcall	.-2072   	; 0x122 <dequeue>
 93a:	bc 01       	movw	r22, r24
 93c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <sortedList>
 940:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <sortedList+0x1>
 944:	dd db       	rcall	.-2118   	; 0x100 <enqueue>
 946:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <sortedList>
 94a:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <sortedList+0x1>
 94e:	02 80       	ldd	r0, Z+2	; 0x02
 950:	f3 81       	ldd	r31, Z+3	; 0x03
 952:	e0 2d       	mov	r30, r0
 954:	83 81       	ldd	r24, Z+3	; 0x03
 956:	8f 5f       	subi	r24, 0xFF	; 255
 958:	e3 dd       	rcall	.-1082   	; 0x520 <stepper_position>
 95a:	21 dd       	rcall	.-1470   	; 0x39e <init_motor>
 95c:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <sortedList>
 960:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <sortedList+0x1>
 964:	11 dc       	rcall	.-2014   	; 0x188 <size>
 966:	88 b9       	out	0x08, r24	; 8
 968:	44 9a       	sbi	0x08, 4	; 8
 96a:	08 95       	ret

0000096c <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 96c:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal, PB3:0 = output for motor
 96e:	8f e8       	ldi	r24, 0x8F	; 143
 970:	84 b9       	out	0x04, r24	; 4
	DDRC = 0xFF;		// Port C all output (LEDs)
 972:	8f ef       	ldi	r24, 0xFF	; 255
 974:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 976:	80 ef       	ldi	r24, 0xF0	; 240
 978:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 97a:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 97c:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 97e:	18 b8       	out	0x08, r1	; 8
	
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
	init_timer3();
 980:	f8 94       	cli
 982:	12 dd       	rcall	.-1500   	; 0x3a8 <init_ADC>
 984:	e5 dc       	rcall	.-1590   	; 0x350 <init_timer0_pwm>
 986:	ed dc       	rcall	.-1574   	; 0x362 <init_timer3>
 988:	0a dd       	rcall	.-1516   	; 0x39e <init_motor>
 98a:	d8 dc       	rcall	.-1616   	; 0x33c <init_interrupts>
 98c:	21 dd       	rcall	.-1470   	; 0x3d0 <init_stepper>
 98e:	af db       	rcall	.-2210   	; 0xee <initQueue>
 990:	90 93 62 01 	sts	0x0162, r25	; 0x800162 <entryList+0x1>
 994:	80 93 61 01 	sts	0x0161, r24	; 0x800161 <entryList>
 998:	aa db       	rcall	.-2220   	; 0xee <initQueue>
 99a:	90 93 3e 01 	sts	0x013E, r25	; 0x80013e <reflectiveList+0x1>
 99e:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <reflectiveList>
 9a2:	a5 db       	rcall	.-2230   	; 0xee <initQueue>
 9a4:	90 93 60 01 	sts	0x0160, r25	; 0x800160 <classifiedList+0x1>
 9a8:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <classifiedList>
 9ac:	a0 db       	rcall	.-2240   	; 0xee <initQueue>
 9ae:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <sortedList+0x1>
 9b2:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <sortedList>
 9b6:	78 94       	sei
 9b8:	07 de       	rcall	.-1010   	; 0x5c8 <ADC_calibrate>
 9ba:	82 e0       	ldi	r24, 0x02	; 2
 9bc:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <STATE>
 9c0:	c1 e7       	ldi	r28, 0x71	; 113
 9c2:	d0 e0       	ldi	r29, 0x00	; 0
 9c4:	01 e0       	ldi	r16, 0x01	; 1
 9c6:	10 e0       	ldi	r17, 0x00	; 0
 9c8:	68 94       	set
 9ca:	ee 24       	eor	r14, r14
 9cc:	e1 f8       	bld	r14, 1
 9ce:	68 94       	set
 9d0:	ff 24       	eor	r15, r15
 9d2:	f2 f8       	bld	r15, 2
 9d4:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <ramp_down_entered>
 9d8:	88 23       	and	r24, r24
 9da:	69 f0       	breq	.+26     	; 0x9f6 <main+0x8a>
 9dc:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <ramp_down_entered>
 9e0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 9e4:	83 30       	cpi	r24, 0x03	; 3
 9e6:	11 f4       	brne	.+4      	; 0x9ec <main+0x80>
 9e8:	e0 92 08 01 	sts	0x0108, r14	; 0x800108 <STATE>
 9ec:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
 9f0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
 9f4:	c5 dc       	rcall	.-1654   	; 0x380 <start_timer3>
 9f6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 9fa:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <operational_entered>
 9fe:	88 23       	and	r24, r24
 a00:	21 f0       	breq	.+8      	; 0xa0a <main+0x9e>
 a02:	f5 b8       	out	0x05, r15	; 5
 a04:	88 81       	ld	r24, Y
 a06:	8d 7f       	andi	r24, 0xFD	; 253
 a08:	88 83       	st	Y, r24
 a0a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <OS1_flag>
 a0e:	81 11       	cpse	r24, r1
 a10:	a1 de       	rcall	.-702    	; 0x754 <entry_sensor>
 a12:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <FER_flag>
 a16:	81 11       	cpse	r24, r1
 a18:	b9 de       	rcall	.-654    	; 0x78c <metal_sensor>
 a1a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <OS2_flag>
 a1e:	81 11       	cpse	r24, r1
 a20:	c1 de       	rcall	.-638    	; 0x7a4 <reflective_sensor>
 a22:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <item_ready>
 a26:	81 11       	cpse	r24, r1
 a28:	2b df       	rcall	.-426    	; 0x880 <classify_item>
 a2a:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <OS3_flag>
 a2e:	81 11       	cpse	r24, r1
 a30:	7c df       	rcall	.-264    	; 0x92a <exit_sensor>
 a32:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 a36:	83 30       	cpi	r24, 0x03	; 3
 a38:	99 f5       	brne	.+102    	; 0xaa0 <main+0x134>
 a3a:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <pause_entered>
 a3e:	88 23       	and	r24, r24
 a40:	41 f0       	breq	.+16     	; 0xa52 <main+0xe6>
 a42:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <pause_entered>
 a46:	15 b8       	out	0x05, r1	; 5
 a48:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <timer3_1sec>
 a4c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <timer3_1sec+0x1>
 a50:	97 dc       	rcall	.-1746   	; 0x380 <start_timer3>
 a52:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <timer3_flag>
 a56:	88 23       	and	r24, r24
 a58:	19 f1       	breq	.+70     	; 0xaa0 <main+0x134>
 a5a:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <timer3_flag>
 a5e:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <display_index>
 a62:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <display_index>
 a66:	98 01       	movw	r18, r16
 a68:	02 c0       	rjmp	.+4      	; 0xa6e <main+0x102>
 a6a:	22 0f       	add	r18, r18
 a6c:	33 1f       	adc	r19, r19
 a6e:	8a 95       	dec	r24
 a70:	e2 f7       	brpl	.-8      	; 0xa6a <main+0xfe>
 a72:	f0 e0       	ldi	r31, 0x00	; 0
 a74:	ee 0f       	add	r30, r30
 a76:	ff 1f       	adc	r31, r31
 a78:	ed 5d       	subi	r30, 0xDD	; 221
 a7a:	fe 4f       	sbci	r31, 0xFE	; 254
 a7c:	80 81       	ld	r24, Z
 a7e:	90 e1       	ldi	r25, 0x10	; 16
 a80:	29 9f       	mul	r18, r25
 a82:	80 0d       	add	r24, r0
 a84:	11 24       	eor	r1, r1
 a86:	88 b9       	out	0x08, r24	; 8
 a88:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <display_index>
 a8c:	83 30       	cpi	r24, 0x03	; 3
 a8e:	19 f4       	brne	.+6      	; 0xa96 <main+0x12a>
 a90:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <display_index>
 a94:	05 c0       	rjmp	.+10     	; 0xaa0 <main+0x134>
 a96:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <display_index>
 a9a:	8f 5f       	subi	r24, 0xFF	; 255
 a9c:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <display_index>
 aa0:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <STATE>
 aa4:	84 30       	cpi	r24, 0x04	; 4
 aa6:	09 f0       	breq	.+2      	; 0xaaa <main+0x13e>
 aa8:	95 cf       	rjmp	.-214    	; 0x9d4 <main+0x68>
 aaa:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <timer3_flag>
 aae:	88 23       	and	r24, r24
 ab0:	29 f0       	breq	.+10     	; 0xabc <main+0x150>
 ab2:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <timer3_flag>
 ab6:	88 81       	ld	r24, Y
 ab8:	8d 7f       	andi	r24, 0xFD	; 253
 aba:	88 83       	st	Y, r24
 abc:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 ac0:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 ac4:	57 db       	rcall	.-2386   	; 0x174 <isEmpty>
 ac6:	89 2b       	or	r24, r25
 ac8:	09 f4       	brne	.+2      	; 0xacc <main+0x160>
 aca:	84 cf       	rjmp	.-248    	; 0x9d4 <main+0x68>
 acc:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <reflectiveList>
 ad0:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <reflectiveList+0x1>
 ad4:	4f db       	rcall	.-2402   	; 0x174 <isEmpty>
 ad6:	89 2b       	or	r24, r25
 ad8:	09 f4       	brne	.+2      	; 0xadc <main+0x170>
 ada:	7c cf       	rjmp	.-264    	; 0x9d4 <main+0x68>
 adc:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 ae0:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 ae4:	47 db       	rcall	.-2418   	; 0x174 <isEmpty>
 ae6:	89 2b       	or	r24, r25
 ae8:	09 f4       	brne	.+2      	; 0xaec <main+0x180>
 aea:	74 cf       	rjmp	.-280    	; 0x9d4 <main+0x68>
 aec:	15 b8       	out	0x05, r1	; 5
 aee:	ea e7       	ldi	r30, 0x7A	; 122
 af0:	f0 e0       	ldi	r31, 0x00	; 0
 af2:	80 81       	ld	r24, Z
 af4:	8f 77       	andi	r24, 0x7F	; 127
 af6:	80 83       	st	Z, r24
 af8:	f8 94       	cli
 afa:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <entryList>
 afe:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <entryList+0x1>
 b02:	22 db       	rcall	.-2492   	; 0x148 <clearQueue>
 b04:	80 91 3d 01 	lds	r24, 0x013D	; 0x80013d <reflectiveList>
 b08:	90 91 3e 01 	lds	r25, 0x013E	; 0x80013e <reflectiveList+0x1>
 b0c:	1d db       	rcall	.-2502   	; 0x148 <clearQueue>
 b0e:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <classifiedList>
 b12:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <classifiedList+0x1>
 b16:	18 db       	rcall	.-2512   	; 0x148 <clearQueue>
 b18:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <sortedList>
 b1c:	90 91 3c 01 	lds	r25, 0x013C	; 0x80013c <sortedList+0x1>
 b20:	13 db       	rcall	.-2522   	; 0x148 <clearQueue>
 b22:	55 cf       	rjmp	.-342    	; 0x9ce <main+0x62>

00000b24 <__umulhisi3>:
 b24:	a2 9f       	mul	r26, r18
 b26:	b0 01       	movw	r22, r0
 b28:	b3 9f       	mul	r27, r19
 b2a:	c0 01       	movw	r24, r0
 b2c:	a3 9f       	mul	r26, r19
 b2e:	70 0d       	add	r23, r0
 b30:	81 1d       	adc	r24, r1
 b32:	11 24       	eor	r1, r1
 b34:	91 1d       	adc	r25, r1
 b36:	b2 9f       	mul	r27, r18
 b38:	70 0d       	add	r23, r0
 b3a:	81 1d       	adc	r24, r1
 b3c:	11 24       	eor	r1, r1
 b3e:	91 1d       	adc	r25, r1
 b40:	08 95       	ret

00000b42 <malloc>:
 b42:	0f 93       	push	r16
 b44:	1f 93       	push	r17
 b46:	cf 93       	push	r28
 b48:	df 93       	push	r29
 b4a:	82 30       	cpi	r24, 0x02	; 2
 b4c:	91 05       	cpc	r25, r1
 b4e:	10 f4       	brcc	.+4      	; 0xb54 <malloc+0x12>
 b50:	82 e0       	ldi	r24, 0x02	; 2
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <__flp>
 b58:	f0 91 66 01 	lds	r31, 0x0166	; 0x800166 <__flp+0x1>
 b5c:	20 e0       	ldi	r18, 0x00	; 0
 b5e:	30 e0       	ldi	r19, 0x00	; 0
 b60:	a0 e0       	ldi	r26, 0x00	; 0
 b62:	b0 e0       	ldi	r27, 0x00	; 0
 b64:	30 97       	sbiw	r30, 0x00	; 0
 b66:	19 f1       	breq	.+70     	; 0xbae <malloc+0x6c>
 b68:	40 81       	ld	r20, Z
 b6a:	51 81       	ldd	r21, Z+1	; 0x01
 b6c:	02 81       	ldd	r16, Z+2	; 0x02
 b6e:	13 81       	ldd	r17, Z+3	; 0x03
 b70:	48 17       	cp	r20, r24
 b72:	59 07       	cpc	r21, r25
 b74:	c8 f0       	brcs	.+50     	; 0xba8 <malloc+0x66>
 b76:	84 17       	cp	r24, r20
 b78:	95 07       	cpc	r25, r21
 b7a:	69 f4       	brne	.+26     	; 0xb96 <malloc+0x54>
 b7c:	10 97       	sbiw	r26, 0x00	; 0
 b7e:	31 f0       	breq	.+12     	; 0xb8c <malloc+0x4a>
 b80:	12 96       	adiw	r26, 0x02	; 2
 b82:	0c 93       	st	X, r16
 b84:	12 97       	sbiw	r26, 0x02	; 2
 b86:	13 96       	adiw	r26, 0x03	; 3
 b88:	1c 93       	st	X, r17
 b8a:	27 c0       	rjmp	.+78     	; 0xbda <malloc+0x98>
 b8c:	00 93 65 01 	sts	0x0165, r16	; 0x800165 <__flp>
 b90:	10 93 66 01 	sts	0x0166, r17	; 0x800166 <__flp+0x1>
 b94:	22 c0       	rjmp	.+68     	; 0xbda <malloc+0x98>
 b96:	21 15       	cp	r18, r1
 b98:	31 05       	cpc	r19, r1
 b9a:	19 f0       	breq	.+6      	; 0xba2 <malloc+0x60>
 b9c:	42 17       	cp	r20, r18
 b9e:	53 07       	cpc	r21, r19
 ba0:	18 f4       	brcc	.+6      	; 0xba8 <malloc+0x66>
 ba2:	9a 01       	movw	r18, r20
 ba4:	bd 01       	movw	r22, r26
 ba6:	ef 01       	movw	r28, r30
 ba8:	df 01       	movw	r26, r30
 baa:	f8 01       	movw	r30, r16
 bac:	db cf       	rjmp	.-74     	; 0xb64 <malloc+0x22>
 bae:	21 15       	cp	r18, r1
 bb0:	31 05       	cpc	r19, r1
 bb2:	f9 f0       	breq	.+62     	; 0xbf2 <malloc+0xb0>
 bb4:	28 1b       	sub	r18, r24
 bb6:	39 0b       	sbc	r19, r25
 bb8:	24 30       	cpi	r18, 0x04	; 4
 bba:	31 05       	cpc	r19, r1
 bbc:	80 f4       	brcc	.+32     	; 0xbde <malloc+0x9c>
 bbe:	8a 81       	ldd	r24, Y+2	; 0x02
 bc0:	9b 81       	ldd	r25, Y+3	; 0x03
 bc2:	61 15       	cp	r22, r1
 bc4:	71 05       	cpc	r23, r1
 bc6:	21 f0       	breq	.+8      	; 0xbd0 <malloc+0x8e>
 bc8:	fb 01       	movw	r30, r22
 bca:	93 83       	std	Z+3, r25	; 0x03
 bcc:	82 83       	std	Z+2, r24	; 0x02
 bce:	04 c0       	rjmp	.+8      	; 0xbd8 <malloc+0x96>
 bd0:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <__flp+0x1>
 bd4:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <__flp>
 bd8:	fe 01       	movw	r30, r28
 bda:	32 96       	adiw	r30, 0x02	; 2
 bdc:	44 c0       	rjmp	.+136    	; 0xc66 <malloc+0x124>
 bde:	fe 01       	movw	r30, r28
 be0:	e2 0f       	add	r30, r18
 be2:	f3 1f       	adc	r31, r19
 be4:	81 93       	st	Z+, r24
 be6:	91 93       	st	Z+, r25
 be8:	22 50       	subi	r18, 0x02	; 2
 bea:	31 09       	sbc	r19, r1
 bec:	39 83       	std	Y+1, r19	; 0x01
 bee:	28 83       	st	Y, r18
 bf0:	3a c0       	rjmp	.+116    	; 0xc66 <malloc+0x124>
 bf2:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 bf6:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 bfa:	23 2b       	or	r18, r19
 bfc:	41 f4       	brne	.+16     	; 0xc0e <malloc+0xcc>
 bfe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 c02:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 c06:	30 93 64 01 	sts	0x0164, r19	; 0x800164 <__brkval+0x1>
 c0a:	20 93 63 01 	sts	0x0163, r18	; 0x800163 <__brkval>
 c0e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 c12:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 c16:	21 15       	cp	r18, r1
 c18:	31 05       	cpc	r19, r1
 c1a:	41 f4       	brne	.+16     	; 0xc2c <malloc+0xea>
 c1c:	2d b7       	in	r18, 0x3d	; 61
 c1e:	3e b7       	in	r19, 0x3e	; 62
 c20:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 c24:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 c28:	24 1b       	sub	r18, r20
 c2a:	35 0b       	sbc	r19, r21
 c2c:	e0 91 63 01 	lds	r30, 0x0163	; 0x800163 <__brkval>
 c30:	f0 91 64 01 	lds	r31, 0x0164	; 0x800164 <__brkval+0x1>
 c34:	e2 17       	cp	r30, r18
 c36:	f3 07       	cpc	r31, r19
 c38:	a0 f4       	brcc	.+40     	; 0xc62 <malloc+0x120>
 c3a:	2e 1b       	sub	r18, r30
 c3c:	3f 0b       	sbc	r19, r31
 c3e:	28 17       	cp	r18, r24
 c40:	39 07       	cpc	r19, r25
 c42:	78 f0       	brcs	.+30     	; 0xc62 <malloc+0x120>
 c44:	ac 01       	movw	r20, r24
 c46:	4e 5f       	subi	r20, 0xFE	; 254
 c48:	5f 4f       	sbci	r21, 0xFF	; 255
 c4a:	24 17       	cp	r18, r20
 c4c:	35 07       	cpc	r19, r21
 c4e:	48 f0       	brcs	.+18     	; 0xc62 <malloc+0x120>
 c50:	4e 0f       	add	r20, r30
 c52:	5f 1f       	adc	r21, r31
 c54:	50 93 64 01 	sts	0x0164, r21	; 0x800164 <__brkval+0x1>
 c58:	40 93 63 01 	sts	0x0163, r20	; 0x800163 <__brkval>
 c5c:	81 93       	st	Z+, r24
 c5e:	91 93       	st	Z+, r25
 c60:	02 c0       	rjmp	.+4      	; 0xc66 <malloc+0x124>
 c62:	e0 e0       	ldi	r30, 0x00	; 0
 c64:	f0 e0       	ldi	r31, 0x00	; 0
 c66:	cf 01       	movw	r24, r30
 c68:	df 91       	pop	r29
 c6a:	cf 91       	pop	r28
 c6c:	1f 91       	pop	r17
 c6e:	0f 91       	pop	r16
 c70:	08 95       	ret

00000c72 <free>:
 c72:	cf 93       	push	r28
 c74:	df 93       	push	r29
 c76:	00 97       	sbiw	r24, 0x00	; 0
 c78:	09 f4       	brne	.+2      	; 0xc7c <free+0xa>
 c7a:	81 c0       	rjmp	.+258    	; 0xd7e <free+0x10c>
 c7c:	fc 01       	movw	r30, r24
 c7e:	32 97       	sbiw	r30, 0x02	; 2
 c80:	13 82       	std	Z+3, r1	; 0x03
 c82:	12 82       	std	Z+2, r1	; 0x02
 c84:	a0 91 65 01 	lds	r26, 0x0165	; 0x800165 <__flp>
 c88:	b0 91 66 01 	lds	r27, 0x0166	; 0x800166 <__flp+0x1>
 c8c:	10 97       	sbiw	r26, 0x00	; 0
 c8e:	81 f4       	brne	.+32     	; 0xcb0 <free+0x3e>
 c90:	20 81       	ld	r18, Z
 c92:	31 81       	ldd	r19, Z+1	; 0x01
 c94:	82 0f       	add	r24, r18
 c96:	93 1f       	adc	r25, r19
 c98:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 c9c:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 ca0:	28 17       	cp	r18, r24
 ca2:	39 07       	cpc	r19, r25
 ca4:	51 f5       	brne	.+84     	; 0xcfa <free+0x88>
 ca6:	f0 93 64 01 	sts	0x0164, r31	; 0x800164 <__brkval+0x1>
 caa:	e0 93 63 01 	sts	0x0163, r30	; 0x800163 <__brkval>
 cae:	67 c0       	rjmp	.+206    	; 0xd7e <free+0x10c>
 cb0:	ed 01       	movw	r28, r26
 cb2:	20 e0       	ldi	r18, 0x00	; 0
 cb4:	30 e0       	ldi	r19, 0x00	; 0
 cb6:	ce 17       	cp	r28, r30
 cb8:	df 07       	cpc	r29, r31
 cba:	40 f4       	brcc	.+16     	; 0xccc <free+0x5a>
 cbc:	4a 81       	ldd	r20, Y+2	; 0x02
 cbe:	5b 81       	ldd	r21, Y+3	; 0x03
 cc0:	9e 01       	movw	r18, r28
 cc2:	41 15       	cp	r20, r1
 cc4:	51 05       	cpc	r21, r1
 cc6:	f1 f0       	breq	.+60     	; 0xd04 <free+0x92>
 cc8:	ea 01       	movw	r28, r20
 cca:	f5 cf       	rjmp	.-22     	; 0xcb6 <free+0x44>
 ccc:	d3 83       	std	Z+3, r29	; 0x03
 cce:	c2 83       	std	Z+2, r28	; 0x02
 cd0:	40 81       	ld	r20, Z
 cd2:	51 81       	ldd	r21, Z+1	; 0x01
 cd4:	84 0f       	add	r24, r20
 cd6:	95 1f       	adc	r25, r21
 cd8:	c8 17       	cp	r28, r24
 cda:	d9 07       	cpc	r29, r25
 cdc:	59 f4       	brne	.+22     	; 0xcf4 <free+0x82>
 cde:	88 81       	ld	r24, Y
 ce0:	99 81       	ldd	r25, Y+1	; 0x01
 ce2:	84 0f       	add	r24, r20
 ce4:	95 1f       	adc	r25, r21
 ce6:	02 96       	adiw	r24, 0x02	; 2
 ce8:	91 83       	std	Z+1, r25	; 0x01
 cea:	80 83       	st	Z, r24
 cec:	8a 81       	ldd	r24, Y+2	; 0x02
 cee:	9b 81       	ldd	r25, Y+3	; 0x03
 cf0:	93 83       	std	Z+3, r25	; 0x03
 cf2:	82 83       	std	Z+2, r24	; 0x02
 cf4:	21 15       	cp	r18, r1
 cf6:	31 05       	cpc	r19, r1
 cf8:	29 f4       	brne	.+10     	; 0xd04 <free+0x92>
 cfa:	f0 93 66 01 	sts	0x0166, r31	; 0x800166 <__flp+0x1>
 cfe:	e0 93 65 01 	sts	0x0165, r30	; 0x800165 <__flp>
 d02:	3d c0       	rjmp	.+122    	; 0xd7e <free+0x10c>
 d04:	e9 01       	movw	r28, r18
 d06:	fb 83       	std	Y+3, r31	; 0x03
 d08:	ea 83       	std	Y+2, r30	; 0x02
 d0a:	49 91       	ld	r20, Y+
 d0c:	59 91       	ld	r21, Y+
 d0e:	c4 0f       	add	r28, r20
 d10:	d5 1f       	adc	r29, r21
 d12:	ec 17       	cp	r30, r28
 d14:	fd 07       	cpc	r31, r29
 d16:	61 f4       	brne	.+24     	; 0xd30 <free+0xbe>
 d18:	80 81       	ld	r24, Z
 d1a:	91 81       	ldd	r25, Z+1	; 0x01
 d1c:	84 0f       	add	r24, r20
 d1e:	95 1f       	adc	r25, r21
 d20:	02 96       	adiw	r24, 0x02	; 2
 d22:	e9 01       	movw	r28, r18
 d24:	99 83       	std	Y+1, r25	; 0x01
 d26:	88 83       	st	Y, r24
 d28:	82 81       	ldd	r24, Z+2	; 0x02
 d2a:	93 81       	ldd	r25, Z+3	; 0x03
 d2c:	9b 83       	std	Y+3, r25	; 0x03
 d2e:	8a 83       	std	Y+2, r24	; 0x02
 d30:	e0 e0       	ldi	r30, 0x00	; 0
 d32:	f0 e0       	ldi	r31, 0x00	; 0
 d34:	12 96       	adiw	r26, 0x02	; 2
 d36:	8d 91       	ld	r24, X+
 d38:	9c 91       	ld	r25, X
 d3a:	13 97       	sbiw	r26, 0x03	; 3
 d3c:	00 97       	sbiw	r24, 0x00	; 0
 d3e:	19 f0       	breq	.+6      	; 0xd46 <free+0xd4>
 d40:	fd 01       	movw	r30, r26
 d42:	dc 01       	movw	r26, r24
 d44:	f7 cf       	rjmp	.-18     	; 0xd34 <free+0xc2>
 d46:	8d 91       	ld	r24, X+
 d48:	9c 91       	ld	r25, X
 d4a:	11 97       	sbiw	r26, 0x01	; 1
 d4c:	9d 01       	movw	r18, r26
 d4e:	2e 5f       	subi	r18, 0xFE	; 254
 d50:	3f 4f       	sbci	r19, 0xFF	; 255
 d52:	82 0f       	add	r24, r18
 d54:	93 1f       	adc	r25, r19
 d56:	20 91 63 01 	lds	r18, 0x0163	; 0x800163 <__brkval>
 d5a:	30 91 64 01 	lds	r19, 0x0164	; 0x800164 <__brkval+0x1>
 d5e:	28 17       	cp	r18, r24
 d60:	39 07       	cpc	r19, r25
 d62:	69 f4       	brne	.+26     	; 0xd7e <free+0x10c>
 d64:	30 97       	sbiw	r30, 0x00	; 0
 d66:	29 f4       	brne	.+10     	; 0xd72 <free+0x100>
 d68:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <__flp+0x1>
 d6c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <__flp>
 d70:	02 c0       	rjmp	.+4      	; 0xd76 <free+0x104>
 d72:	13 82       	std	Z+3, r1	; 0x03
 d74:	12 82       	std	Z+2, r1	; 0x02
 d76:	b0 93 64 01 	sts	0x0164, r27	; 0x800164 <__brkval+0x1>
 d7a:	a0 93 63 01 	sts	0x0163, r26	; 0x800163 <__brkval>
 d7e:	df 91       	pop	r29
 d80:	cf 91       	pop	r28
 d82:	08 95       	ret

00000d84 <_exit>:
 d84:	f8 94       	cli

00000d86 <__stop_program>:
 d86:	ff cf       	rjmp	.-2      	; 0xd86 <__stop_program>
