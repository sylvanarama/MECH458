
SortingSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  0000098a  00000a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000098a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  00800116  00800116  00000a34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a80  00000000  00000000  00000bec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f0b  00000000  00000000  0000266c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c37  00000000  00000000  00003577  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000454  00000000  00000000  000041b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090a  00000000  00000000  00004604  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000def  00000000  00000000  00004f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00005cfd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	b2 c0       	rjmp	.+356    	; 0x16a <__vector_1>
   6:	00 00       	nop
   8:	e8 c0       	rjmp	.+464    	; 0x1da <__vector_2>
   a:	00 00       	nop
   c:	03 c1       	rjmp	.+518    	; 0x214 <__vector_3>
   e:	00 00       	nop
  10:	cc c2       	rjmp	.+1432   	; 0x5aa <__vector_4>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	48 c0       	rjmp	.+144    	; 0xd2 <__bad_interrupt>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	80 c0       	rjmp	.+256    	; 0x156 <__vector_21>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	25 c1       	rjmp	.+586    	; 0x2c0 <__vector_29>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	22 c0       	rjmp	.+68     	; 0xd2 <__bad_interrupt>
  8e:	00 00       	nop
  90:	20 c0       	rjmp	.+64     	; 0xd2 <__bad_interrupt>
  92:	00 00       	nop
  94:	1e c0       	rjmp	.+60     	; 0xd2 <__bad_interrupt>
	...

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	ea e8       	ldi	r30, 0x8A	; 138
  ac:	f9 e0       	ldi	r31, 0x09	; 9
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a6 31       	cpi	r26, 0x16	; 22
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a6 e1       	ldi	r26, 0x16	; 22
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a3 35       	cpi	r26, 0x53	; 83
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	06 d3       	rcall	.+1548   	; 0x6dc <main>
  d0:	5a c4       	rjmp	.+2228   	; 0x986 <_exit>

000000d2 <__bad_interrupt>:
  d2:	39 c1       	rjmp	.+626    	; 0x346 <__vector_default>

000000d4 <initItem>:
/**************************************************************************************
* DESC: This initializes a link and returns the pointer to the new link or NULL if error 
* INPUT: the head and tail pointers by reference
*/
item* initItem(){
	item* newItem = malloc(sizeof(item));
  d4:	88 e0       	ldi	r24, 0x08	; 8
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	35 d3       	rcall	.+1642   	; 0x744 <malloc>
  da:	fc 01       	movw	r30, r24
	newItem->next = NULL;
  dc:	17 82       	std	Z+7, r1	; 0x07
  de:	16 82       	std	Z+6, r1	; 0x06
	newItem->metal = 0;
  e0:	10 82       	st	Z, r1
	newItem->reflective = 0;
  e2:	12 82       	std	Z+2, r1	; 0x02
  e4:	11 82       	std	Z+1, r1	; 0x01
	newItem->type = 0;
  e6:	13 82       	std	Z+3, r1	; 0x03
	newItem->stage = 0;
  e8:	14 82       	std	Z+4, r1	; 0x04
	newItem->number = 0;
  ea:	15 82       	std	Z+5, r1	; 0x05
	return newItem;
}//initLink
  ec:	08 95       	ret

000000ee <initQueue>:

queue* initQueue(){
	queue* q = malloc(sizeof(queue));
  ee:	84 e0       	ldi	r24, 0x04	; 4
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	28 d3       	rcall	.+1616   	; 0x744 <malloc>
	q->head = NULL;	
  f4:	fc 01       	movw	r30, r24
  f6:	11 82       	std	Z+1, r1	; 0x01
  f8:	10 82       	st	Z, r1
	q->tail = NULL;	
  fa:	13 82       	std	Z+3, r1	; 0x03
  fc:	12 82       	std	Z+2, r1	; 0x02
	return q;
}//initQueue
  fe:	08 95       	ret

00000100 <enqueue>:

/****************************************************************************************
*  DESC: Accepts as input a new link by reference, and assigns the head and tail		
*  of the queue accordingly (Will put an item at the tail of the queue)		
*/
void enqueue(queue* q, item* newItem){
 100:	fc 01       	movw	r30, r24
	if (q->tail != NULL){
 102:	a2 81       	ldd	r26, Z+2	; 0x02
 104:	b3 81       	ldd	r27, Z+3	; 0x03
 106:	10 97       	sbiw	r26, 0x00	; 0
 108:	39 f0       	breq	.+14     	; 0x118 <enqueue+0x18>
		/* Not an empty queue */
		q->tail->next = newItem;
 10a:	17 96       	adiw	r26, 0x07	; 7
 10c:	7c 93       	st	X, r23
 10e:	6e 93       	st	-X, r22
 110:	16 97       	sbiw	r26, 0x06	; 6
		q->tail = newItem;
 112:	73 83       	std	Z+3, r23	; 0x03
 114:	62 83       	std	Z+2, r22	; 0x02
 116:	08 95       	ret
	}/*if*/
	else{
		/* It's an empty Queue */
		q->head = newItem;
 118:	71 83       	std	Z+1, r23	; 0x01
 11a:	60 83       	st	Z, r22
		q->tail = newItem;
 11c:	73 83       	std	Z+3, r23	; 0x03
 11e:	62 83       	std	Z+2, r22	; 0x02
 120:	08 95       	ret

00000122 <dequeue>:

/**************************************************************************************
* DESC : Removes the link from the head of the list and assigns it to deQueuedLink
* RETURNS: Pointer to the dequeued link
*/
item* dequeue(queue* q){
 122:	dc 01       	movw	r26, r24
	item* deQueuedItem = q->head;	// Will set to NULL if Head points to NULL
 124:	ed 91       	ld	r30, X+
 126:	fc 91       	ld	r31, X
 128:	11 97       	sbiw	r26, 0x01	; 1
	/* Ensure it is not an empty queue */
	if (q->head != NULL){
 12a:	30 97       	sbiw	r30, 0x00	; 0
 12c:	71 f0       	breq	.+28     	; 0x14a <dequeue+0x28>
		q->head = q->head->next;
 12e:	86 81       	ldd	r24, Z+6	; 0x06
 130:	97 81       	ldd	r25, Z+7	; 0x07
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
		if(q->head == NULL) q->tail = NULL; // if that was the last element in the queue, set tail to NULL as well
 138:	89 2b       	or	r24, r25
 13a:	51 f4       	brne	.+20     	; 0x150 <dequeue+0x2e>
 13c:	13 96       	adiw	r26, 0x03	; 3
 13e:	1c 92       	st	X, r1
 140:	1e 92       	st	-X, r1
 142:	12 97       	sbiw	r26, 0x02	; 2
		return deQueuedItem;
 144:	8e 2f       	mov	r24, r30
 146:	9f 2f       	mov	r25, r31
 148:	08 95       	ret
	}/*if*/
	else return NULL;
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	08 95       	ret
	item* deQueuedItem = q->head;	// Will set to NULL if Head points to NULL
	/* Ensure it is not an empty queue */
	if (q->head != NULL){
		q->head = q->head->next;
		if(q->head == NULL) q->tail = NULL; // if that was the last element in the queue, set tail to NULL as well
		return deQueuedItem;
 150:	8e 2f       	mov	r24, r30
 152:	9f 2f       	mov	r25, r31
	}/*if*/
	else return NULL;
}/*dequeue*/
 154:	08 95       	ret

00000156 <__vector_21>:
		display_reflective_reading(avg);
		mTimer(7000);
		
		update_motor_speed(MOTOR_SPEED);
	}
}//ADC_calibrate
 156:	1f 92       	push	r1
 158:	0f 92       	push	r0
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	0f 92       	push	r0
 15e:	11 24       	eor	r1, r1
 160:	0f 90       	pop	r0
 162:	0f be       	out	0x3f, r0	; 63
 164:	0f 90       	pop	r0
 166:	1f 90       	pop	r1
 168:	18 95       	reti

0000016a <__vector_1>:
 16a:	1f 92       	push	r1
 16c:	0f 92       	push	r0
 16e:	0f b6       	in	r0, 0x3f	; 63
 170:	0f 92       	push	r0
 172:	11 24       	eor	r1, r1
 174:	0b b6       	in	r0, 0x3b	; 59
 176:	0f 92       	push	r0
 178:	2f 93       	push	r18
 17a:	3f 93       	push	r19
 17c:	4f 93       	push	r20
 17e:	5f 93       	push	r21
 180:	6f 93       	push	r22
 182:	7f 93       	push	r23
 184:	8f 93       	push	r24
 186:	9f 93       	push	r25
 188:	af 93       	push	r26
 18a:	bf 93       	push	r27
 18c:	ef 93       	push	r30
 18e:	ff 93       	push	r31
 190:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <item_number>
 194:	8f 5f       	subi	r24, 0xFF	; 255
 196:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <item_number>
 19a:	9c df       	rcall	.-200    	; 0xd4 <initItem>
 19c:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <item_number>
 1a0:	fc 01       	movw	r30, r24
 1a2:	25 83       	std	Z+5, r18	; 0x05
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	24 83       	std	Z+4, r18	; 0x04
 1a8:	bc 01       	movw	r22, r24
 1aa:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <entryList>
 1ae:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <entryList+0x1>
 1b2:	a6 df       	rcall	.-180    	; 0x100 <enqueue>
 1b4:	ff 91       	pop	r31
 1b6:	ef 91       	pop	r30
 1b8:	bf 91       	pop	r27
 1ba:	af 91       	pop	r26
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	7f 91       	pop	r23
 1c2:	6f 91       	pop	r22
 1c4:	5f 91       	pop	r21
 1c6:	4f 91       	pop	r20
 1c8:	3f 91       	pop	r19
 1ca:	2f 91       	pop	r18
 1cc:	0f 90       	pop	r0
 1ce:	0b be       	out	0x3b, r0	; 59
 1d0:	0f 90       	pop	r0
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	0f 90       	pop	r0
 1d6:	1f 90       	pop	r1
 1d8:	18 95       	reti

000001da <__vector_2>:
 1da:	1f 92       	push	r1
 1dc:	0f 92       	push	r0
 1de:	0f b6       	in	r0, 0x3f	; 63
 1e0:	0f 92       	push	r0
 1e2:	11 24       	eor	r1, r1
 1e4:	0b b6       	in	r0, 0x3b	; 59
 1e6:	0f 92       	push	r0
 1e8:	8f 93       	push	r24
 1ea:	ef 93       	push	r30
 1ec:	ff 93       	push	r31
 1ee:	e0 91 4b 01 	lds	r30, 0x014B	; 0x80014b <entryList>
 1f2:	f0 91 4c 01 	lds	r31, 0x014C	; 0x80014c <entryList+0x1>
 1f6:	02 80       	ldd	r0, Z+2	; 0x02
 1f8:	f3 81       	ldd	r31, Z+3	; 0x03
 1fa:	e0 2d       	mov	r30, r0
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	80 83       	st	Z, r24
 200:	ff 91       	pop	r31
 202:	ef 91       	pop	r30
 204:	8f 91       	pop	r24
 206:	0f 90       	pop	r0
 208:	0b be       	out	0x3b, r0	; 59
 20a:	0f 90       	pop	r0
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	0f 90       	pop	r0
 210:	1f 90       	pop	r1
 212:	18 95       	reti

00000214 <__vector_3>:
 214:	1f 92       	push	r1
 216:	0f 92       	push	r0
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	0f 92       	push	r0
 21c:	11 24       	eor	r1, r1
 21e:	0b b6       	in	r0, 0x3b	; 59
 220:	0f 92       	push	r0
 222:	2f 93       	push	r18
 224:	3f 93       	push	r19
 226:	4f 93       	push	r20
 228:	5f 93       	push	r21
 22a:	6f 93       	push	r22
 22c:	7f 93       	push	r23
 22e:	8f 93       	push	r24
 230:	9f 93       	push	r25
 232:	af 93       	push	r26
 234:	bf 93       	push	r27
 236:	ef 93       	push	r30
 238:	ff 93       	push	r31
 23a:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <reflective_present>
 23e:	88 23       	and	r24, r24
 240:	21 f1       	breq	.+72     	; 0x28a <__vector_3+0x76>
 242:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <STATE>
 246:	82 30       	cpi	r24, 0x02	; 2
 248:	a1 f4       	brne	.+40     	; 0x272 <__vector_3+0x5e>
 24a:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <entryList>
 24e:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <entryList+0x1>
 252:	67 df       	rcall	.-306    	; 0x122 <dequeue>
 254:	20 91 4d 01 	lds	r18, 0x014D	; 0x80014d <ADC_lowest_val>
 258:	30 91 4e 01 	lds	r19, 0x014E	; 0x80014e <ADC_lowest_val+0x1>
 25c:	fc 01       	movw	r30, r24
 25e:	32 83       	std	Z+2, r19	; 0x02
 260:	21 83       	std	Z+1, r18	; 0x01
 262:	22 e0       	ldi	r18, 0x02	; 2
 264:	24 83       	std	Z+4, r18	; 0x04
 266:	bc 01       	movw	r22, r24
 268:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <reflectiveList>
 26c:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <reflectiveList+0x1>
 270:	47 df       	rcall	.-370    	; 0x100 <enqueue>
 272:	8f ef       	ldi	r24, 0xFF	; 255
 274:	93 e0       	ldi	r25, 0x03	; 3
 276:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <ADC_lowest_val+0x1>
 27a:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <ADC_lowest_val>
 27e:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <reflective_present>
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <item_ready>
 288:	08 c0       	rjmp	.+16     	; 0x29a <__vector_3+0x86>
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <reflective_present>
 290:	ea e7       	ldi	r30, 0x7A	; 122
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	80 64       	ori	r24, 0x40	; 64
 298:	80 83       	st	Z, r24
 29a:	ff 91       	pop	r31
 29c:	ef 91       	pop	r30
 29e:	bf 91       	pop	r27
 2a0:	af 91       	pop	r26
 2a2:	9f 91       	pop	r25
 2a4:	8f 91       	pop	r24
 2a6:	7f 91       	pop	r23
 2a8:	6f 91       	pop	r22
 2aa:	5f 91       	pop	r21
 2ac:	4f 91       	pop	r20
 2ae:	3f 91       	pop	r19
 2b0:	2f 91       	pop	r18
 2b2:	0f 90       	pop	r0
 2b4:	0b be       	out	0x3b, r0	; 59
 2b6:	0f 90       	pop	r0
 2b8:	0f be       	out	0x3f, r0	; 63
 2ba:	0f 90       	pop	r0
 2bc:	1f 90       	pop	r1
 2be:	18 95       	reti

000002c0 <__vector_29>:
 2c0:	1f 92       	push	r1
 2c2:	0f 92       	push	r0
 2c4:	0f b6       	in	r0, 0x3f	; 63
 2c6:	0f 92       	push	r0
 2c8:	11 24       	eor	r1, r1
 2ca:	0b b6       	in	r0, 0x3b	; 59
 2cc:	0f 92       	push	r0
 2ce:	2f 93       	push	r18
 2d0:	3f 93       	push	r19
 2d2:	8f 93       	push	r24
 2d4:	9f 93       	push	r25
 2d6:	ef 93       	push	r30
 2d8:	ff 93       	push	r31
 2da:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <reflective_present>
 2de:	88 23       	and	r24, r24
 2e0:	29 f1       	breq	.+74     	; 0x32c <__vector_29+0x6c>
 2e2:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2e6:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	98 2f       	mov	r25, r24
 2ee:	88 27       	eor	r24, r24
 2f0:	82 0f       	add	r24, r18
 2f2:	91 1d       	adc	r25, r1
 2f4:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <ADC_result+0x1>
 2f8:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <ADC_result>
 2fc:	20 91 1b 01 	lds	r18, 0x011B	; 0x80011b <ADC_result>
 300:	30 91 1c 01 	lds	r19, 0x011C	; 0x80011c <ADC_result+0x1>
 304:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <ADC_lowest_val>
 308:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <ADC_lowest_val+0x1>
 30c:	28 17       	cp	r18, r24
 30e:	39 07       	cpc	r19, r25
 310:	40 f4       	brcc	.+16     	; 0x322 <__vector_29+0x62>
 312:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <ADC_result>
 316:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <ADC_result+0x1>
 31a:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <ADC_lowest_val+0x1>
 31e:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <ADC_lowest_val>
 322:	ea e7       	ldi	r30, 0x7A	; 122
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	80 81       	ld	r24, Z
 328:	80 64       	ori	r24, 0x40	; 64
 32a:	80 83       	st	Z, r24
 32c:	ff 91       	pop	r31
 32e:	ef 91       	pop	r30
 330:	9f 91       	pop	r25
 332:	8f 91       	pop	r24
 334:	3f 91       	pop	r19
 336:	2f 91       	pop	r18
 338:	0f 90       	pop	r0
 33a:	0b be       	out	0x3b, r0	; 59
 33c:	0f 90       	pop	r0
 33e:	0f be       	out	0x3f, r0	; 63
 340:	0f 90       	pop	r0
 342:	1f 90       	pop	r1
 344:	18 95       	reti

00000346 <__vector_default>:
 346:	1f 92       	push	r1
 348:	0f 92       	push	r0
 34a:	0f b6       	in	r0, 0x3f	; 63
 34c:	0f 92       	push	r0
 34e:	11 24       	eor	r1, r1
 350:	0f 90       	pop	r0
 352:	0f be       	out	0x3f, r0	; 63
 354:	0f 90       	pop	r0
 356:	1f 90       	pop	r1
 358:	18 95       	reti

0000035a <init_interrupts>:
 35a:	8a e9       	ldi	r24, 0x9A	; 154
 35c:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 360:	8d b3       	in	r24, 0x1d	; 29
 362:	8f 60       	ori	r24, 0x0F	; 15
 364:	8d bb       	out	0x1d, r24	; 29
 366:	08 95       	ret

00000368 <init_timer0_pwm>:
 368:	84 b5       	in	r24, 0x24	; 36
 36a:	83 68       	ori	r24, 0x83	; 131
 36c:	84 bd       	out	0x24, r24	; 36
 36e:	85 b5       	in	r24, 0x25	; 37
 370:	82 60       	ori	r24, 0x02	; 2
 372:	85 bd       	out	0x25, r24	; 37
 374:	80 e8       	ldi	r24, 0x80	; 128
 376:	87 bd       	out	0x27, r24	; 39
 378:	08 95       	ret

0000037a <init_motor>:
 37a:	84 e0       	ldi	r24, 0x04	; 4
 37c:	85 b9       	out	0x05, r24	; 5
 37e:	80 e3       	ldi	r24, 0x30	; 48
 380:	87 bd       	out	0x27, r24	; 39
 382:	08 95       	ret

00000384 <init_ADC>:
 384:	8f ef       	ldi	r24, 0xFF	; 255
 386:	93 e0       	ldi	r25, 0x03	; 3
 388:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <ADC_result+0x1>
 38c:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <ADC_result>
 390:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <ADC_lowest_val+0x1>
 394:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <ADC_lowest_val>
 398:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <reflective_present>
 39c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <item_ready>
 3a0:	ec e7       	ldi	r30, 0x7C	; 124
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	80 81       	ld	r24, Z
 3a6:	80 64       	ori	r24, 0x40	; 64
 3a8:	80 83       	st	Z, r24
 3aa:	ea e7       	ldi	r30, 0x7A	; 122
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	80 81       	ld	r24, Z
 3b0:	82 60       	ori	r24, 0x02	; 2
 3b2:	80 83       	st	Z, r24
 3b4:	80 81       	ld	r24, Z
 3b6:	81 60       	ori	r24, 0x01	; 1
 3b8:	80 83       	st	Z, r24
 3ba:	80 81       	ld	r24, Z
 3bc:	88 60       	ori	r24, 0x08	; 8
 3be:	80 83       	st	Z, r24
 3c0:	80 81       	ld	r24, Z
 3c2:	80 68       	ori	r24, 0x80	; 128
 3c4:	80 83       	st	Z, r24
 3c6:	08 95       	ret

000003c8 <init_stepper>:
 3c8:	8f ef       	ldi	r24, 0xFF	; 255
 3ca:	81 b9       	out	0x01, r24	; 1
 3cc:	85 e3       	ldi	r24, 0x35	; 53
 3ce:	82 b9       	out	0x02, r24	; 2
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <motor_position+0x1>
 3d8:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <motor_position>
 3dc:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <stepper_on+0x1>
 3e0:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <stepper_on>
 3e4:	08 95       	ret

000003e6 <mTimer>:
 3e6:	ac 01       	movw	r20, r24
 3e8:	e1 e8       	ldi	r30, 0x81	; 129
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	90 81       	ld	r25, Z
 3ee:	91 60       	ori	r25, 0x01	; 1
 3f0:	90 83       	st	Z, r25
 3f2:	90 81       	ld	r25, Z
 3f4:	98 60       	ori	r25, 0x08	; 8
 3f6:	90 83       	st	Z, r25
 3f8:	88 ee       	ldi	r24, 0xE8	; 232
 3fa:	93 e0       	ldi	r25, 0x03	; 3
 3fc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 400:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 404:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 408:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 40c:	b1 9a       	sbi	0x16, 1	; 22
 40e:	20 e0       	ldi	r18, 0x00	; 0
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	05 c0       	rjmp	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	b1 9b       	sbis	0x16, 1	; 22
 416:	fe cf       	rjmp	.-4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 418:	b1 9a       	sbi	0x16, 1	; 22
 41a:	2f 5f       	subi	r18, 0xFF	; 255
 41c:	3f 4f       	sbci	r19, 0xFF	; 255
 41e:	24 17       	cp	r18, r20
 420:	35 07       	cpc	r19, r21
 422:	1c f4       	brge	.+6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 424:	b1 9b       	sbis	0x16, 1	; 22
 426:	f6 cf       	rjmp	.-20     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 428:	f7 cf       	rjmp	.-18     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 42a:	08 95       	ret

0000042c <stepper_rotate>:
 42c:	cf 92       	push	r12
 42e:	df 92       	push	r13
 430:	ef 92       	push	r14
 432:	ff 92       	push	r15
 434:	0f 93       	push	r16
 436:	1f 93       	push	r17
 438:	cf 93       	push	r28
 43a:	df 93       	push	r29
 43c:	18 16       	cp	r1, r24
 43e:	19 06       	cpc	r1, r25
 440:	0c f0       	brlt	.+2      	; 0x444 <stepper_rotate+0x18>
 442:	61 c0       	rjmp	.+194    	; 0x506 <stepper_rotate+0xda>
 444:	6b 01       	movw	r12, r22
 446:	8c 01       	movw	r16, r24
 448:	c0 e0       	ldi	r28, 0x00	; 0
 44a:	d0 e0       	ldi	r29, 0x00	; 0
 44c:	0f 2e       	mov	r0, r31
 44e:	f2 e1       	ldi	r31, 0x12	; 18
 450:	ef 2e       	mov	r14, r31
 452:	f1 2c       	mov	r15, r1
 454:	f0 2d       	mov	r31, r0
 456:	81 e0       	ldi	r24, 0x01	; 1
 458:	c8 16       	cp	r12, r24
 45a:	d1 04       	cpc	r13, r1
 45c:	d1 f4       	brne	.+52     	; 0x492 <stepper_rotate+0x66>
 45e:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end>
 462:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x1>
 466:	e6 5f       	subi	r30, 0xF6	; 246
 468:	fe 4f       	sbci	r31, 0xFE	; 254
 46a:	80 81       	ld	r24, Z
 46c:	82 b9       	out	0x02, r24	; 2
 46e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 472:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 476:	01 96       	adiw	r24, 0x01	; 1
 478:	83 70       	andi	r24, 0x03	; 3
 47a:	90 78       	andi	r25, 0x80	; 128
 47c:	99 23       	and	r25, r25
 47e:	24 f4       	brge	.+8      	; 0x488 <stepper_rotate+0x5c>
 480:	01 97       	sbiw	r24, 0x01	; 1
 482:	8c 6f       	ori	r24, 0xFC	; 252
 484:	9f 6f       	ori	r25, 0xFF	; 255
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 48c:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 490:	1d c0       	rjmp	.+58     	; 0x4cc <stepper_rotate+0xa0>
 492:	8f ef       	ldi	r24, 0xFF	; 255
 494:	c8 16       	cp	r12, r24
 496:	d8 06       	cpc	r13, r24
 498:	c9 f4       	brne	.+50     	; 0x4cc <stepper_rotate+0xa0>
 49a:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <__data_end>
 49e:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <__data_end+0x1>
 4a2:	ea 5f       	subi	r30, 0xFA	; 250
 4a4:	fe 4f       	sbci	r31, 0xFE	; 254
 4a6:	80 81       	ld	r24, Z
 4a8:	82 b9       	out	0x02, r24	; 2
 4aa:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 4ae:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 4b2:	01 96       	adiw	r24, 0x01	; 1
 4b4:	83 70       	andi	r24, 0x03	; 3
 4b6:	90 78       	andi	r25, 0x80	; 128
 4b8:	99 23       	and	r25, r25
 4ba:	24 f4       	brge	.+8      	; 0x4c4 <stepper_rotate+0x98>
 4bc:	01 97       	sbiw	r24, 0x01	; 1
 4be:	8c 6f       	ori	r24, 0xFC	; 252
 4c0:	9f 6f       	ori	r25, 0xFF	; 255
 4c2:	01 96       	adiw	r24, 0x01	; 1
 4c4:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <__data_end+0x1>
 4c8:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 4cc:	c7 01       	movw	r24, r14
 4ce:	8b df       	rcall	.-234    	; 0x3e6 <mTimer>
 4d0:	c5 30       	cpi	r28, 0x05	; 5
 4d2:	d1 05       	cpc	r29, r1
 4d4:	3c f4       	brge	.+14     	; 0x4e4 <stepper_rotate+0xb8>
 4d6:	88 e0       	ldi	r24, 0x08	; 8
 4d8:	e8 16       	cp	r14, r24
 4da:	f1 04       	cpc	r15, r1
 4dc:	1c f0       	brlt	.+6      	; 0x4e4 <stepper_rotate+0xb8>
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	e8 1a       	sub	r14, r24
 4e2:	f1 08       	sbc	r15, r1
 4e4:	c8 01       	movw	r24, r16
 4e6:	8c 1b       	sub	r24, r28
 4e8:	9d 0b       	sbc	r25, r29
 4ea:	06 97       	sbiw	r24, 0x06	; 6
 4ec:	3c f4       	brge	.+14     	; 0x4fc <stepper_rotate+0xd0>
 4ee:	83 e1       	ldi	r24, 0x13	; 19
 4f0:	e8 16       	cp	r14, r24
 4f2:	f1 04       	cpc	r15, r1
 4f4:	1c f4       	brge	.+6      	; 0x4fc <stepper_rotate+0xd0>
 4f6:	82 e0       	ldi	r24, 0x02	; 2
 4f8:	e8 0e       	add	r14, r24
 4fa:	f1 1c       	adc	r15, r1
 4fc:	21 96       	adiw	r28, 0x01	; 1
 4fe:	0c 17       	cp	r16, r28
 500:	1d 07       	cpc	r17, r29
 502:	09 f0       	breq	.+2      	; 0x506 <stepper_rotate+0xda>
 504:	a8 cf       	rjmp	.-176    	; 0x456 <stepper_rotate+0x2a>
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	1f 91       	pop	r17
 50c:	0f 91       	pop	r16
 50e:	ff 90       	pop	r15
 510:	ef 90       	pop	r14
 512:	df 90       	pop	r13
 514:	cf 90       	pop	r12
 516:	08 95       	ret

00000518 <stepper_position>:
 518:	cf 93       	push	r28
 51a:	df 93       	push	r29
 51c:	21 e0       	ldi	r18, 0x01	; 1
 51e:	30 e0       	ldi	r19, 0x00	; 0
 520:	30 93 48 01 	sts	0x0148, r19	; 0x800148 <stepper_on+0x1>
 524:	20 93 47 01 	sts	0x0147, r18	; 0x800147 <stepper_on>
 528:	c8 2f       	mov	r28, r24
 52a:	d0 e0       	ldi	r29, 0x00	; 0
 52c:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <motor_position>
 530:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <motor_position+0x1>
 534:	9e 01       	movw	r18, r28
 536:	28 1b       	sub	r18, r24
 538:	39 0b       	sbc	r19, r25
 53a:	c9 01       	movw	r24, r18
 53c:	21 30       	cpi	r18, 0x01	; 1
 53e:	31 05       	cpc	r19, r1
 540:	21 f0       	breq	.+8      	; 0x54a <stepper_position+0x32>
 542:	8d 3f       	cpi	r24, 0xFD	; 253
 544:	3f ef       	ldi	r19, 0xFF	; 255
 546:	93 07       	cpc	r25, r19
 548:	31 f4       	brne	.+12     	; 0x556 <stepper_position+0x3e>
 54a:	61 e0       	ldi	r22, 0x01	; 1
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	82 e3       	ldi	r24, 0x32	; 50
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	6c df       	rcall	.-296    	; 0x42c <stepper_rotate>
 554:	17 c0       	rjmp	.+46     	; 0x584 <stepper_position+0x6c>
 556:	8f 3f       	cpi	r24, 0xFF	; 255
 558:	2f ef       	ldi	r18, 0xFF	; 255
 55a:	92 07       	cpc	r25, r18
 55c:	19 f0       	breq	.+6      	; 0x564 <stepper_position+0x4c>
 55e:	83 30       	cpi	r24, 0x03	; 3
 560:	91 05       	cpc	r25, r1
 562:	31 f4       	brne	.+12     	; 0x570 <stepper_position+0x58>
 564:	6f ef       	ldi	r22, 0xFF	; 255
 566:	7f ef       	ldi	r23, 0xFF	; 255
 568:	82 e3       	ldi	r24, 0x32	; 50
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	5f df       	rcall	.-322    	; 0x42c <stepper_rotate>
 56e:	0a c0       	rjmp	.+20     	; 0x584 <stepper_position+0x6c>
 570:	82 30       	cpi	r24, 0x02	; 2
 572:	91 05       	cpc	r25, r1
 574:	11 f0       	breq	.+4      	; 0x57a <stepper_position+0x62>
 576:	02 96       	adiw	r24, 0x02	; 2
 578:	29 f4       	brne	.+10     	; 0x584 <stepper_position+0x6c>
 57a:	61 e0       	ldi	r22, 0x01	; 1
 57c:	70 e0       	ldi	r23, 0x00	; 0
 57e:	84 e6       	ldi	r24, 0x64	; 100
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	54 df       	rcall	.-344    	; 0x42c <stepper_rotate>
 584:	d0 93 1e 01 	sts	0x011E, r29	; 0x80011e <motor_position+0x1>
 588:	c0 93 1d 01 	sts	0x011D, r28	; 0x80011d <motor_position>
 58c:	10 92 48 01 	sts	0x0148, r1	; 0x800148 <stepper_on+0x1>
 590:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <stepper_on>
 594:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <item_waiting>
 598:	88 23       	and	r24, r24
 59a:	21 f0       	breq	.+8      	; 0x5a4 <stepper_position+0x8c>
 59c:	80 e3       	ldi	r24, 0x30	; 48
 59e:	87 bd       	out	0x27, r24	; 39
 5a0:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <item_waiting>
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	08 95       	ret

000005aa <__vector_4>:
 5aa:	1f 92       	push	r1
 5ac:	0f 92       	push	r0
 5ae:	0f b6       	in	r0, 0x3f	; 63
 5b0:	0f 92       	push	r0
 5b2:	11 24       	eor	r1, r1
 5b4:	0b b6       	in	r0, 0x3b	; 59
 5b6:	0f 92       	push	r0
 5b8:	2f 93       	push	r18
 5ba:	3f 93       	push	r19
 5bc:	4f 93       	push	r20
 5be:	5f 93       	push	r21
 5c0:	6f 93       	push	r22
 5c2:	7f 93       	push	r23
 5c4:	8f 93       	push	r24
 5c6:	9f 93       	push	r25
 5c8:	af 93       	push	r26
 5ca:	bf 93       	push	r27
 5cc:	ef 93       	push	r30
 5ce:	ff 93       	push	r31
 5d0:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <classifiedList>
 5d4:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <classifiedList+0x1>
 5d8:	a4 dd       	rcall	.-1208   	; 0x122 <dequeue>
 5da:	bc 01       	movw	r22, r24
 5dc:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <sortedList>
 5e0:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <sortedList+0x1>
 5e4:	8d dd       	rcall	.-1254   	; 0x100 <enqueue>
 5e6:	15 b8       	out	0x05, r1	; 5
 5e8:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <sortedList>
 5ec:	f0 91 20 01 	lds	r31, 0x0120	; 0x800120 <sortedList+0x1>
 5f0:	02 80       	ldd	r0, Z+2	; 0x02
 5f2:	f3 81       	ldd	r31, Z+3	; 0x03
 5f4:	e0 2d       	mov	r30, r0
 5f6:	83 81       	ldd	r24, Z+3	; 0x03
 5f8:	8f 5f       	subi	r24, 0xFF	; 255
 5fa:	8e df       	rcall	.-228    	; 0x518 <stepper_position>
 5fc:	be de       	rcall	.-644    	; 0x37a <init_motor>
 5fe:	ff 91       	pop	r31
 600:	ef 91       	pop	r30
 602:	bf 91       	pop	r27
 604:	af 91       	pop	r26
 606:	9f 91       	pop	r25
 608:	8f 91       	pop	r24
 60a:	7f 91       	pop	r23
 60c:	6f 91       	pop	r22
 60e:	5f 91       	pop	r21
 610:	4f 91       	pop	r20
 612:	3f 91       	pop	r19
 614:	2f 91       	pop	r18
 616:	0f 90       	pop	r0
 618:	0b be       	out	0x3b, r0	; 59
 61a:	0f 90       	pop	r0
 61c:	0f be       	out	0x3f, r0	; 63
 61e:	0f 90       	pop	r0
 620:	1f 90       	pop	r1
 622:	18 95       	reti

00000624 <classify_item>:
 624:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <reflectiveList>
 628:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <reflectiveList+0x1>
 62c:	7a dd       	rcall	.-1292   	; 0x122 <dequeue>
 62e:	fc 01       	movw	r30, r24
 630:	81 81       	ldd	r24, Z+1	; 0x01
 632:	92 81       	ldd	r25, Z+2	; 0x02
 634:	20 81       	ld	r18, Z
 636:	21 11       	cpse	r18, r1
 638:	1f c0       	rjmp	.+62     	; 0x678 <classify_item+0x54>
 63a:	ae e0       	ldi	r26, 0x0E	; 14
 63c:	b1 e0       	ldi	r27, 0x01	; 1
 63e:	4d 91       	ld	r20, X+
 640:	5c 91       	ld	r21, X
 642:	11 97       	sbiw	r26, 0x01	; 1
 644:	12 96       	adiw	r26, 0x02	; 2
 646:	2d 91       	ld	r18, X+
 648:	3c 91       	ld	r19, X
 64a:	13 97       	sbiw	r26, 0x03	; 3
 64c:	48 1b       	sub	r20, r24
 64e:	59 0b       	sbc	r21, r25
 650:	ba 01       	movw	r22, r20
 652:	22 f4       	brpl	.+8      	; 0x65c <classify_item+0x38>
 654:	66 27       	eor	r22, r22
 656:	77 27       	eor	r23, r23
 658:	64 1b       	sub	r22, r20
 65a:	75 0b       	sbc	r23, r21
 65c:	a9 01       	movw	r20, r18
 65e:	48 1b       	sub	r20, r24
 660:	59 0b       	sbc	r21, r25
 662:	9a 01       	movw	r18, r20
 664:	22 f4       	brpl	.+8      	; 0x66e <classify_item+0x4a>
 666:	22 27       	eor	r18, r18
 668:	33 27       	eor	r19, r19
 66a:	24 1b       	sub	r18, r20
 66c:	35 0b       	sbc	r19, r21
 66e:	62 17       	cp	r22, r18
 670:	73 07       	cpc	r23, r19
 672:	90 f1       	brcs	.+100    	; 0x6d8 <classify_item+0xb4>
 674:	82 e0       	ldi	r24, 0x02	; 2
 676:	25 c0       	rjmp	.+74     	; 0x6c2 <classify_item+0x9e>
 678:	21 30       	cpi	r18, 0x01	; 1
 67a:	01 f5       	brne	.+64     	; 0x6bc <classify_item+0x98>
 67c:	ae e0       	ldi	r26, 0x0E	; 14
 67e:	b1 e0       	ldi	r27, 0x01	; 1
 680:	14 96       	adiw	r26, 0x04	; 4
 682:	4d 91       	ld	r20, X+
 684:	5c 91       	ld	r21, X
 686:	15 97       	sbiw	r26, 0x05	; 5
 688:	16 96       	adiw	r26, 0x06	; 6
 68a:	2d 91       	ld	r18, X+
 68c:	3c 91       	ld	r19, X
 68e:	17 97       	sbiw	r26, 0x07	; 7
 690:	48 1b       	sub	r20, r24
 692:	59 0b       	sbc	r21, r25
 694:	ba 01       	movw	r22, r20
 696:	22 f4       	brpl	.+8      	; 0x6a0 <classify_item+0x7c>
 698:	66 27       	eor	r22, r22
 69a:	77 27       	eor	r23, r23
 69c:	64 1b       	sub	r22, r20
 69e:	75 0b       	sbc	r23, r21
 6a0:	a9 01       	movw	r20, r18
 6a2:	48 1b       	sub	r20, r24
 6a4:	59 0b       	sbc	r21, r25
 6a6:	9a 01       	movw	r18, r20
 6a8:	22 f4       	brpl	.+8      	; 0x6b2 <classify_item+0x8e>
 6aa:	22 27       	eor	r18, r18
 6ac:	33 27       	eor	r19, r19
 6ae:	24 1b       	sub	r18, r20
 6b0:	35 0b       	sbc	r19, r21
 6b2:	62 17       	cp	r22, r18
 6b4:	73 07       	cpc	r23, r19
 6b6:	20 f0       	brcs	.+8      	; 0x6c0 <classify_item+0x9c>
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <classify_item+0x9e>
 6bc:	80 e0       	ldi	r24, 0x00	; 0
 6be:	01 c0       	rjmp	.+2      	; 0x6c2 <classify_item+0x9e>
 6c0:	83 e0       	ldi	r24, 0x03	; 3
 6c2:	83 83       	std	Z+3, r24	; 0x03
 6c4:	93 e0       	ldi	r25, 0x03	; 3
 6c6:	94 83       	std	Z+4, r25	; 0x04
 6c8:	88 b9       	out	0x08, r24	; 8
 6ca:	bf 01       	movw	r22, r30
 6cc:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <classifiedList>
 6d0:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <classifiedList+0x1>
 6d4:	15 cd       	rjmp	.-1494   	; 0x100 <enqueue>
 6d6:	08 95       	ret
 6d8:	80 e0       	ldi	r24, 0x00	; 0
 6da:	f3 cf       	rjmp	.-26     	; 0x6c2 <classify_item+0x9e>

000006dc <main>:
//##############	Main Program	##############//

int main(void)
{
	// Init port directions
	DDRA = 0x00;		// Port A all inputs (button and switch)
 6dc:	11 b8       	out	0x01, r1	; 1
	DDRB = 0x8F;		// PB7 = output for PWM signal
 6de:	8f e8       	ldi	r24, 0x8F	; 143
 6e0:	84 b9       	out	0x04, r24	; 4
						// PB3:0 = output for motor
	DDRC = 0xFF;		// Port C all output (LEDs)
 6e2:	8f ef       	ldi	r24, 0xFF	; 255
 6e4:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xF0;		// Port D 3:0 = sensor input (External Interrupts)
 6e6:	80 ef       	ldi	r24, 0xF0	; 240
 6e8:	8a b9       	out	0x0a, r24	; 10
	DDRE = 0x00;		// Port E input (buttons/interrupts)
 6ea:	1d b8       	out	0x0d, r1	; 13
	DDRF = 0x00;		// Port F input (ADC and ?)
 6ec:	10 ba       	out	0x10, r1	; 16
	
	PORTC = 0x00;
 6ee:	18 b8       	out	0x08, r1	; 8
	
	// Initialize Peripherals
	cli();
	init_ADC();
	init_timer0_pwm();
 6f0:	f8 94       	cli
 6f2:	48 de       	rcall	.-880    	; 0x384 <init_ADC>
 6f4:	39 de       	rcall	.-910    	; 0x368 <init_timer0_pwm>
 6f6:	41 de       	rcall	.-894    	; 0x37a <init_motor>
 6f8:	30 de       	rcall	.-928    	; 0x35a <init_interrupts>
 6fa:	66 de       	rcall	.-820    	; 0x3c8 <init_stepper>
 6fc:	78 94       	sei
 6fe:	f7 dc       	rcall	.-1554   	; 0xee <initQueue>
 700:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <entryList+0x1>
 704:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <entryList>
 708:	f2 dc       	rcall	.-1564   	; 0xee <initQueue>
 70a:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <reflectiveList+0x1>
 70e:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <reflectiveList>
 712:	ed dc       	rcall	.-1574   	; 0xee <initQueue>
 714:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <classifiedList+0x1>
 718:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <classifiedList>
 71c:	e8 dc       	rcall	.-1584   	; 0xee <initQueue>
 71e:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <sortedList+0x1>
 722:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <sortedList>
 726:	82 e0       	ldi	r24, 0x02	; 2
 728:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <STATE>
 72c:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <item_waiting>
 730:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <item_number>
 734:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <item_ready>
 738:	88 23       	and	r24, r24
 73a:	e1 f3       	breq	.-8      	; 0x734 <main+0x58>
 73c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <item_ready>
 740:	71 df       	rcall	.-286    	; 0x624 <classify_item>
 742:	f8 cf       	rjmp	.-16     	; 0x734 <main+0x58>

00000744 <malloc>:
 744:	0f 93       	push	r16
 746:	1f 93       	push	r17
 748:	cf 93       	push	r28
 74a:	df 93       	push	r29
 74c:	82 30       	cpi	r24, 0x02	; 2
 74e:	91 05       	cpc	r25, r1
 750:	10 f4       	brcc	.+4      	; 0x756 <malloc+0x12>
 752:	82 e0       	ldi	r24, 0x02	; 2
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	e0 91 51 01 	lds	r30, 0x0151	; 0x800151 <__flp>
 75a:	f0 91 52 01 	lds	r31, 0x0152	; 0x800152 <__flp+0x1>
 75e:	20 e0       	ldi	r18, 0x00	; 0
 760:	30 e0       	ldi	r19, 0x00	; 0
 762:	a0 e0       	ldi	r26, 0x00	; 0
 764:	b0 e0       	ldi	r27, 0x00	; 0
 766:	30 97       	sbiw	r30, 0x00	; 0
 768:	19 f1       	breq	.+70     	; 0x7b0 <malloc+0x6c>
 76a:	40 81       	ld	r20, Z
 76c:	51 81       	ldd	r21, Z+1	; 0x01
 76e:	02 81       	ldd	r16, Z+2	; 0x02
 770:	13 81       	ldd	r17, Z+3	; 0x03
 772:	48 17       	cp	r20, r24
 774:	59 07       	cpc	r21, r25
 776:	c8 f0       	brcs	.+50     	; 0x7aa <malloc+0x66>
 778:	84 17       	cp	r24, r20
 77a:	95 07       	cpc	r25, r21
 77c:	69 f4       	brne	.+26     	; 0x798 <malloc+0x54>
 77e:	10 97       	sbiw	r26, 0x00	; 0
 780:	31 f0       	breq	.+12     	; 0x78e <malloc+0x4a>
 782:	12 96       	adiw	r26, 0x02	; 2
 784:	0c 93       	st	X, r16
 786:	12 97       	sbiw	r26, 0x02	; 2
 788:	13 96       	adiw	r26, 0x03	; 3
 78a:	1c 93       	st	X, r17
 78c:	27 c0       	rjmp	.+78     	; 0x7dc <malloc+0x98>
 78e:	00 93 51 01 	sts	0x0151, r16	; 0x800151 <__flp>
 792:	10 93 52 01 	sts	0x0152, r17	; 0x800152 <__flp+0x1>
 796:	22 c0       	rjmp	.+68     	; 0x7dc <malloc+0x98>
 798:	21 15       	cp	r18, r1
 79a:	31 05       	cpc	r19, r1
 79c:	19 f0       	breq	.+6      	; 0x7a4 <malloc+0x60>
 79e:	42 17       	cp	r20, r18
 7a0:	53 07       	cpc	r21, r19
 7a2:	18 f4       	brcc	.+6      	; 0x7aa <malloc+0x66>
 7a4:	9a 01       	movw	r18, r20
 7a6:	bd 01       	movw	r22, r26
 7a8:	ef 01       	movw	r28, r30
 7aa:	df 01       	movw	r26, r30
 7ac:	f8 01       	movw	r30, r16
 7ae:	db cf       	rjmp	.-74     	; 0x766 <malloc+0x22>
 7b0:	21 15       	cp	r18, r1
 7b2:	31 05       	cpc	r19, r1
 7b4:	f9 f0       	breq	.+62     	; 0x7f4 <malloc+0xb0>
 7b6:	28 1b       	sub	r18, r24
 7b8:	39 0b       	sbc	r19, r25
 7ba:	24 30       	cpi	r18, 0x04	; 4
 7bc:	31 05       	cpc	r19, r1
 7be:	80 f4       	brcc	.+32     	; 0x7e0 <malloc+0x9c>
 7c0:	8a 81       	ldd	r24, Y+2	; 0x02
 7c2:	9b 81       	ldd	r25, Y+3	; 0x03
 7c4:	61 15       	cp	r22, r1
 7c6:	71 05       	cpc	r23, r1
 7c8:	21 f0       	breq	.+8      	; 0x7d2 <malloc+0x8e>
 7ca:	fb 01       	movw	r30, r22
 7cc:	93 83       	std	Z+3, r25	; 0x03
 7ce:	82 83       	std	Z+2, r24	; 0x02
 7d0:	04 c0       	rjmp	.+8      	; 0x7da <malloc+0x96>
 7d2:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <__flp+0x1>
 7d6:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <__flp>
 7da:	fe 01       	movw	r30, r28
 7dc:	32 96       	adiw	r30, 0x02	; 2
 7de:	44 c0       	rjmp	.+136    	; 0x868 <malloc+0x124>
 7e0:	fe 01       	movw	r30, r28
 7e2:	e2 0f       	add	r30, r18
 7e4:	f3 1f       	adc	r31, r19
 7e6:	81 93       	st	Z+, r24
 7e8:	91 93       	st	Z+, r25
 7ea:	22 50       	subi	r18, 0x02	; 2
 7ec:	31 09       	sbc	r19, r1
 7ee:	39 83       	std	Y+1, r19	; 0x01
 7f0:	28 83       	st	Y, r18
 7f2:	3a c0       	rjmp	.+116    	; 0x868 <malloc+0x124>
 7f4:	20 91 4f 01 	lds	r18, 0x014F	; 0x80014f <__brkval>
 7f8:	30 91 50 01 	lds	r19, 0x0150	; 0x800150 <__brkval+0x1>
 7fc:	23 2b       	or	r18, r19
 7fe:	41 f4       	brne	.+16     	; 0x810 <malloc+0xcc>
 800:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 804:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 808:	30 93 50 01 	sts	0x0150, r19	; 0x800150 <__brkval+0x1>
 80c:	20 93 4f 01 	sts	0x014F, r18	; 0x80014f <__brkval>
 810:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 814:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 818:	21 15       	cp	r18, r1
 81a:	31 05       	cpc	r19, r1
 81c:	41 f4       	brne	.+16     	; 0x82e <malloc+0xea>
 81e:	2d b7       	in	r18, 0x3d	; 61
 820:	3e b7       	in	r19, 0x3e	; 62
 822:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 826:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 82a:	24 1b       	sub	r18, r20
 82c:	35 0b       	sbc	r19, r21
 82e:	e0 91 4f 01 	lds	r30, 0x014F	; 0x80014f <__brkval>
 832:	f0 91 50 01 	lds	r31, 0x0150	; 0x800150 <__brkval+0x1>
 836:	e2 17       	cp	r30, r18
 838:	f3 07       	cpc	r31, r19
 83a:	a0 f4       	brcc	.+40     	; 0x864 <malloc+0x120>
 83c:	2e 1b       	sub	r18, r30
 83e:	3f 0b       	sbc	r19, r31
 840:	28 17       	cp	r18, r24
 842:	39 07       	cpc	r19, r25
 844:	78 f0       	brcs	.+30     	; 0x864 <malloc+0x120>
 846:	ac 01       	movw	r20, r24
 848:	4e 5f       	subi	r20, 0xFE	; 254
 84a:	5f 4f       	sbci	r21, 0xFF	; 255
 84c:	24 17       	cp	r18, r20
 84e:	35 07       	cpc	r19, r21
 850:	48 f0       	brcs	.+18     	; 0x864 <malloc+0x120>
 852:	4e 0f       	add	r20, r30
 854:	5f 1f       	adc	r21, r31
 856:	50 93 50 01 	sts	0x0150, r21	; 0x800150 <__brkval+0x1>
 85a:	40 93 4f 01 	sts	0x014F, r20	; 0x80014f <__brkval>
 85e:	81 93       	st	Z+, r24
 860:	91 93       	st	Z+, r25
 862:	02 c0       	rjmp	.+4      	; 0x868 <malloc+0x124>
 864:	e0 e0       	ldi	r30, 0x00	; 0
 866:	f0 e0       	ldi	r31, 0x00	; 0
 868:	cf 01       	movw	r24, r30
 86a:	df 91       	pop	r29
 86c:	cf 91       	pop	r28
 86e:	1f 91       	pop	r17
 870:	0f 91       	pop	r16
 872:	08 95       	ret

00000874 <free>:
 874:	cf 93       	push	r28
 876:	df 93       	push	r29
 878:	00 97       	sbiw	r24, 0x00	; 0
 87a:	09 f4       	brne	.+2      	; 0x87e <free+0xa>
 87c:	81 c0       	rjmp	.+258    	; 0x980 <free+0x10c>
 87e:	fc 01       	movw	r30, r24
 880:	32 97       	sbiw	r30, 0x02	; 2
 882:	13 82       	std	Z+3, r1	; 0x03
 884:	12 82       	std	Z+2, r1	; 0x02
 886:	a0 91 51 01 	lds	r26, 0x0151	; 0x800151 <__flp>
 88a:	b0 91 52 01 	lds	r27, 0x0152	; 0x800152 <__flp+0x1>
 88e:	10 97       	sbiw	r26, 0x00	; 0
 890:	81 f4       	brne	.+32     	; 0x8b2 <free+0x3e>
 892:	20 81       	ld	r18, Z
 894:	31 81       	ldd	r19, Z+1	; 0x01
 896:	82 0f       	add	r24, r18
 898:	93 1f       	adc	r25, r19
 89a:	20 91 4f 01 	lds	r18, 0x014F	; 0x80014f <__brkval>
 89e:	30 91 50 01 	lds	r19, 0x0150	; 0x800150 <__brkval+0x1>
 8a2:	28 17       	cp	r18, r24
 8a4:	39 07       	cpc	r19, r25
 8a6:	51 f5       	brne	.+84     	; 0x8fc <free+0x88>
 8a8:	f0 93 50 01 	sts	0x0150, r31	; 0x800150 <__brkval+0x1>
 8ac:	e0 93 4f 01 	sts	0x014F, r30	; 0x80014f <__brkval>
 8b0:	67 c0       	rjmp	.+206    	; 0x980 <free+0x10c>
 8b2:	ed 01       	movw	r28, r26
 8b4:	20 e0       	ldi	r18, 0x00	; 0
 8b6:	30 e0       	ldi	r19, 0x00	; 0
 8b8:	ce 17       	cp	r28, r30
 8ba:	df 07       	cpc	r29, r31
 8bc:	40 f4       	brcc	.+16     	; 0x8ce <free+0x5a>
 8be:	4a 81       	ldd	r20, Y+2	; 0x02
 8c0:	5b 81       	ldd	r21, Y+3	; 0x03
 8c2:	9e 01       	movw	r18, r28
 8c4:	41 15       	cp	r20, r1
 8c6:	51 05       	cpc	r21, r1
 8c8:	f1 f0       	breq	.+60     	; 0x906 <free+0x92>
 8ca:	ea 01       	movw	r28, r20
 8cc:	f5 cf       	rjmp	.-22     	; 0x8b8 <free+0x44>
 8ce:	d3 83       	std	Z+3, r29	; 0x03
 8d0:	c2 83       	std	Z+2, r28	; 0x02
 8d2:	40 81       	ld	r20, Z
 8d4:	51 81       	ldd	r21, Z+1	; 0x01
 8d6:	84 0f       	add	r24, r20
 8d8:	95 1f       	adc	r25, r21
 8da:	c8 17       	cp	r28, r24
 8dc:	d9 07       	cpc	r29, r25
 8de:	59 f4       	brne	.+22     	; 0x8f6 <free+0x82>
 8e0:	88 81       	ld	r24, Y
 8e2:	99 81       	ldd	r25, Y+1	; 0x01
 8e4:	84 0f       	add	r24, r20
 8e6:	95 1f       	adc	r25, r21
 8e8:	02 96       	adiw	r24, 0x02	; 2
 8ea:	91 83       	std	Z+1, r25	; 0x01
 8ec:	80 83       	st	Z, r24
 8ee:	8a 81       	ldd	r24, Y+2	; 0x02
 8f0:	9b 81       	ldd	r25, Y+3	; 0x03
 8f2:	93 83       	std	Z+3, r25	; 0x03
 8f4:	82 83       	std	Z+2, r24	; 0x02
 8f6:	21 15       	cp	r18, r1
 8f8:	31 05       	cpc	r19, r1
 8fa:	29 f4       	brne	.+10     	; 0x906 <free+0x92>
 8fc:	f0 93 52 01 	sts	0x0152, r31	; 0x800152 <__flp+0x1>
 900:	e0 93 51 01 	sts	0x0151, r30	; 0x800151 <__flp>
 904:	3d c0       	rjmp	.+122    	; 0x980 <free+0x10c>
 906:	e9 01       	movw	r28, r18
 908:	fb 83       	std	Y+3, r31	; 0x03
 90a:	ea 83       	std	Y+2, r30	; 0x02
 90c:	49 91       	ld	r20, Y+
 90e:	59 91       	ld	r21, Y+
 910:	c4 0f       	add	r28, r20
 912:	d5 1f       	adc	r29, r21
 914:	ec 17       	cp	r30, r28
 916:	fd 07       	cpc	r31, r29
 918:	61 f4       	brne	.+24     	; 0x932 <free+0xbe>
 91a:	80 81       	ld	r24, Z
 91c:	91 81       	ldd	r25, Z+1	; 0x01
 91e:	84 0f       	add	r24, r20
 920:	95 1f       	adc	r25, r21
 922:	02 96       	adiw	r24, 0x02	; 2
 924:	e9 01       	movw	r28, r18
 926:	99 83       	std	Y+1, r25	; 0x01
 928:	88 83       	st	Y, r24
 92a:	82 81       	ldd	r24, Z+2	; 0x02
 92c:	93 81       	ldd	r25, Z+3	; 0x03
 92e:	9b 83       	std	Y+3, r25	; 0x03
 930:	8a 83       	std	Y+2, r24	; 0x02
 932:	e0 e0       	ldi	r30, 0x00	; 0
 934:	f0 e0       	ldi	r31, 0x00	; 0
 936:	12 96       	adiw	r26, 0x02	; 2
 938:	8d 91       	ld	r24, X+
 93a:	9c 91       	ld	r25, X
 93c:	13 97       	sbiw	r26, 0x03	; 3
 93e:	00 97       	sbiw	r24, 0x00	; 0
 940:	19 f0       	breq	.+6      	; 0x948 <free+0xd4>
 942:	fd 01       	movw	r30, r26
 944:	dc 01       	movw	r26, r24
 946:	f7 cf       	rjmp	.-18     	; 0x936 <free+0xc2>
 948:	8d 91       	ld	r24, X+
 94a:	9c 91       	ld	r25, X
 94c:	11 97       	sbiw	r26, 0x01	; 1
 94e:	9d 01       	movw	r18, r26
 950:	2e 5f       	subi	r18, 0xFE	; 254
 952:	3f 4f       	sbci	r19, 0xFF	; 255
 954:	82 0f       	add	r24, r18
 956:	93 1f       	adc	r25, r19
 958:	20 91 4f 01 	lds	r18, 0x014F	; 0x80014f <__brkval>
 95c:	30 91 50 01 	lds	r19, 0x0150	; 0x800150 <__brkval+0x1>
 960:	28 17       	cp	r18, r24
 962:	39 07       	cpc	r19, r25
 964:	69 f4       	brne	.+26     	; 0x980 <free+0x10c>
 966:	30 97       	sbiw	r30, 0x00	; 0
 968:	29 f4       	brne	.+10     	; 0x974 <free+0x100>
 96a:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <__flp+0x1>
 96e:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <__flp>
 972:	02 c0       	rjmp	.+4      	; 0x978 <free+0x104>
 974:	13 82       	std	Z+3, r1	; 0x03
 976:	12 82       	std	Z+2, r1	; 0x02
 978:	b0 93 50 01 	sts	0x0150, r27	; 0x800150 <__brkval+0x1>
 97c:	a0 93 4f 01 	sts	0x014F, r26	; 0x80014f <__brkval>
 980:	df 91       	pop	r29
 982:	cf 91       	pop	r28
 984:	08 95       	ret

00000986 <_exit>:
 986:	f8 94       	cli

00000988 <__stop_program>:
 988:	ff cf       	rjmp	.-2      	; 0x988 <__stop_program>
